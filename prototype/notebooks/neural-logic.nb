(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1125969,      22639]
NotebookOptionsPosition[   1114475,      22432]
NotebookOutlinePosition[   1114913,      22449]
CellTagsIndexPosition[   1114870,      22446]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Neural Logic", "Title",
 CellChangeTimes->{{3.864793590384657*^9, 
  3.864793591864854*^9}},ExpressionUUID->"e16c6739-4a62-4e56-b75b-\
c3030d8dbab8"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<neural-logic.m\>\"", ",", 
   RowBox[{"Path", "->", 
    RowBox[{"SetDirectory", "[", 
     RowBox[{"ParentDirectory", "[", 
      RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.868007248648005*^9, {3.8680967888160133`*^9, 3.868096789366823*^9}, {
   3.8683400413446283`*^9, 3.86834004226679*^9}, {3.868341129383319*^9, 
   3.868341129948553*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "neurallogic`*"}]], "Input",
 CellChangeTimes->{{3.864791111748754*^9, 3.8647911154679937`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["DifferentiableHardAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "DifferentiableHardAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardeningLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardeningLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNeuralMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardWeightSize", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardWeightSize", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RandomNormalSoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "RandomNormalSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DifferentiableHardNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "DifferentiableHardNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNeuralNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBalanced", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "InitializeBalanced", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RandomUniformSoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "RandomUniformSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DifferentiableHardOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "DifferentiableHardOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNeuralNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBiasToOne", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "InitializeBiasToOne", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Require", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "Require", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExtractWeights", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "ExtractWeights", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNetFunction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNeuralNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBiasToZero", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "InitializeBiasToZero", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "SoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeToConstant", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "InitializeToConstant", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Soften", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "Soften", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClassificationLoss", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardClassificationLoss", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralChain", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNeuralChain", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralReshapeLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNeuralReshapeLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LogisticClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "LogisticClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftWeightSize", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "SoftWeightSize", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralCount", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNeuralCount", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "NeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SpaceSaving", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "SpaceSaving", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardDropoutLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardDropoutLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralExactlyK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNeuralExactlyK", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "NeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["Harden", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "Harden", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralLTEK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardNeuralLTEK", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "HardOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["RandomBalancedNormalSoftBits", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-81693121-3d50-43d0-8cfa-09720de310b7", {
                   "RandomBalancedNormalSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.19]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVz28w03EABvCRaXUV7TqVS440RDvUrV5wbhTTJRo5Ry/cqLukRJvGMtuU
rj+7jpNS3C0qSf67pT+cq+wSM5NIrlb+dKxfXTVja4ue74vnPm+eF8/jJcjm
H3Og0WipiJ0vXyXvp7jigCcuxM+qSh7RmBqeQ/TtqhYRf8VVlBInZQta4kVr
iKMClteOc4hze+/EExlNha1ENtMiLIZfr+r6SyHv0vkx4o6PzlvLYA/zqHs5
tCuqIh5BzQmP4GUY5PrhHLHXM2KeaFW9q6ANUFynYUmZA3SO2nlhBRQe3KAk
LvgFMp2goDumjgErFUOzD0nPLMuvh2ta60JaYZL/uilifQ1/kZglbO5pg2We
DwzEkpmB2XZ4pStneweMrOpd3Qm7DQ1MPQwSv2+2QfsW6UaGluI226S3/aC5
3+yWBnUthxvTYQZL/6wIMh4HS+RwPoX9YxAeOl28SQ/V/vd3j8HXeeJ/PoPY
ZdpVFQvzpO26FNjRMlFYADUTT6/1wesjHmpiwdo9Nz/BzEaj3AxZget5i1B6
5oDQAtvOOtKtcL4zzPYXpgsuCwJ0FHeb1l0UD+OaSvOJY2JOcgLsHv09lwi9
xa/6jsDjE4b9SVA25TZJVN3KMIlgos1dQh+iuDW6leOJ0Mcxuf0u9M4yBo/A
wE6qegluno4N9dDjX8kpNQtS33NdfOGX8eejkVDhRTMR9y3NBPDgyehpZQJU
LTcMJcEY9ovMWnivKI1TB791+aS8hAvOMdnEPwWub4k/ww2hGvjGTXmDaEml
V2hhWG52VMQwxeU0hcui4X8uDqE+
  "],
 CellLabel->"Out[2]=",ExpressionUUID->"52548520-b90c-4bc8-ac2f-aadbf0328f49"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utilities", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.8666054582437687`*^9, 
  3.866605459643314*^9}},ExpressionUUID->"c980f6be-656d-464c-97de-\
7bbd91e03ade"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HardPrediction", "[", "m_", "]"}], ":=", 
  RowBox[{"Ordering", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", "=", 
           RowBox[{"#", "[", "True", "]"}]}], "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MissingQ", "[", "t", "]"}], ",", "0", ",", "t"}], "]"}]}],
         "]"}], "&"}], ")"}], "/@", 
     RowBox[{"Counts", "/@", "m"}]}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HardTarget", "[", "t_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Position", "[", 
    RowBox[{"t", ",", "True"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HardResults", "[", "hardPredictionTargetPairs_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"results", ",", "accuracy"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"results", "=", 
      RowBox[{"Reverse", "[", 
       RowBox[{"Sort", "[", 
        RowBox[{"Counts", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"HardPrediction", "[", 
               RowBox[{"First", "[", "#", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"HardTarget", "[", 
               RowBox[{"Last", "[", "#", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], "/@", 
          "hardPredictionTargetPairs"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"accuracy", "=", 
      RowBox[{"KeySelect", "[", 
       RowBox[{"results", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "#", "]"}], "==", 
          RowBox[{"Last", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Accuracy = \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"Total", "[", "accuracy", "]"}], 
           RowBox[{"Length", "[", "hardPredictionTargetPairs", "]"}]], "*", 
          "100.0"}], "]"}], "<>", "\"\<%\>\""}], ",", "results"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.866544665069222*^9, 3.866544678336033*^9}, {
  3.866544717412966*^9, 3.866544787984428*^9}, {3.866544845678438*^9, 
  3.866544933668165*^9}, {3.866545008326929*^9, 3.866545292029965*^9}, {
  3.866545452822143*^9, 3.86654557558593*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a640c9f1-9738-4c46-b19d-979750434b3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HardPrediction", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.867227950964772*^9, 3.867227975562758*^9}, {
  3.867480105517453*^9, 3.867480107005077*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"f98077b4-8d7e-401d-8481-6508057768cf"],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Output",
 CellChangeTimes->{3.867227976087944*^9, 3.867480107441572*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e4ae1fb4-c0bc-4bf3-89db-46ae92637e0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HardPrediction", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8672279902982407`*^9, 3.8672280084975967`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"d9b20918-29d1-46bd-b70f-acfd27b2c0a3"],

Cell[BoxData[
 RowBox[{"{", "2", "}"}]], "Output",
 CellChangeTimes->{{3.867227992235056*^9, 3.867228008956266*^9}, 
   3.867480108955101*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"37311f9f-d207-4160-970d-ddd98433cd87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HardPrediction", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.867228025234231*^9, 3.867228036921878*^9}},
 CellLabel->
  "In[742]:=",ExpressionUUID->"cf906399-5828-4b87-80e7-ddc37d71aa2a"],

Cell["Null", "Output",ExpressionUUID->"a059d7eb-fb26-44d7-914e-ed15b2f67445"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Learn XOR", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 
  3.864793644095471*^9}},ExpressionUUID->"e172cf77-104a-417b-9e8b-\
0895cfdd6efc"],

Cell[CellGroupData[{

Cell["Generate training data", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 
  3.864793759486944*^9}},ExpressionUUID->"ea4901f7-e0c3-4d87-b293-\
6cf447e04ea7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numBooleanVariables", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Echo", "[", 
   SuperscriptBox["2", "numBooleanVariables"], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bf", "=", 
   RowBox[{"BooleanConvert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Xor", "[", 
       RowBox[{
       "#1", ",", "#2", ",", "#3", ",", "#4", ",", "#5", ",", "#6", ",", "#7",
         ",", "#8", ",", "#9", ",", "#10"}], "]"}], "&"}], ",", 
     "\"\<BooleanFunction\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxExamples", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numClasses", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"examples", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", "=", 
          RowBox[{"RandomChoice", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", "numBooleanVariables"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"Soften", "/@", "x"}], "->", 
         RowBox[{"Soften", "[", 
          RowBox[{"Boole", "[", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r", "=", 
               RowBox[{"bf", "@@", "x"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"r", ",", 
               RowBox[{"!", "r"}]}], "}"}]}], "]"}], "]"}], "]"}]}]}], "]"}], 
      "&"}], ",", 
     RowBox[{"Range", "[", "maxExamples", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{"examples", ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.2", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8631507903678637`*^9, 3.8631507905196667`*^9}, {
   3.863151242837092*^9, 3.863151247696003*^9}, 3.863158542401339*^9, 
   3.863163212116626*^9, 3.8631766947235193`*^9, 3.863176797755232*^9, {
   3.863179909310301*^9, 3.863179923837204*^9}, {3.863243605533627*^9, 
   3.863243620585451*^9}, {3.86324880283392*^9, 3.863248807664549*^9}, 
   3.863261133634419*^9, {3.86326137325694*^9, 3.8632614056637583`*^9}, {
   3.863261437377194*^9, 3.863261502775928*^9}, {3.8632617677613983`*^9, 
   3.863261767960438*^9}, {3.8632618648892*^9, 3.8632618650156393`*^9}, {
   3.863263609082129*^9, 3.863263612112956*^9}, {3.8632641205013657`*^9, 
   3.8632641216097193`*^9}, {3.8632646726440353`*^9, 
   3.8632646847617817`*^9}, {3.863265794153249*^9, 3.863265797374902*^9}, {
   3.86326617446527*^9, 3.8632661766776447`*^9}, {3.8632663950099487`*^9, 
   3.863266397423538*^9}, {3.863266602290083*^9, 3.863266603667367*^9}, {
   3.863267749709738*^9, 3.8632677506435137`*^9}, {3.863268331863552*^9, 
   3.863268332996944*^9}, {3.864793623697935*^9, 3.864793626168922*^9}, {
   3.864793718272374*^9, 3.864793728328333*^9}, {3.8647937905288*^9, 
   3.864793839705696*^9}, {3.8648255889830313`*^9, 3.864825592504498*^9}, {
   3.864825624917417*^9, 3.864825626880946*^9}, {3.864829407265236*^9, 
   3.8648294087742167`*^9}, {3.864829443456806*^9, 3.864829444846697*^9}, {
   3.864829792396603*^9, 3.8648297927316837`*^9}, {3.864830032545388*^9, 
   3.8648300662967587`*^9}, 3.86483040909219*^9, {3.864830633132044*^9, 
   3.8648306348014383`*^9}, {3.8648309522842607`*^9, 
   3.8648309524254227`*^9}, {3.864831241412085*^9, 3.8648312465735483`*^9}, {
   3.864831361588151*^9, 3.864831427353725*^9}, {3.864831467589365*^9, 
   3.864831467738257*^9}, {3.8650545097885313`*^9, 3.865054521919083*^9}, {
   3.865574752812943*^9, 3.865574784399784*^9}, {3.865592534192895*^9, 
   3.865592534298318*^9}, {3.865592762627692*^9, 3.8655927636071053`*^9}, {
   3.865594557687479*^9, 3.865594557984342*^9}, {3.865594963476437*^9, 
   3.8655949635928717`*^9}, {3.865780594387285*^9, 3.8657805954725647`*^9}, {
   3.86578528554428*^9, 3.865785286930284*^9}, {3.8658288989019117`*^9, 
   3.865828899235673*^9}, {3.865830427368958*^9, 3.865830428545253*^9}, {
   3.865830742328867*^9, 3.8658307442321053`*^9}, {3.865831732136331*^9, 
   3.8658317341109133`*^9}, {3.865837020252844*^9, 3.865837020623869*^9}, {
   3.8658371834605103`*^9, 3.865837184543343*^9}, {3.8658377080420017`*^9, 
   3.865837708413855*^9}, {3.865837740366976*^9, 3.86583774055787*^9}, {
   3.865859522557151*^9, 3.865859523313833*^9}, {3.865859830431425*^9, 
   3.865859831995036*^9}, {3.865866201299968*^9, 3.865866202414603*^9}, {
   3.8658663169608183`*^9, 3.865866318295281*^9}, {3.865866383754406*^9, 
   3.8658663858232803`*^9}, {3.8660002644683657`*^9, 3.866000265575876*^9}, {
   3.866000397664502*^9, 3.866000398839758*^9}, {3.8660004574432163`*^9, 
   3.8660004580794077`*^9}, {3.8666042520823517`*^9, 3.866604264374364*^9}, {
   3.866604302861124*^9, 3.866604304397232*^9}, {3.866604362727042*^9, 
   3.866604365684434*^9}, {3.866634397416646*^9, 3.86663441391949*^9}, {
   3.866634545413786*^9, 3.866634547171479*^9}, {3.8666346718798122`*^9, 
   3.866634702156291*^9}, {3.867671157222414*^9, 3.867671157363698*^9}, {
   3.868095338683979*^9, 3.868095349658772*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a1d35da7-df69-4f5a-aded-2375da917235"],

Cell[BoxData["1024"], "Echo",
 CellChangeTimes->{
  3.868410044962035*^9},ExpressionUUID->"c5a032b3-c31d-4116-ae58-\
de03d5f9c5af"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hard neural logic", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.866604080745175*^9, 
  3.8666040868730593`*^9}},ExpressionUUID->"741eda3f-af0a-4750-965a-\
e5d5e10c6c4b"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86660409306982*^9, 
  3.866604093249838*^9}},ExpressionUUID->"78cdb806-63d5-4627-b46f-\
81c4507b63c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", "trainData", "]"}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.86678913871952*^9, 3.86678914729805*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"58a7a509-6e27-4603-86a4-437a1775943b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"4", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralNOT", "[", "inputSize", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{"inputSize", ",", "250"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"HardNeuralOR", "[", 
         RowBox[{"250", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralReshapeLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866512854091155*^9, 3.8665128815568047`*^9}, {
   3.866513103300004*^9, 3.866513116326098*^9}, {3.8665133340990458`*^9, 
   3.8665133419773703`*^9}, {3.86651391128594*^9, 3.866513915466413*^9}, {
   3.866514318655335*^9, 3.866514323501399*^9}, {3.866514602855854*^9, 
   3.866514605749691*^9}, {3.86651468027989*^9, 3.8665147385101433`*^9}, {
   3.8665168378259563`*^9, 3.866516840683816*^9}, {3.866516968713831*^9, 
   3.866516971903157*^9}, {3.8665173610656767`*^9, 3.866517372695388*^9}, 
   3.866517444884035*^9, {3.86651878744969*^9, 3.8665188117507257`*^9}, {
   3.866518954624714*^9, 3.866518969573318*^9}, {3.866520101802957*^9, 
   3.866520108575643*^9}, {3.866520188881999*^9, 3.8665202157280684`*^9}, {
   3.866520364293333*^9, 3.866520392296053*^9}, {3.86652044871375*^9, 
   3.8665204631835423`*^9}, {3.8665219880508347`*^9, 3.866522005928316*^9}, {
   3.8665272161026173`*^9, 3.8665272312695007`*^9}, {3.866527801201952*^9, 
   3.866527883631137*^9}, {3.866528045329198*^9, 3.8665280486071043`*^9}, {
   3.866528154113455*^9, 3.8665281741152687`*^9}, {3.866528447153947*^9, 
   3.866528447260316*^9}, {3.866528670002123*^9, 3.86652867583491*^9}, {
   3.86652876246611*^9, 3.86652876256351*^9}, {3.866528813858374*^9, 
   3.866528848079921*^9}, {3.866530033731058*^9, 3.866530050034823*^9}, {
   3.866532603007605*^9, 3.8665326199562283`*^9}, {3.8665328331522837`*^9, 
   3.866532845529175*^9}, {3.866532894976413*^9, 3.866532895812646*^9}, {
   3.8665329705120907`*^9, 3.866532996865466*^9}, {3.866533798129952*^9, 
   3.866533798585582*^9}, {3.866542948856092*^9, 3.866542956003662*^9}, {
   3.866543312214932*^9, 3.8665433126315613`*^9}, {3.866545711295557*^9, 
   3.866545711720436*^9}, {3.866546071686404*^9, 3.866546081040039*^9}, {
   3.866547900239717*^9, 3.8665479093644657`*^9}, {3.866549693552167*^9, 
   3.866549704088811*^9}, {3.866550126984569*^9, 3.8665501393456163`*^9}, {
   3.866551310563048*^9, 3.866551316716016*^9}, {3.866552552251585*^9, 
   3.866552552469812*^9}, {3.866552612077286*^9, 3.866552621902178*^9}, {
   3.86655297295109*^9, 3.8665530085584908`*^9}, {3.866553815227034*^9, 
   3.866553831744128*^9}, {3.866554274483659*^9, 3.8665542884172983`*^9}, {
   3.866554409228067*^9, 3.866554412577661*^9}, {3.866554466780363*^9, 
   3.866554467185257*^9}, {3.866554546724543*^9, 3.866554547081894*^9}, {
   3.866554637927086*^9, 3.866554643213908*^9}, {3.8665551202789803`*^9, 
   3.866555125450521*^9}, {3.866555219318622*^9, 3.8665552411393957`*^9}, {
   3.866555370545534*^9, 3.866555374243248*^9}, {3.866600476190877*^9, 
   3.866600520811289*^9}, {3.866600851629229*^9, 3.8666008545843487`*^9}, {
   3.866601173213505*^9, 3.866601184697352*^9}, {3.866602823213896*^9, 
   3.866602823651602*^9}, {3.866604371939287*^9, 3.866604381826564*^9}, {
   3.866604749040091*^9, 3.8666047509630136`*^9}, {3.866604849825338*^9, 
   3.866604850409642*^9}, {3.866604910415758*^9, 3.8666049155794764`*^9}, {
   3.8666049635848503`*^9, 3.866604963802972*^9}, {3.8666050360329323`*^9, 
   3.8666050443319817`*^9}, {3.8666050857854013`*^9, 3.866605102679984*^9}, {
   3.866605133064426*^9, 3.866605167596745*^9}, 3.8666053219956837`*^9, {
   3.866605368956347*^9, 3.866605372897883*^9}, {3.866608559321225*^9, 
   3.86660857578793*^9}, {3.8666256514454317`*^9, 3.8666256570367737`*^9}, {
   3.866625747091804*^9, 3.866625749618054*^9}, {3.866625787684525*^9, 
   3.8666257907528152`*^9}, {3.8666258795422707`*^9, 3.866625882833005*^9}, {
   3.866626038446534*^9, 3.866626043128318*^9}, {3.866626077493651*^9, 
   3.866626081166033*^9}, {3.866634901739232*^9, 3.866634904401794*^9}, {
   3.86678873629885*^9, 3.866788736859007*^9}, {3.866788795186584*^9, 
   3.866788797694313*^9}, {3.8667891530822077`*^9, 3.866789154124004*^9}, {
   3.866800206265554*^9, 3.866800215024955*^9}, 3.866864934672009*^9, {
   3.867583261611472*^9, 3.86758326430956*^9}, 3.868078626392386*^9, {
   3.868078751184596*^9, 3.868078763479973*^9}, {3.868079693635331*^9, 
   3.868079731711684*^9}, {3.868079771114848*^9, 3.868079771892219*^9}, {
   3.868079826790793*^9, 3.868079826970495*^9}, {3.8680960627939796`*^9, 
   3.868096097814007*^9}, {3.868096278330597*^9, 3.868096287564961*^9}, {
   3.868096361084002*^9, 3.8680963760035353`*^9}, {3.868097353083192*^9, 
   3.868097359152732*^9}, 3.868097728956376*^9, {3.868341989247307*^9, 
   3.868341991217548*^9}, {3.868361738187723*^9, 3.868361743035413*^9}, {
   3.8683617787973843`*^9, 3.8683617899588957`*^9}, {3.868361869796091*^9, 
   3.868361874567515*^9}, {3.868362155149584*^9, 3.868362160703273*^9}, {
   3.86836224054467*^9, 3.8683622406543293`*^9}, {3.8683622781244097`*^9, 
   3.868362292672575*^9}, {3.8683625068713284`*^9, 3.86836250698913*^9}, {
   3.868410265163364*^9, 3.868410266983426*^9}, {3.868410337029778*^9, 
   3.868410367332881*^9}},ExpressionUUID->"9f7ed563-e3db-4f0c-b6ae-\
311c23f293e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"8", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"inputSize", ",", "50"}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"HardDropoutLayer", "[", "0.25", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"50", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralReshapeLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866613777500483*^9, 3.866613821043852*^9}, {
   3.866613926333091*^9, 3.866613930531905*^9}, {3.866626083815942*^9, 
   3.866626086822467*^9}, {3.866634907171651*^9, 3.86663490948984*^9}, {
   3.866788799974736*^9, 3.866788801526519*^9}, {3.866789160113908*^9, 
   3.866789161089756*^9}, {3.8668002187768106`*^9, 3.866800226245089*^9}, 
   3.8668649413004713`*^9, {3.868079834269272*^9, 3.868079855577284*^9}, {
   3.8680800097335777`*^9, 3.8680800236039543`*^9}, {3.868080065710907*^9, 
   3.868080109250407*^9}, {3.868082277506411*^9, 3.868082282846843*^9}, {
   3.8680823135378942`*^9, 3.8680823467111893`*^9}, {3.868082398321929*^9, 
   3.868082403311109*^9}, {3.868082450330059*^9, 3.8680824734389687`*^9}, {
   3.8680826243462753`*^9, 3.8680826261993227`*^9}, {3.868093913038671*^9, 
   3.868093915117836*^9}, {3.868094121115714*^9, 3.8680941321352997`*^9}, {
   3.868094165599618*^9, 3.868094184216015*^9}, {3.868094434336821*^9, 
   3.868094437631937*^9}, {3.868094694069008*^9, 3.8680946999277277`*^9}, {
   3.868094738149344*^9, 3.868094742288522*^9}, {3.868094880184539*^9, 
   3.8680948903555927`*^9}, {3.868094957619068*^9, 3.868094963192429*^9}, {
   3.868095358374504*^9, 3.8680953594237957`*^9}, {3.868095391621917*^9, 
   3.868095396223934*^9}, {3.868095430526176*^9, 3.868095432664307*^9}, {
   3.868095484934177*^9, 3.868095515680094*^9}, {3.868095573311261*^9, 
   3.8680955753602457`*^9}, {3.868095639986772*^9, 3.868095649555504*^9}, {
   3.868095750594564*^9, 3.868095755464787*^9}, {3.86809582235927*^9, 
   3.868095825032096*^9}, {3.868095894664363*^9, 3.868095897672505*^9}, {
   3.8680959371380568`*^9, 3.868095946484288*^9}, {3.868096052675674*^9, 
   3.868096057968585*^9}, {3.868341995574396*^9, 3.8683419963055153`*^9}, {
   3.8683612317222652`*^9, 3.86836123506921*^9}, {3.868361533899996*^9, 
   3.868361572194687*^9}, {3.868361603498942*^9, 3.868361647963326*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"278acab4-3241-466c-905c-bc0ec791ddf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"softNet", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<NeuralLogicNet\>\"", "->", "net"}], ",", 
      RowBox[{"\"\<Loss\>\"", "->", 
       RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
     "\[RightAssociation]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<NeuralLogicNet\>\"", "->", "\"\<Loss\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.866020485648757*^9, 3.866020486758964*^9}, {
   3.8660206133758917`*^9, 3.86602061576938*^9}, {3.866021594138579*^9, 
   3.866021622648958*^9}, {3.86602221641733*^9, 3.866022259472351*^9}, {
   3.86602506519114*^9, 3.8660250652828293`*^9}, {3.866027283063545*^9, 
   3.866027305459503*^9}, {3.866027571359556*^9, 3.866027577807056*^9}, {
   3.866028577017147*^9, 3.866028577337102*^9}, {3.866028739939226*^9, 
   3.866028740417481*^9}, {3.866038386270308*^9, 3.866038393509417*^9}, {
   3.866038426793558*^9, 3.866038432549663*^9}, {3.866038541734429*^9, 
   3.866038552581696*^9}, {3.8660399839336977`*^9, 3.8660400476873417`*^9}, {
   3.866040086377454*^9, 3.866040113183221*^9}, {3.8660842202209263`*^9, 
   3.8660842234441147`*^9}, {3.866084729086014*^9, 3.8660847389004602`*^9}, {
   3.866084883181377*^9, 3.866084891034108*^9}, {3.866087944385981*^9, 
   3.866087946377273*^9}, {3.8660898129249763`*^9, 3.866089819116226*^9}, {
   3.8660918927590847`*^9, 3.866091896174137*^9}, {3.866118640249077*^9, 
   3.8661186553525763`*^9}, {3.8661697941751633`*^9, 3.86616982143332*^9}, {
   3.8661700477905827`*^9, 3.866170062053422*^9}, {3.866170430900312*^9, 
   3.866170441150339*^9}, {3.866171085971992*^9, 3.866171092538931*^9}, {
   3.8661713117235622`*^9, 3.866171323794742*^9}, {3.866172075114151*^9, 
   3.866172086385466*^9}, {3.8661726453612757`*^9, 3.8661726565682907`*^9}, {
   3.866172963402001*^9, 3.866172967303824*^9}, {3.866175492855685*^9, 
   3.86617549327916*^9}, {3.8661755786344223`*^9, 3.866175597119087*^9}, {
   3.866176135095639*^9, 3.866176139335493*^9}, {3.866176563216754*^9, 
   3.866176567303925*^9}, {3.866177234452429*^9, 3.866177240033128*^9}, {
   3.866177471626033*^9, 3.866177471849081*^9}, {3.8661781260498943`*^9, 
   3.866178174045168*^9}, {3.866179499382938*^9, 3.866179520538422*^9}, {
   3.866180308892374*^9, 3.866180328231532*^9}, {3.866180620692492*^9, 
   3.866180620811393*^9}, {3.866180727174838*^9, 3.866180728856566*^9}, {
   3.8661809278929253`*^9, 3.866180930764296*^9}, {3.866181239813146*^9, 
   3.866181242692215*^9}, {3.866184773364808*^9, 3.866184773468157*^9}, {
   3.866184929896516*^9, 3.866184931032365*^9}, {3.866185363169696*^9, 
   3.866185363420731*^9}, {3.866185838820908*^9, 3.866185842136413*^9}, {
   3.8661861874248247`*^9, 3.866186188480125*^9}, {3.86618706378515*^9, 
   3.866187066984132*^9}, {3.866209107928833*^9, 3.866209126148491*^9}, {
   3.866209156593391*^9, 3.8662091576123867`*^9}, {3.866209702848567*^9, 
   3.866209710039878*^9}, {3.866209813177039*^9, 3.866209834123746*^9}, {
   3.86621053449234*^9, 3.866210540769287*^9}, {3.866210581043235*^9, 
   3.8662105868693542`*^9}, {3.866210622339385*^9, 3.866210627545692*^9}, {
   3.866210657739574*^9, 3.8662106609137363`*^9}, {3.866210756731784*^9, 
   3.866210768609764*^9}, {3.866211193549685*^9, 3.8662112016988564`*^9}, {
   3.866211352173271*^9, 3.866211355378903*^9}, {3.8662114673335752`*^9, 
   3.866211471635058*^9}, {3.8662116682945633`*^9, 3.86621167888715*^9}, 
   3.8662117763988447`*^9, {3.866211833182128*^9, 3.8662118352832003`*^9}, {
   3.86621193783076*^9, 3.866211943219183*^9}, {3.866214069618958*^9, 
   3.866214085207219*^9}, {3.86621414917101*^9, 3.866214201293022*^9}, {
   3.866214582928615*^9, 3.866214586096209*^9}, {3.8662146462687683`*^9, 
   3.8662146535499763`*^9}, {3.866214940556902*^9, 3.866214945432839*^9}, {
   3.86625367959163*^9, 3.86625368544868*^9}, {3.8662538129344873`*^9, 
   3.866253817785205*^9}, {3.866254549496963*^9, 3.866254555093663*^9}, {
   3.8662546252320347`*^9, 3.866254645248086*^9}, {3.866254759667647*^9, 
   3.8662547607426033`*^9}, {3.866254889744342*^9, 3.8662548909149446`*^9}, {
   3.866254921233653*^9, 3.866254922151456*^9}, {3.866255111823483*^9, 
   3.866255112738577*^9}, 3.8662574558616056`*^9, {3.866257625671372*^9, 
   3.8662576360908813`*^9}, {3.866257668990629*^9, 3.866257673154139*^9}, {
   3.866258160607082*^9, 3.866258163488317*^9}, {3.866258216054822*^9, 
   3.866258216152341*^9}, {3.866258465946023*^9, 3.8662584660890408`*^9}, {
   3.8662587584666643`*^9, 3.866258758714335*^9}, {3.8662591656591253`*^9, 
   3.866259171110828*^9}, {3.8662595439403343`*^9, 3.866259575288472*^9}, {
   3.866260163911601*^9, 3.866260184078418*^9}, {3.86626215222803*^9, 
   3.8662621832516203`*^9}, {3.866263109109415*^9, 3.86626311329671*^9}, {
   3.8662634113702927`*^9, 3.866263445027198*^9}, {3.8662637295611134`*^9, 
   3.8662637341766987`*^9}, {3.8662638454628477`*^9, 3.86626384912811*^9}, {
   3.866264629557499*^9, 3.866264632526574*^9}, {3.866264756302319*^9, 
   3.866264756571878*^9}, {3.86626485570925*^9, 3.8662648604861727`*^9}, {
   3.866264906589533*^9, 3.866264909654014*^9}, {3.8662650173821917`*^9, 
   3.866265024103039*^9}, {3.866267932128647*^9, 3.866267936947571*^9}, {
   3.866272289890004*^9, 3.866272326071719*^9}, 3.866272498086396*^9, {
   3.866272605318948*^9, 3.8662726100556726`*^9}, {3.866272697696899*^9, 
   3.8662727061238422`*^9}, {3.866272804197109*^9, 3.866272807076984*^9}, {
   3.866272890576043*^9, 3.8662729018249826`*^9}, {3.866273061136441*^9, 
   3.866273079881092*^9}, {3.8662739928242073`*^9, 3.866274026656089*^9}, {
   3.866274121640194*^9, 3.86627415310497*^9}, {3.8662742538084593`*^9, 
   3.866274260924819*^9}, {3.86627447707015*^9, 3.866274491178595*^9}, {
   3.866274954835182*^9, 3.866274972215249*^9}, {3.8662751949711027`*^9, 
   3.866275214973873*^9}, {3.866275317133552*^9, 3.866275326157571*^9}, {
   3.866276341927771*^9, 3.866276342361364*^9}, {3.866276444445874*^9, 
   3.866276444758065*^9}, 3.866276574032675*^9, {3.8662774805759163`*^9, 
   3.866277486441833*^9}, {3.866277730486899*^9, 3.866277745606361*^9}, {
   3.866277812901185*^9, 3.8662778241863747`*^9}, {3.866277923447342*^9, 
   3.866277942127078*^9}, {3.866278044847097*^9, 3.866278070211129*^9}, {
   3.866278491367318*^9, 3.866278493966505*^9}, {3.866278580024693*^9, 
   3.8662785830122213`*^9}, {3.866278895153315*^9, 3.866278898232675*^9}, {
   3.866280230366321*^9, 3.86628024016776*^9}, 3.866280351079256*^9, {
   3.866280499461529*^9, 3.8662805080447283`*^9}, {3.866280639515723*^9, 
   3.8662806449211483`*^9}, {3.866280754797947*^9, 3.86628075810079*^9}, {
   3.866280876373425*^9, 3.866280889329287*^9}, 3.866281009490582*^9, {
   3.8662811039106913`*^9, 3.866281107962268*^9}, {3.866281186723476*^9, 
   3.866281191533492*^9}, {3.8662812575988626`*^9, 3.866281268830084*^9}, {
   3.8662813166116953`*^9, 3.866281325765922*^9}, {3.866282044987713*^9, 
   3.866282048676916*^9}, {3.866282148870701*^9, 3.866282152685348*^9}, {
   3.86628313823394*^9, 3.8662831431981792`*^9}, {3.866283203895447*^9, 
   3.8662832148382063`*^9}, {3.8662832951824627`*^9, 
   3.8662833056304398`*^9}, {3.866283478244402*^9, 3.866283487341878*^9}, {
   3.8662841436542883`*^9, 3.86628415025281*^9}, {3.866284940968055*^9, 
   3.866284945101494*^9}, {3.866285029031362*^9, 3.866285034053158*^9}, {
   3.866285238231142*^9, 3.8662852400450497`*^9}, {3.8662854784494677`*^9, 
   3.866285480030343*^9}, {3.8662855684494333`*^9, 3.866285589220209*^9}, {
   3.866285661897065*^9, 3.866285665049341*^9}, {3.866286012525502*^9, 
   3.866286023701212*^9}, {3.866286183975936*^9, 3.866286197019022*^9}, {
   3.866286343624745*^9, 3.8662863761838703`*^9}, {3.86628647476213*^9, 
   3.866286478513227*^9}, {3.866286583730136*^9, 3.866286589629998*^9}, {
   3.8662866316154537`*^9, 3.866286632298744*^9}, {3.866286684611227*^9, 
   3.866286694033737*^9}, {3.866286815683847*^9, 3.866286826001635*^9}, {
   3.8662869515842*^9, 3.866286957090143*^9}, {3.866287432190014*^9, 
   3.866287433732437*^9}, {3.8662875714309177`*^9, 3.866287575508819*^9}, {
   3.866287972431319*^9, 3.866287979390542*^9}, {3.8662881211610413`*^9, 
   3.866288128734665*^9}, {3.866301184432645*^9, 3.866301189032214*^9}, {
   3.866301252666163*^9, 3.866301255952261*^9}, {3.866301376402754*^9, 
   3.866301391652487*^9}, {3.866301466042976*^9, 3.866301469288639*^9}, {
   3.866301630395039*^9, 3.866301653060717*^9}, {3.866301748836125*^9, 
   3.866301755312545*^9}, {3.86630188485115*^9, 3.866301888560711*^9}, {
   3.866302280747377*^9, 3.8663022952887983`*^9}, {3.866302405795878*^9, 
   3.866302419001148*^9}, {3.866302495340143*^9, 3.866302504605687*^9}, {
   3.866350591374894*^9, 3.8663505951022243`*^9}, {3.866351142159863*^9, 
   3.866351179558625*^9}, {3.8663515938249702`*^9, 3.866351597311022*^9}, {
   3.8663516429930353`*^9, 3.866351646919097*^9}, {3.8663540899964314`*^9, 
   3.866354091250739*^9}, 3.866354227060774*^9, {3.866354342347616*^9, 
   3.866354366019519*^9}, {3.866354536533381*^9, 3.866354542835105*^9}, {
   3.866354615988611*^9, 3.866354616498942*^9}, {3.866354747316181*^9, 
   3.866354747986311*^9}, {3.866354820971937*^9, 3.866354830674176*^9}, {
   3.866354985259542*^9, 3.866355003354249*^9}, {3.866355243555305*^9, 
   3.866355280233426*^9}, {3.866355363275181*^9, 3.8663553649290257`*^9}, {
   3.866355508482728*^9, 3.8663555086333237`*^9}, {3.866355904531114*^9, 
   3.8663559105053043`*^9}, {3.866355992402801*^9, 3.866356013229351*^9}, {
   3.866356256538742*^9, 3.866356257041319*^9}, {3.866356472449071*^9, 
   3.866356473280033*^9}, {3.8663565818412313`*^9, 3.866356588441074*^9}, {
   3.866356990748909*^9, 3.866356994266841*^9}, {3.8663571204214773`*^9, 
   3.866357120574224*^9}, {3.8663572027579412`*^9, 3.8663572078996153`*^9}, {
   3.866357620436617*^9, 3.866357634688436*^9}, {3.866357667446629*^9, 
   3.866357681140574*^9}, {3.8663583040873337`*^9, 3.866358308549032*^9}, {
   3.866358702488315*^9, 3.866358710660177*^9}, {3.866358792502235*^9, 
   3.866358792643732*^9}, {3.8663588650968037`*^9, 3.866358870370079*^9}, {
   3.8663590601050797`*^9, 3.866359061311141*^9}, {3.866359100825281*^9, 
   3.8663591032317047`*^9}, {3.866360392667655*^9, 3.866360402393593*^9}, {
   3.866360446451545*^9, 3.866360454122822*^9}, {3.866360518763679*^9, 
   3.866360523813664*^9}, {3.8663605658118258`*^9, 3.866360586933572*^9}, {
   3.866360874844895*^9, 3.866360875286996*^9}, {3.8663609358459*^9, 
   3.866360946523975*^9}, {3.8663629695673723`*^9, 3.8663629719826107`*^9}, {
   3.8663639844553833`*^9, 3.8663639851026163`*^9}, {3.866364664263899*^9, 
   3.866364667805708*^9}, {3.8663647416864157`*^9, 3.866364751498241*^9}, {
   3.8663648173209887`*^9, 3.8663648239090853`*^9}, {3.866364861552744*^9, 
   3.866364866359233*^9}, {3.866364911593669*^9, 3.866364912091476*^9}, {
   3.8663650443606586`*^9, 3.8663650452161922`*^9}, {3.866365512692107*^9, 
   3.866365515810193*^9}, 3.866365740980801*^9, {3.866366124781304*^9, 
   3.866366128103511*^9}, {3.86636615827591*^9, 3.866366161795991*^9}, 
   3.8663675572465467`*^9, {3.8663679823247623`*^9, 3.8663679840072737`*^9}, {
   3.8663685724947968`*^9, 3.866368575523563*^9}, {3.866368617885765*^9, 
   3.866368630439355*^9}, {3.8663688420628223`*^9, 3.866368846739706*^9}, {
   3.866368921365861*^9, 3.866368935403892*^9}, {3.866368992805874*^9, 
   3.8663689939334173`*^9}, {3.8663690430938*^9, 3.8663690474648046`*^9}, {
   3.866369083709838*^9, 3.8663691118719187`*^9}, {3.866369202398569*^9, 
   3.866369214195849*^9}, {3.866369334334588*^9, 3.866369336388123*^9}, {
   3.866369454951181*^9, 3.8663694569323397`*^9}, {3.866369515406219*^9, 
   3.866369518628167*^9}, {3.8663703695855513`*^9, 3.8663703750077*^9}, {
   3.8663705385538683`*^9, 3.866370541048525*^9}, {3.866370586394085*^9, 
   3.866370607876096*^9}, {3.8663707547717*^9, 3.866370757696903*^9}, {
   3.866370926163419*^9, 3.866370929489147*^9}, {3.866371042659484*^9, 
   3.8663710475373373`*^9}, {3.866371595734161*^9, 3.866371595814637*^9}, {
   3.866371630486404*^9, 3.866371630623527*^9}, {3.866371683122916*^9, 
   3.866371701147089*^9}, {3.866371789324903*^9, 3.866371822547234*^9}, {
   3.8663718525974607`*^9, 3.8663718606429367`*^9}, {3.866371974165319*^9, 
   3.866371979075355*^9}, {3.866372122293806*^9, 3.8663721296757917`*^9}, {
   3.866372551518608*^9, 3.866372561132722*^9}, {3.866372627211433*^9, 
   3.866372636080841*^9}, {3.8663728112322397`*^9, 3.866372812994047*^9}, {
   3.866372895895451*^9, 3.866372901477323*^9}, {3.8664377149946833`*^9, 
   3.8664377176580143`*^9}, {3.86643884019552*^9, 3.86643884333634*^9}, {
   3.866438919186672*^9, 3.866438921864346*^9}, {3.8664391767222757`*^9, 
   3.866439182016387*^9}, {3.866439413057221*^9, 3.8664394237656918`*^9}, {
   3.866440165425671*^9, 3.8664401663535337`*^9}, {3.8664414544278717`*^9, 
   3.866441455406114*^9}, {3.8664415241527863`*^9, 3.866441526297073*^9}, {
   3.866441636299324*^9, 3.866441637325185*^9}, {3.8664421743093033`*^9, 
   3.866442174534107*^9}, {3.866444116919817*^9, 3.866444119674713*^9}, {
   3.86644604617083*^9, 3.866446049128669*^9}, {3.866512861360115*^9, 
   3.866512866295472*^9}, {3.866512916479863*^9, 3.866512918447736*^9}, {
   3.866634565957718*^9, 3.866634566999825*^9}, {3.86680026940904*^9, 
   3.866800269792528*^9}, {3.8675831417592773`*^9, 3.867583145913877*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"e3c08978-37d7-4772-8ade-495439d8bdfc"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -15.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"2\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {223.0000014737193, 103.49999999999997`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.5, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Target\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Target\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Target"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Target\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Target"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25},
                     {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {12.75, 
                    17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "NeuralLogicNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{500}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {500}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {500}|>,
                     "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "WeightsClip", "Outputs", 
                    "Output"]}|>, "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{50, 10}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50, 
                    10}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{50, 10}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50, 
                    10}, NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50, 10}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {50}|>,
                     "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {50}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "WeightsClip", "Outputs", 
                    "Output"]}|>, "Not" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {50}|>,
                     "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{2500}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2500}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {2500}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "WeightsClip", "Outputs", 
                    "Output"]}|>, "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{50, 50}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50, 
                    50}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{50, 50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50, 
                    50}, NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50, 50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {50}|>,
                     "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {50}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "WeightsClip", "Outputs", 
                    "Output"]}|>, "Not" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {50}|>,
                     "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "3" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{2500}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2500}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {2500}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "WeightsClip", "Outputs", 
                    "Output"]}|>, "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{50, 50}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50, 
                    50}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{50, 50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50, 
                    50}, NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50, 50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {50}|>,
                     "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {50}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "WeightsClip", "Outputs", 
                    "Output"]}|>, "Not" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {50}|>,
                     "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{400}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{400}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{400}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {400}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{400}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {400}|>,
                     "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{400}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{400}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "WeightsClip", "Outputs", 
                    "Output"]}|>, "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{8, 50}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{400}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8, 50},
                     NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{8, 50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8, 50},
                     NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8, 50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "WeightsClip", "Outputs", 
                    "Output"]}|>, "Not" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{2, 
                    4}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Harden" -> <|"Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 0.9, 0.1]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_9be1f074_4f91_48c2_9652_b079df9ff1c7", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
jTJVP69Kx3Wfbiu6apv++artO81V21/d+HrZzJBmGnFQdUKt9Jh+jbV0QhUi
sRNIdDMm7hxo7vy+0i9aUC64IzKlzkeUPAVKrqfYezbTYmikpKL56Pj0ERqJ
5GNsu4TOIHHQ5fHFWMpYksstFrdEx0VCy2auN8KP+xZKzbbZWmi30UgCTxad
Mk6K0Y9NWJ+OLtqWivDTu58v2s5jHyy1TjatItgnoMdlviqdVq5fJbry2cy9
k8yT1qdqTr1mUhdSs6mxVTol8waTnRHTJJ+vsnpojq4GsC+WWlMmtonUp15B
BbRmMOL8jdbZM//x17dA1zUjPl+pnY5fUWUB784sYhlkM3dnoeuaon1czrat
kXrZ1F3A8ZmXUpb4IHJFnpp5QtjPYB7zXpHqiOxfX70rsS6aWG5MfajqvgPd
NhVn5bJ0qRQyhtH1VQdexHfRvvWWCegIbH98eODI382qO3lfuo48vFT3KbyJ
RmyrN7R+QgcBafvRzrzvkxWkJxt6ctMGyo7jv2QG9NxqkBc0KMpaHPATCe12
pzoWhm1eouX2KbTGOTDuCy03+4r+/DTOVuFK0pHDPdfRaTXfo7aj9iZfc0bv
dV9Py1i1gnQkrOdGWv3DkfuQhzqUYoWsiGY6jtXSe/mnb2HIsDriCBu+i3iu
9U4X7zwHLznIeUYUYkuz//ZQ0+202uDC5aQnDa03WlaPYzXYJtTcNXSUpCli
lirKFqh+ORan9SeGKsomC9FhuID2/Ia6hXLeAzUHhxrR8ZPXP6DRczp549E8
MTW2XbwbRCmui2dHzB3byashjiMsPe2+2azMZaeR4EX+cN2NtBOH5xA77615
wx3x+ujXm30V7XGn0e/R543RMNVAwpZjMErT7U7854dzTbu6eFPZql+VFmxU
zu3i0YmTIhvWhQBNbO/W2w1WQFPOhjrnqAU6xI+RlU2J4R6P/8GSCxwqXdGe
KDoBG1O3GjEWBLKeohJv0yA6Y7oHSQydQf4B/RgevwEdBXsxUkopCtmHSTBH
zAaF7Mk0xMBEgJaQUuW8ODlvKpk4qNTvqETnu5aClixtv5nGWY4KTXlpvhtR
of96mu8mISBwqvp62vrULSMYo0HSBPQzpdoxdPdyLbe8k3UJnbOTJpGcAw+g
nfd5h9udA4/gpStAqSNOabv9KXli2LejN9ZDFbIWtF8+/6SfZJQC1RR08qYW
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
mfBfBqIia6Q6EX7j/wDfVuJ6
                    "]]|>, "orcInstance" -> 80785904, "orcModuleId" -> 
                    81740736, "targetMachineId" -> 74143072|>, 
                    140472673367888, 140472673367744, 140472673367824, 
                    140472673361920, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_95c6a289_3b3a_4ed7_a1e5_0cf1ee2521c5", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
WPh3OqO/+g==
                    "]]|>, "orcInstance" -> 80559440, "orcModuleId" -> 
                    67530160, "targetMachineId" -> 81709760|>, 
                    140472673354272, 140472673353872, 140472673353952, 
                    140472673353728, 
                    
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {2, 4}, 
                    "$Batched" -> False, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0687af7ab8e2440f", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>|>, 
                    "SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                    "SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                    "Error" -> <|"Type" -> "CrossEntropyLoss", 
                    "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 2, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT], 
                    "Target" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Outputs", "Loss"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Target" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.866604385531515*^9, 3.866604752320993*^9, 3.86660485170772*^9, 
   3.8666049165654373`*^9, 3.8666049650282393`*^9, 3.866605045496359*^9, {
   3.866605087083253*^9, 3.866605103860919*^9}, {3.8666051697048388`*^9, 
   3.866605182334133*^9}, 3.866605324607296*^9, 3.8666053743162518`*^9, 
   3.866613822746578*^9, 3.866613934203129*^9, 3.866625674155504*^9, 
   3.866625715079267*^9, 3.866625752494906*^9, 3.866625887178625*^9, 
   3.8666259363839493`*^9, 3.866626046404351*^9, 3.866626088088612*^9, {
   3.866634558081018*^9, 3.8666345677114687`*^9}, 3.866634708596148*^9, 
   3.866634851921915*^9, 3.8666349107311773`*^9, 3.866800271472727*^9, 
   3.866802647448588*^9, 3.866862630429627*^9, 3.866863023262228*^9, 
   3.866863927813119*^9, 3.867583164957588*^9, 3.867583267374192*^9, 
   3.867583362103986*^9, 3.8675909755646267`*^9, 3.867671173714522*^9, 
   3.868078661468258*^9, 3.8680787665350857`*^9, 3.868078828044715*^9, 
   3.868078992541626*^9, 3.868079062150077*^9, 3.868079329323824*^9, 
   3.868079512059731*^9, 3.868079579466331*^9, 3.868079734982574*^9, 
   3.868079774883353*^9, 3.868079857387781*^9, {3.868080025171183*^9, 
   3.868080048248355*^9}, 3.868080079183749*^9, 3.8680801102711887`*^9, 
   3.868082284316763*^9, {3.868082319783573*^9, 3.8680823479944477`*^9}, 
   3.868082404340212*^9, {3.868082451836179*^9, 3.868082474897846*^9}, 
   3.868082627165916*^9, 3.8680939357486277`*^9, 3.868094190803768*^9, 
   3.868094249976954*^9, 3.868094438882329*^9, 3.8680947009691896`*^9, 
   3.8680947435443087`*^9, 3.8680948925646677`*^9, 3.8680949653882*^9, 
   3.868095361587243*^9, 3.868095397354843*^9, 3.868095433602148*^9, {
   3.868095486810574*^9, 3.868095516668479*^9}, 3.8680955763489313`*^9, 
   3.868095651062407*^9, 3.868095756678466*^9, 3.8680958264076977`*^9, 
   3.86809589879016*^9, 3.868095948100271*^9, 3.868096101655993*^9, 
   3.868096291186028*^9, 3.868096379876704*^9, 3.868097733929288*^9, 
   3.868361237960902*^9, 3.868361427718354*^9, {3.868361539595975*^9, 
   3.868361573261231*^9}, {3.868361621729368*^9, 3.868361649244988*^9}, 
   3.868361746376389*^9, 3.8683617968743553`*^9, 3.8683618782356167`*^9, 
   3.868362165070512*^9, 3.868362243990834*^9, 3.868362298350729*^9, 
   3.8684097530238447`*^9, 3.868409854216321*^9, 3.868410092247651*^9, 
   3.8684102707525387`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"c7b66bac-c973-44c9-b769-2b8001d2974d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866604099593103*^9, 
  3.866604099793066*^9}},ExpressionUUID->"f41264f3-0416-47d7-bf15-\
5c0bdda1b4b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
    "softNet", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"testData", ",", 
          RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "20000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866262230733412*^9, 3.866262232700974*^9}, {
   3.866262747191399*^9, 3.866262755095587*^9}, {3.866263687522623*^9, 
   3.866263691522341*^9}, {3.866272907421722*^9, 3.866272908705574*^9}, {
   3.866274679974001*^9, 3.866274683777981*^9}, {3.866275126894273*^9, 
   3.866275130882132*^9}, {3.866275621030303*^9, 3.86627562449095*^9}, {
   3.866275800963348*^9, 3.866275804851942*^9}, {3.866278286918571*^9, 
   3.866278290408846*^9}, {3.866279939718389*^9, 3.8662799438283052`*^9}, {
   3.8662825835076027`*^9, 3.866282587086446*^9}, {3.8662848978232517`*^9, 
   3.8662849013340178`*^9}, {3.866301199025255*^9, 3.866301208705173*^9}, {
   3.866302091405136*^9, 3.866302093072084*^9}, {3.8663022330606956`*^9, 
   3.8663022743807373`*^9}, {3.866303190918262*^9, 3.8663031961042967`*^9}, {
   3.8663508996403513`*^9, 3.866350903983953*^9}, {3.8663558607588453`*^9, 
   3.866355860917651*^9}, {3.86637013313169*^9, 3.866370138430928*^9}, {
   3.866370237003203*^9, 3.866370239455555*^9}, {3.8663703291644793`*^9, 
   3.866370333111907*^9}, {3.866370363265703*^9, 3.866370363711856*^9}, {
   3.8663720431119947`*^9, 3.866372048852154*^9}, {3.866372163198892*^9, 
   3.8663721862104397`*^9}, 3.8663723957836103`*^9, {3.866372460806899*^9, 
   3.866372466981298*^9}, {3.8663728465397882`*^9, 3.866372846690668*^9}, {
   3.866439863015705*^9, 3.866439889076521*^9}, {3.866444399919945*^9, 
   3.866444403398275*^9}, 3.866445596437694*^9, 3.866445994629862*^9, {
   3.866446077093233*^9, 3.8664460772227592`*^9}, {3.866514058957122*^9, 
   3.866514061965129*^9}, {3.866514093672724*^9, 3.8665140946276417`*^9}, 
   3.866514530731886*^9, {3.866514784096607*^9, 3.866514784235477*^9}, {
   3.8665148543229303`*^9, 3.86651485485518*^9}, {3.866517197949828*^9, 
   3.866517203967832*^9}, 3.866517357579501*^9, 3.8665174374755917`*^9, 
   3.8665175119230967`*^9, {3.866517590284361*^9, 3.866517620168564*^9}, 
   3.8665176619240017`*^9, {3.8665179325026484`*^9, 3.8665179399815683`*^9}, {
   3.866518111910069*^9, 3.866518112233807*^9}, {3.866518521945266*^9, 
   3.866518522115803*^9}, {3.866518571201038*^9, 3.866518588328702*^9}, {
   3.866518646862028*^9, 3.866518650143523*^9}, 3.866518704027602*^9, {
   3.866519202548511*^9, 3.8665192068871107`*^9}, {3.866552934111923*^9, 
   3.866552991359269*^9}, {3.866553502473754*^9, 3.8665535030716467`*^9}, {
   3.866554417382031*^9, 3.866554420050095*^9}, {3.866554652086327*^9, 
   3.8665546522545357`*^9}, 3.866604776742971*^9, {3.86680027773044*^9, 
   3.866800278113852*^9}, {3.868094967186932*^9, 3.868094986665822*^9}, {
   3.868095019045618*^9, 3.868095019220586*^9}, {3.868361304394638*^9, 
   3.868361304829949*^9}, {3.868361488191626*^9, 3.868361491259301*^9}, 
   3.868361525155517*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"7672c6d3-df1d-405b-9e2a-90aa6887df6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedSoftNet", "=", 
  RowBox[{"NetExtract", "[", 
   RowBox[{
    RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
    "\"\<NeuralLogicNet\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866262883598037*^9, 3.866262913813736*^9}, {
  3.866800388275832*^9, 3.866800388780817*^9}, {3.8683615002909307`*^9, 
  3.868361522978859*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"9dfbfa0c-b8e2-42c4-ae5a-99e0b63edb66"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{500}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {500}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {500}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{50, 
                    10}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT], 
                    "Weights" -> NeuralNetworks`TensorT[{50, 10}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50, 10}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {50}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {50}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"]}|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {50}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "2" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{2500}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2500}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {2500}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{50, 
                    50}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50, 50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{50, 50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50, 50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50, 50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {50}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {50}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"]}|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {50}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "3" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{2500}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2500}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {2500}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{50, 
                    50}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50, 50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{50, 50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50, 50}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50, 50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {50}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {50}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"]}|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {50}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "4" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{400}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{400}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{400}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {400}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{400}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {400}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{400}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{400}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{8, 
                    50}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{400}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 50}, NeuralNetworks`AtomT]|>|>,
                     "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{8, 50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 50}, NeuralNetworks`AtomT]|>|>,
                     "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8, 50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"]}|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{2, 4}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 50\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 50\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 50\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ReshapeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.866604444065995*^9, 3.866604825257682*^9, 3.866604891009988*^9, 
   3.866604946387684*^9, 3.8666050262184153`*^9, 3.8666050785043297`*^9, 
   3.866605125883642*^9, 3.866605305208755*^9, 3.8666053506104107`*^9, 
   3.866605402815572*^9, 3.8666139117587347`*^9, 3.866613968840701*^9, 
   3.866625704725067*^9, 3.866625739869501*^9, 3.866625776351536*^9, 
   3.866625908542205*^9, 3.866625954933941*^9, 3.866626069327134*^9, 
   3.866626118723287*^9, 3.866634633753524*^9, 3.8666348346758213`*^9, 
   3.866634880920323*^9, 3.866635024288516*^9, {3.866800377101527*^9, 
   3.8668003895056067`*^9}, 3.866802672634994*^9, 3.866862759681157*^9, 
   3.866863134091525*^9, 3.866863952315647*^9, 3.867589276039692*^9, 
   3.867671664534728*^9, 3.868083021532551*^9, 3.868361683452351*^9, 
   3.8683619120523787`*^9, 3.868362224655265*^9, 3.8683622583423357`*^9, 
   3.8683624814264603`*^9, 3.868410245228744*^9, {3.868410304556037*^9, 
   3.8684103257472963`*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"48f037f9-1952-4722-b51d-7a18384547a9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.866800415776203*^9, 
  3.86680041674398*^9}},ExpressionUUID->"ef5026cf-d3fa-473c-a6d2-\
fd3ceabc2c77"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"softPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainedSoftNet", "[", 
         RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardenedPredictionTargetPairs", "=", 
   RowBox[{"Harden", "[", "softPredictionTargetPairs", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"RandomSample", "[", 
       RowBox[{"hardenedPredictionTargetPairs", ",", "5"}], "]"}], ",", "1"}],
      "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"True", "->", 
     RowBox[{"Style", "[", 
      RowBox[{"True", ",", "Red"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.861598551906061*^9, 3.8615985567851887`*^9}, {
   3.863178625879333*^9, 3.8631786268708572`*^9}, {3.863240306853362*^9, 
   3.863240307588504*^9}, {3.8647943299915457`*^9, 3.864794330447215*^9}, {
   3.864794373237455*^9, 3.864794410229562*^9}, {3.864825813950893*^9, 
   3.8648258236291018`*^9}, {3.86505446234156*^9, 3.865054476285439*^9}, {
   3.86505502598845*^9, 3.865055037244231*^9}, {3.8650600546900873`*^9, 
   3.8650600574960833`*^9}, {3.865421281430146*^9, 3.865421283958905*^9}, {
   3.866604469348693*^9, 3.866604469491571*^9}, {3.866604715196765*^9, 
   3.8666047309003077`*^9}, {3.8668003939552097`*^9, 3.86680039453754*^9}, {
   3.866863741581986*^9, 3.866863750762281*^9}, 3.866865427474077*^9, {
   3.8683616889636908`*^9, 3.868361689132121*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"83a191b0-e40c-4fb5-b1f9-ccd397e52042"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 57.5%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "19"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "14"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "4"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "3"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866604740014987*^9, 3.866604827512426*^9, 3.866604892766753*^9, 
   3.866604948159389*^9, 3.866605027608502*^9, 3.8666050797060127`*^9, 
   3.8666051270238*^9, 3.866605306478503*^9, 3.866605351838655*^9, 
   3.866605404161014*^9, 3.866613913674348*^9, 3.8666139705107*^9, 
   3.8666257065730343`*^9, 3.86662574134376*^9, 3.8666257777013702`*^9, 
   3.866625909825324*^9, 3.866625956361196*^9, 3.866626070645979*^9, 
   3.866626120217812*^9, {3.866634635480035*^9, 3.8666346577282267`*^9}, 
   3.866634835967009*^9, 3.8666348822118883`*^9, 3.866635025677926*^9, 
   3.866800397397952*^9, 3.866802676908917*^9, 3.866862761074505*^9, 
   3.866863136267887*^9, 3.866863751771923*^9, 3.866863953699317*^9, 
   3.867589280643219*^9, 3.867671666206935*^9, 3.868083027246509*^9, 
   3.868361690186409*^9, 3.8683619143664494`*^9, 3.868362227139744*^9, 
   3.868362260154688*^9, 3.8683624847840557`*^9, 3.8684102473316793`*^9, {
   3.868410306389978*^9, 3.868410327656372*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"da172786-3cbb-4677-95d1-16973db76d69"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.866800415776203*^9, 
  3.8668004242321167`*^9}},ExpressionUUID->"aedaa5e1-1481-4153-8a9a-\
7340dfa910d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedSoftNet"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hnf", "[", 
         RowBox[{"Harden", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.86680194442417*^9, 3.866801959585536*^9}, 
   3.8668020564125566`*^9, 3.8668021880135727`*^9, 3.86680224094079*^9, {
   3.866862414056994*^9, 3.866862435758893*^9}, 3.8668631732132587`*^9, 
   3.866863454099498*^9, {3.866863887767027*^9, 3.866863891596203*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"75f9651e-a0eb-4d63-a6ab-7f292ab49187"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 57.5%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "19"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "14"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "4"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "3"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866863904017839*^9, 3.866863961760541*^9, 3.8675892984722157`*^9, 
   3.86767169281933*^9, 3.868361698871398*^9, {3.868361917822958*^9, 
   3.868361933207971*^9}, 3.8683622302754173`*^9, {3.868362262276*^9, 
   3.868362268771079*^9}, 3.868362487698016*^9, 3.868410250177473*^9, {
   3.868410310040957*^9, 3.868410330913924*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"d09559b2-1c12-4f82-80a6-61b87b71a7f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpaceSaving", "[", "trainedSoftNet", "]"}]], "Input",
 CellChangeTimes->{{3.8668642342489862`*^9, 3.8668642483212557`*^9}, {
  3.866864301980486*^9, 3.866864302505608*^9}, {3.866864406655108*^9, 
  3.86686453684363*^9}, {3.866864775311109*^9, 3.866864778850369*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"653d89c7-18c0-4eb6-8f2f-18461069c675"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Soft net size = 14.032 kilobytes\"\>"},
    {"\<\"Hard net size = 0.4385 kilobytes\"\>"},
    {"\<\"Saving factor = 32.\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866864249947411*^9, 3.8668643028534403`*^9, 3.866864414235868*^9, 
   3.866864445660204*^9, {3.866864494244638*^9, 3.866864537301672*^9}, 
   3.866864595971245*^9, 3.866864779447701*^9, 3.867590966091876*^9, 
   3.868361701943183*^9, 3.868410255904086*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"2cd4dd4f-78a5-48b6-b0a3-7ab19a720a27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"boolNet", "=", 
  RowBox[{"hnf", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"\"\<b\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "inputSize"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"19fb0538-abb5-447b-a710-5d81fa013a2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b1", ",", "False", ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"b4", "&&", "b5", "&&", "b8", "&&", 
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{"b1", "&&", "b3", "&&", "b8"}], ")"}]}]}], ")"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"b2", "&&", "b10", "&&", 
           RowBox[{"!", "b3"}], "&&", "b1"}], ")"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"b3", "&&", "b9", "&&", 
           RowBox[{"!", "b5"}], "&&", "b9", "&&", "b9"}], ")"}]}]}], ")"}]}], 
     ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"!", "b4"}], "&&", "b1", "&&", "b9"}], ",", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"!", "b1"}], "&&", 
         RowBox[{"!", "b8"}]}], ")"}]}], "&&", 
      RowBox[{"!", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"!", "b5"}], "&&", 
         RowBox[{"!", "b1"}], "&&", "b1"}], ")"}]}], "&&", "b9", "&&", "b9"}],
      ",", "False", ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b7", "&&", 
        RowBox[{"!", "b5"}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.868361725915637*^9, 3.868362023740739*^9, 
  3.8683622718290453`*^9, 3.8683624928840437`*^9, 3.8684102572843437`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"198e0bd3-cf63-4b6a-9d5b-4c375b36f7c6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Learn MNIST", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.865071137544158*^9, 
  3.865071139735918*^9}},ExpressionUUID->"ab35440a-cabc-4736-a5ac-\
e07454ebd2a0"],

Cell[CellGroupData[{

Cell["Generate training data", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 
  3.864793759486944*^9}},ExpressionUUID->"7a765571-11e0-47e7-bd2b-\
e5df28d2018f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ConvertBinaryStringToList", "[", "s_String", "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"\"\<{\>\"", "<>", 
    RowBox[{"StringInsert", "[", 
     RowBox[{"s", ",", "\"\<,\>\"", ",", 
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"StringLength", "[", "s", "]"}], "]"}], ",", "1"}], "]"}]}], 
     "]"}], "<>", "\"\<}\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConvertBinaryStringToImageData", "[", 
   RowBox[{"s_String", ",", 
    RowBox[{"{", 
     RowBox[{"width_", ",", "height_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{
    RowBox[{"ConvertBinaryStringToList", "[", "s", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"width", ",", "height"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MNISTExample", "[", "example_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Soften", "/@", 
     RowBox[{"ConvertBinaryStringToList", "[", 
      RowBox[{"First", "[", "example", "]"}], "]"}]}], ")"}], "->", 
   RowBox[{"Last", "[", "example", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MNISTImageExample", "[", 
   RowBox[{"example_", ",", "w_", ",", "h_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{"ConvertBinaryStringToImageData", "[", 
      RowBox[{
       RowBox[{"First", "[", "example", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"w", ",", "h"}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}], "->", 
   RowBox[{"Last", "[", "example", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TargetClass", "[", 
   RowBox[{"class_", ",", "numClasses_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "==", 
       RowBox[{
        RowBox[{"ToExpression", "[", "class", "]"}], "+", "1"}]}], ",", "1", 
      ",", "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "numClasses"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.777544428958893*^9, 3.777544449223729*^9}, {
  3.785053289286406*^9, 3.7850533015825367`*^9}, {3.865071356234124*^9, 
  3.865071368364665*^9}, {3.865072537508193*^9, 3.865072583145698*^9}, {
  3.8650727653223124`*^9, 3.865072769389474*^9}, {3.865072855048724*^9, 
  3.865072873389448*^9}, {3.865074216205205*^9, 3.865074217943268*^9}, {
  3.8650742607422447`*^9, 3.865074263919525*^9}, {3.865074303282633*^9, 
  3.865074304334848*^9}, {3.8655763816838627`*^9, 3.86557638296766*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"32fda3b9-b853-499b-9d93-f6cc5b2d03d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"first2Digits", "=", "12665"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"first4Digits", "=", "24754"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"StringSplit", "/@", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NotebookDirectory", "[", "]"}], ",", 
            "\"\<../data/mnist_data.csv\>\""}], "}"}], "]"}], "]"}], ",", 
        "first4Digits"}], "]"}]}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numClasses", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Last", "/@", "data"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "#", "]"}], "->", 
       RowBox[{"TargetClass", "[", 
        RowBox[{
         RowBox[{"Last", "[", "#", "]"}], ",", "numClasses"}], "]"}]}], "&"}],
      ",", "data"}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7775425649316273`*^9, 3.7775427188349257`*^9}, 
   3.777542765885343*^9, {3.777542891883361*^9, 3.777542895266905*^9}, {
   3.777548901853368*^9, 3.777548904429871*^9}, 3.777948863055695*^9, {
   3.785053289286778*^9, 3.785053301583352*^9}, {3.8004618114961*^9, 
   3.8004618132862787`*^9}, {3.865071380522399*^9, 3.865071389330105*^9}, {
   3.865071506398736*^9, 3.86507150965482*^9}, {3.865072153294796*^9, 
   3.865072153439651*^9}, {3.8650725203995028`*^9, 3.8650725250999613`*^9}, {
   3.865072598133906*^9, 3.8650726430451927`*^9}, {3.8650730651631327`*^9, 
   3.865073065309772*^9}, {3.8650737788630743`*^9, 3.8650737799185247`*^9}, {
   3.8650741657549047`*^9, 3.865074192750668*^9}, {3.865084557601783*^9, 
   3.865084557727841*^9}, {3.865096614528236*^9, 3.865096614722213*^9}, {
   3.865096960213298*^9, 3.865096961035049*^9}, {3.8654249749431143`*^9, 
   3.865424975283492*^9}, {3.865425652554762*^9, 3.865425654875148*^9}, {
   3.8655942181851254`*^9, 3.865594218683255*^9}, {3.865603687795599*^9, 
   3.8656036911095867`*^9}, {3.865654143595076*^9, 3.865654143741383*^9}, {
   3.8656591261724367`*^9, 3.865659126260923*^9}, {3.86586673745885*^9, 
   3.865866737630937*^9}, {3.865868704726523*^9, 3.865868705092907*^9}, {
   3.865935589729813*^9, 3.8659355902888536`*^9}, {3.8659425359146223`*^9, 
   3.865942536047833*^9}, {3.8660004673198977`*^9, 3.866000467920465*^9}, {
   3.866008550651922*^9, 3.866008550802231*^9}, {3.8662143357376127`*^9, 
   3.8662143358729973`*^9}, {3.866214933669497*^9, 3.866214933766831*^9}, {
   3.866550101779276*^9, 3.866550102242258*^9}, {3.8665523509986134`*^9, 
   3.866552351965906*^9}, {3.866552870119151*^9, 3.866552872331809*^9}, {
   3.866553040839672*^9, 3.8665530794623127`*^9}, {3.866553478936655*^9, 
   3.866553479983959*^9}, {3.8665536320416937`*^9, 3.866553632487995*^9}, {
   3.8666350940570993`*^9, 3.866635094215591*^9}, {3.866635327817191*^9, 
   3.8666353279906816`*^9}, {3.8680106779565372`*^9, 3.868010678330977*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"e694fd5c-31a2-4c80-9a3a-3cbb8af0f0d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MNISTImageExample", "[", 
    RowBox[{"#", ",", "8", ",", "8"}], "]"}], "&"}], "/@", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"data", ",", "8"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQnWD1ZJK46hvHbUtqp4LoH1f1F4Hof3Hvl4DoyTt8
V4JoVaH3q0B02xyFLSA6rMZuB4i2EN17D0RLbHjyAERzZFSzSABp2YmPWEH0
uuvdqiA618JMDUQHzAsLkgLSFTlrQkG0QohD310gvbS0qx9Eb9DV7M0yfuP4
efWmPhAd1feCl+vMG8cZG96D6RMzM11A9MyPFWD6HnsVPzeQPiOZIQCi94lL
92wD0gIHdMC0z/W++yC6/dA0MH2pcxbr3XNvHN8cecoJogU27I8G0RJnd8WD
aK2EixNBtEL+fzB9nlVEfOnFN452v9TBNACEfpdc
  "],
 CellLabel->"In[16]:=",ExpressionUUID->"ec0b1266-533d-40d4-a949-ccce78250c06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 0., 1., 
        0., 1., 1., 1.}, {1., 1., 0., 1., 0., 0., 1., 1.}, {1., 1., 0., 1., 
        1., 1., 0., 1.}, {1., 0., 0., 1., 1., 1., 0., 1.}, {1., 1., 0., 0., 
        1., 0., 0., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 1., 0., 0., 1., 0., 1.}, {1., 1., 0., 1., 
        1., 1., 0., 1.}, {1., 1., 0., 1., 1., 0., 1., 1.}, {1., 0., 0., 1., 
        0., 0., 1., 1.}, {1., 1., 0., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 0., 1.}, {1., 1., 1., 0., 0., 0., 1., 1.}, {1., 1., 1., 0., 
        1., 0., 1., 1.}, {1., 1., 0., 1., 1., 0., 1., 1.}, {1., 0., 0., 1., 
        0., 0., 1., 1.}, {1., 1., 0., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 0., 
        1., 1., 1., 1.}, {1., 1., 1., 0., 0., 0., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 0., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 0., 0., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 0., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 0., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 0., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 0., 1., 1., 0., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 0., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 1., 0., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], "}"}]], "Output",\

 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.865071516233152*^9, 3.865071727764624*^9, {3.865072157992421*^9, 
   3.865072164263248*^9}, 3.8650726482204933`*^9, {3.8650728081429157`*^9, 
   3.865072815412401*^9}, {3.8650728584132767`*^9, 3.8650728763860283`*^9}, 
   3.865073067508193*^9, {3.865073789904008*^9, 3.865073795522964*^9}, {
   3.865074175245178*^9, 3.8650742213114853`*^9}, 3.8650742663256474`*^9, 
   3.8650743064252872`*^9, 3.865075757486204*^9, 3.865080599940412*^9, 
   3.865083621171164*^9, {3.865084563801412*^9, 3.865084592428769*^9}, 
   3.8650856590126333`*^9, 3.8650875182866573`*^9, 3.865091000291559*^9, 
   3.865093056070513*^9, 3.865094694162876*^9, 3.865096615969627*^9, 
   3.86509696259997*^9, 3.865139954249607*^9, 3.865141786671627*^9, 
   3.8651521367013702`*^9, 3.865423552909775*^9, {3.865424979404682*^9, 
   3.8654249938473787`*^9}, {3.865425656479721*^9, 3.8654256609377003`*^9}, 
   3.8654809208707523`*^9, 3.865482033395006*^9, 3.8655011685646477`*^9, {
   3.865576369155878*^9, 3.8655763849362507`*^9}, 3.8655934591865187`*^9, 
   3.865594225086277*^9, 3.865603693195478*^9, 3.865654145596838*^9, 
   3.8656591284289303`*^9, 3.865663486762136*^9, {3.865675843854004*^9, 
   3.8656758480254383`*^9}, 3.865680692292922*^9, 3.865785373725032*^9, 
   3.865838237420817*^9, 3.8658644284650097`*^9, 3.865866739205634*^9, 
   3.865868706936183*^9, 3.86593559197605*^9, 3.8659425376483192`*^9, 
   3.866000471570891*^9, 3.8660023671723824`*^9, 3.866008552558271*^9, 
   3.866083736145451*^9, 3.866209093677637*^9, 3.866209596724132*^9, 
   3.866214336990232*^9, 3.866214934859021*^9, 3.866257446329878*^9, 
   3.866258666676694*^9, 3.866285701938628*^9, 3.866300727645417*^9, 
   3.866350581558517*^9, 3.8663715089115543`*^9, 3.8664377020714197`*^9, 
   3.866512491986065*^9, 3.866527204842803*^9, 3.866550105097583*^9, {
   3.866552357229663*^9, 3.866552399674362*^9}, 3.8665527340777407`*^9, 
   3.866552874933894*^9, {3.866553049548827*^9, 3.866553086238255*^9}, {
   3.8665534827091827`*^9, 3.866553488434558*^9}, 3.866553534951789*^9, 
   3.866553633744459*^9, 3.866600459846939*^9, 3.866602523014666*^9, 
   3.866614026941433*^9, 3.8666262010362787`*^9, 3.866635097265691*^9, 
   3.8666353295523643`*^9, 3.86671287784385*^9, 3.8668648189771833`*^9, 
   3.86686557723407*^9, 3.867159524610252*^9, 3.867322063035668*^9, 
   3.8673789484877462`*^9, 3.867470655008312*^9, 3.867479462918984*^9, 
   3.867565378519354*^9, 3.867591080109098*^9, 3.8676400269193563`*^9, 
   3.867653432365038*^9, 3.867669760039253*^9, 3.86773415064207*^9, 
   3.867811745519134*^9, 3.867820389693028*^9, 3.867838001660368*^9, 
   3.867841895496252*^9, 3.8678469507400503`*^9, 3.867847677521079*^9, 
   3.8678503868424177`*^9, 3.8678904849913807`*^9, 3.867890555843211*^9, 
   3.867893435896879*^9, 3.8678959723069487`*^9, 3.867896205315556*^9, 
   3.868010681695039*^9, 3.8680160218209887`*^9, 3.8680216786740513`*^9, 
   3.8680706362081203`*^9, 3.868070790887082*^9, 3.8680715165081863`*^9, 
   3.86809656602496*^9, 3.868099342208542*^9, 3.868103940542397*^9, 
   3.868171870644537*^9, 3.8683326329610863`*^9, 3.868337401096547*^9, 
   3.868341190363447*^9, 3.868343307715857*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"95431d6d-fdc1-487a-8977-34eb1054aa74"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{"MNISTExample", "/@", "data"}], ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.8", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8650715619235697`*^9, 3.865071567650784*^9}, {
  3.8650716393413363`*^9, 3.865071641123829*^9}, {3.865075763152564*^9, 
  3.865075763445953*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"5f23d7f5-27d3-4f48-9a93-1389f19dc351"]
}, Closed]],

Cell[CellGroupData[{

Cell["Standard neural net", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602720354347*^9, 
  3.866602722250537*^9}, {3.866867763326234*^9, 
  3.866867766054191*^9}},ExpressionUUID->"fc68a4bd-9bf9-485f-9eed-\
cf7b8ff25567"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConvertDataToClasses", "[", "data_", "]"}], ":=", 
  RowBox[{"MapAt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "]"}], "]"}], "-", "1"}], "&"}], ",",
     "data", ",", 
    RowBox[{"{", 
     RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8668693365321074`*^9, 3.8668693867886343`*^9}, {
  3.8668694253582287`*^9, 3.8668694957654448`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"afc9d31b-db6d-45ca-8b6b-e25b97a5ac3c"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602724930586*^9, 
  3.866602725762454*^9}},ExpressionUUID->"9502650c-75ff-4479-bca2-\
f7b8b0c4641d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", "numClasses"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NetChain", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
        "300", ",", "LogisticSigmoid", ",", "\[IndentingNewLine]", 
         "classificationLayerSize", ",", "LogisticSigmoid", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<Output\>\"", "->", 
        RowBox[{"NetDecoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Class\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<0\>\"", ",", "\"\<1\>\"", ",", "\"\<2\>\"", ",", 
             "\"\<3\>\""}], "}"}]}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8668677843113413`*^9, 3.866867810879756*^9}, {
  3.866867866054343*^9, 3.866867918755149*^9}, {3.866867993454722*^9, 
  3.86686799965574*^9}, {3.8668681258788567`*^9, 3.86686812619947*^9}, {
  3.8668689240969467`*^9, 3.866868981929222*^9}, {3.866869073179029*^9, 
  3.8668690742445583`*^9}, {3.866869111667173*^9, 3.8668691123403177`*^9}, {
  3.8681067169717073`*^9, 3.868106719016634*^9}, {3.868106756819168*^9, 
  3.868106759120493*^9}, {3.868106855684023*^9, 3.868106879388144*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"5fefb9b9-6e54-460e-b544-a43d033404b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866180932479144*^9, 3.866180933335601*^9}, {
  3.866260506971014*^9, 3.8662605102109118`*^9}, {3.866262223194878*^9, 
  3.866262223474766*^9}, {3.8666027494425793`*^9, 
  3.866602750730301*^9}},ExpressionUUID->"d41cd2db-8088-4737-b918-\
a082c6448deb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", 
     RowBox[{"ConvertDataToClasses", "[", "trainData", "]"}], ",", "All", ",",
      "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ConvertDataToClasses", "[", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"testData", ",", 
           RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "2000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866262230733412*^9, 3.866262232700974*^9}, {
   3.866262747191399*^9, 3.866262755095587*^9}, {3.866263687522623*^9, 
   3.866263691522341*^9}, {3.866272907421722*^9, 3.866272908705574*^9}, {
   3.866274679974001*^9, 3.866274683777981*^9}, {3.866275126894273*^9, 
   3.866275130882132*^9}, {3.866275621030303*^9, 3.86627562449095*^9}, {
   3.866275800963348*^9, 3.866275804851942*^9}, {3.866278286918571*^9, 
   3.866278290408846*^9}, {3.866279939718389*^9, 3.8662799438283052`*^9}, {
   3.8662825835076027`*^9, 3.866282587086446*^9}, {3.8662848978232517`*^9, 
   3.8662849013340178`*^9}, {3.866301199025255*^9, 3.866301208705173*^9}, {
   3.866302091405136*^9, 3.866302093072084*^9}, {3.8663022330606956`*^9, 
   3.8663022743807373`*^9}, {3.866303190918262*^9, 3.8663031961042967`*^9}, {
   3.8663508996403513`*^9, 3.866350903983953*^9}, {3.8663558607588453`*^9, 
   3.866355860917651*^9}, {3.86637013313169*^9, 3.866370138430928*^9}, {
   3.866370237003203*^9, 3.866370239455555*^9}, {3.8663703291644793`*^9, 
   3.866370333111907*^9}, {3.866370363265703*^9, 3.866370363711856*^9}, {
   3.8663720431119947`*^9, 3.866372048852154*^9}, {3.866372163198892*^9, 
   3.8663721862104397`*^9}, 3.8663723957836103`*^9, {3.866372460806899*^9, 
   3.866372466981298*^9}, {3.8663728465397882`*^9, 3.866372846690668*^9}, {
   3.866439863015705*^9, 3.866439889076521*^9}, {3.866444399919945*^9, 
   3.866444403398275*^9}, 3.866445596437694*^9, 3.866445994629862*^9, {
   3.866446077093233*^9, 3.8664460772227592`*^9}, {3.866514058957122*^9, 
   3.866514061965129*^9}, {3.866514093672724*^9, 3.8665140946276417`*^9}, 
   3.866514530731886*^9, {3.866514784096607*^9, 3.866514784235477*^9}, {
   3.8665148543229303`*^9, 3.86651485485518*^9}, {3.866517197949828*^9, 
   3.866517203967832*^9}, 3.866517357579501*^9, 3.8665174374755917`*^9, 
   3.8665175119230967`*^9, {3.866517590284361*^9, 3.866517620168564*^9}, 
   3.8665176619240017`*^9, {3.8665179325026484`*^9, 3.8665179399815683`*^9}, {
   3.866518111910069*^9, 3.866518112233807*^9}, {3.866518521945266*^9, 
   3.866518522115803*^9}, {3.866518571201038*^9, 3.866518588328702*^9}, {
   3.866518646862028*^9, 3.866518650143523*^9}, 3.866518704027602*^9, {
   3.866519202548511*^9, 3.8665192068871107`*^9}, {3.866552934111923*^9, 
   3.866552991359269*^9}, {3.866553502473754*^9, 3.8665535030716467`*^9}, {
   3.866554417382031*^9, 3.866554420050095*^9}, {3.866554652086327*^9, 
   3.8665546522545357`*^9}, {3.86686620714637*^9, 3.866866208536282*^9}, {
   3.8668680582887163`*^9, 3.866868068787518*^9}, {3.8668684157382507`*^9, 
   3.8668684211762457`*^9}, {3.8668695026973*^9, 3.866869525750093*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"5e8aefb1-dfc7-4620-8212-9b7f8316e5ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.865509544459216*^9, 3.865509545362651*^9}, {3.8668654702612267`*^9, 
  3.866865471244494*^9}, {3.866868302798292*^9, 
  3.866868303806368*^9}},ExpressionUUID->"7822fb59-1347-4e85-b721-\
29a9f368ef8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{
   RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
   RowBox[{"ConvertDataToClasses", "[", "testData", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866868805817885*^9, 3.866868848976694*^9}, {
  3.866869633679126*^9, 3.8668696380935183`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"e96a481e-3ba1-4201-9c24-39f96d06cf2b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classifier method"], 
                  TextCell["Classifier method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "Net",ExpressionUUID->"e4bbbb3d-57ee-459f-9ca2-1ea595dba4d4"],
               TextCell["Net"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Number of test examples"], 
                  TextCell["Number of test examples"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "19803"},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Accuracy"], 
                  TextCell["Accuracy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"94.18", "0.17"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   94.1776498510326689484`3., 0.1664058370908357842`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                   "\"Accuracy if predicting the commonest class\"", 
                   LabelStyle -> "TextStyling"], 
                  Annotation[#, "Accuracy if predicting the commonest class", 
                   "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"27.57", "0.32"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   27.5665303236883332261`3., 0.3175456515180207773`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Geometric mean of probabilities"], 
                  TextCell["Geometric mean of probabilities"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.4485840666392094112`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0006503712479030144`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.4472833241434033824`3.",
                   "\", \"", "0.4498848091350154399`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.4472833241434033824`3., 
                  ", ", 0.4498848091350154399`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Mean cross entropy"], 
                  TextCell["Mean cross entropy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.8016591754955778582`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.001449830853172962`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.7987595137892319341`3.",
                   "\", \"", "0.8045588372019237822`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.7987595137892319341`3., 
                  ", ", 0.8045588372019237822`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"2.1`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"144.`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}], "examples per millisecond", 
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              ItemBox[
               GraphicsBox[RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAACiX9jPRZu0/5IZx3L346T86
kIsoWY7gP/UjUJgyFe0/FAsV69Ou6D//4C7AHjHbPyllhiTr5+w/IDx2C9Ho
5z8qGZweUSbYP3xR6Qfeku0/o6lvfFCz3z8YjqFVqexuP/79coCeEu4/wFCP
4O+B7D9hGQYf9ibnP9ZmXsXqie0/bcHuAmB96j8gpZvUVufhP9rAh5lVFO4/
jmmGjRiy3j8UyQgxiXpoP0g6Cx98Qu0/aoMtd3Nv6T9eDBO1fFLeP2gd4hZw
gO4/IeHf5Okg7j/k2gL1WV7rPwAAAAAAAPA/4XoUrkfh2j8AAAAAAAAAAOj0
zLAi8O0/sHp12aH/6z8K/+4DB9TlPzdw/QwQzu0/meedPOF+6z9nNtOeIYXk
P7qz25oGtu4/eMeaENtw3T9k92GpsW1gPwjmwnieXO4/YbFuRJCZ7T/+9npK
S/7pP21KOB7jq+0/xMM1Rb396j9VmTjMOTXjP0B1ZZxqOe4/GeZgw4oU7T+o
DewwS6ToPwoywKw=
                 "], {{0, 0}, {4, 4}}, {0, 1}],
                Epilog->{{
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4592", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4592", "\" examples of \"", "0", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9596656217345872`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.9681636095298335`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9638958858102435`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4592, " examples of ", 0, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9596656217345872}], 
                    Row[{"Recall = ", 0.9681636095298335}], 
                    Row[{"FScore = ", 0.9638958858102435}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "1", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0006269592476489029`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.000549551199853453`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{3, " examples of ", 1, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.0006269592476489029}], 
                    Row[{"Row fraction = ", 0.000549551199853453}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["83", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "83", "\" examples of \"", "2", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01734587251828631`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.01753274186734263`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{83, " examples of ", 2, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.01734587251828631}], 
                    Row[{"Row fraction = ", 0.01753274186734263}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["107", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "107", "\" examples of \"", "3", "\" misclassified as \"",
                     "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.022361546499477535`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.021984795561947813`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{107, " examples of ", 3, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.022361546499477535`}], 
                    Row[{"Row fraction = ", 0.021984795561947813`}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["22", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "22", "\" examples of \"", "0", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.003945480631276901`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.004638414505587181`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{22, " examples of ", 0, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.003945480631276901}], 
                    Row[{"Row fraction = ", 0.004638414505587181}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["5276", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5276", "\" examples of \"", "1", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9461979913916786`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9664773768089394`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9562301767104666`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5276, " examples of ", 1, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9461979913916786}], 
                    Row[{"Recall = ", 0.9664773768089394}], 
                    Row[{"FScore = ", 0.9562301767104666}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["95", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "95", "\" examples of \"", "2", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.017037302725968435`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.02006759611322349`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{95, " examples of ", 2, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.017037302725968435`}], 
                    Row[{"Row fraction = ", 0.02006759611322349}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["183", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "183", "\" examples of \"", "3", "\" misclassified as \"",
                     "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.03281922525107604`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.03760016437230327`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{183, " examples of ", 3, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.03281922525107604}], 
                    Row[{"Row fraction = ", 0.03760016437230327}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["94", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "94", "\" examples of \"", "0", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01946975973487987`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.01981868016023614`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{94, " examples of ", 0, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.01946975973487987}], 
                    Row[{"Row fraction = ", 0.01981868016023614}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["89", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "89", "\" examples of \"", "1", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01843413421706711`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.016303352262319108`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{89, " examples of ", 1, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.01843413421706711}], 
                    Row[{"Row fraction = ", 0.016303352262319108`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4425", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4425", "\" examples of \"", "2", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9165285832642917`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9347275031685678`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9255385902530852`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4425, " examples of ", 2, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9165285832642917}], 
                    Row[{"Recall = ", 0.9347275031685678}], 
                    Row[{"FScore = ", 0.9255385902530852}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["220", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "220", "\" examples of \"", "3", "\" misclassified as \"",
                     "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.045567522783761395`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.04520238339839737`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{220, " examples of ", 3, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.045567522783761395`}], 
                    Row[{"Row fraction = ", 0.04520238339839737}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["35", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "35", "\" examples of \"", "0", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.007585609016038145`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.007379295804343242`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{35, " examples of ", 0, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.007585609016038145}], 
                    Row[{"Row fraction = ", 0.007379295804343242}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["91", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "91", "\" examples of \"", "1", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.019722583441699176`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.016669719728888074`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{91, " examples of ", 1, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.019722583441699176`}], 
                    Row[{"Row fraction = ", 0.016669719728888074`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["131", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "131", "\" examples of \"", "2", "\" misclassified as \"",
                     "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.028391850888599912`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.027672158850866074`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{131, " examples of ", 2, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.028391850888599912`}], 
                    Row[{"Row fraction = ", 0.027672158850866074`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4357", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4357", "\" examples of \"", "3", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9442999566536627`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.8952126566673515`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9191013606159687`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4357, " examples of ", 3, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9442999566536627}], 
                    Row[{"Recall = ", 0.8952126566673515}], 
                    Row[{"FScore = ", 0.9191013606159687}]}], "Tooltip"]& ]}, 
                  
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4743", "\" example\"", "\"s\"", "\" of class \"", "0"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9681636095298335`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4743, " example", "s", " of class ", 0}], 
                    Row[{"Recall = ", 0.9681636095298335}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5459", "\" example\"", "\"s\"", "\" of class \"", "1"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9664773768089394`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5459, " example", "s", " of class ", 1}], 
                    Row[{"Recall = ", 0.9664773768089394}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4734", "\" example\"", "\"s\"", "\" of class \"", "2"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9347275031685678`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4734, " example", "s", " of class ", 2}], 
                    Row[{"Recall = ", 0.9347275031685678}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4867", "\" example\"", "\"s\"", "\" of class \"", "3"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.8952126566673515`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4867, " example", "s", " of class ", 3}], 
                    Row[{"Recall = ", 0.8952126566673515}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4785", "\" example\"", "\"s\"", "\" classified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9596656217345872`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4785, " example", "s", " classified as ", 0}], 
                    Row[{"Precision = ", 0.9596656217345872}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5576", "\" example\"", "\"s\"", "\" classified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9461979913916786`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5576, " example", "s", " classified as ", 1}], 
                    Row[{"Precision = ", 0.9461979913916786}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4828", "\" example\"", "\"s\"", "\" classified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9165285832642917`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4828, " example", "s", " classified as ", 2}], 
                    Row[{"Precision = ", 0.9165285832642917}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4614", "\" example\"", "\"s\"", "\" classified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9442999566536627`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4614, " example", "s", " classified as ", 3}], 
                    Row[{"Precision = ", 0.9442999566536627}]}], 
                    "Tooltip"]& ]},
                Frame->True,
                FrameLabel->{
                  FormBox["\"predicted class\"", TraditionalForm], 
                  FormBox["\"actual class\"", TraditionalForm]},
                FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {
                    2.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {
                    1.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {
                    0.5, 
                    FormBox[
                    RotationBox["3", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["4743", TraditionalForm]}, {2.5, 
                    FormBox["5459", TraditionalForm]}, {1.5, 
                    FormBox["4734", TraditionalForm]}, {0.5, 
                    FormBox["4867", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["4785", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["5576", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["4828", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["4614", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["3", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                FrameTicksStyle->13,
                GridLinesStyle->Directive[
                  GrayLevel[0.5, 0.4]],
                ImageSize->212.4,
                
                Method->{
                 "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                  Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                PlotRangePadding->None],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{{3.866868827326494*^9, 3.866868851119316*^9}, {
   3.866869626721004*^9, 3.8668696415126762`*^9}, 3.8675912169533*^9, 
   3.8681070302475233`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"e5de8c20-5ac5-47e0-aafd-32dd27bb98dc"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hard neural logic", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602720354347*^9, 
  3.866602722250537*^9}},ExpressionUUID->"5330bb32-e656-4b8b-bb36-\
16ab02f0840f"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602724930586*^9, 
  3.866602725762454*^9}},ExpressionUUID->"9ccf4bd6-05a1-49f1-915f-\
95679eedaa4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", "trainData", "]"}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.866870343416011*^9, 3.8668703445197*^9}, {
  3.8676599016367483`*^9, 3.867659904995343*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"ce6f0f7f-95ec-4012-ad4e-67899225afe1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"16", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{"inputSize", ",", "100", ",", 
          RowBox[{
           RowBox[{"RandomBalancedNormalSoftBits", "[", "#", "]"}], "&"}], 
          ",", 
          RowBox[{
           RowBox[{"RandomBalancedNormalSoftBits", "[", "#", "]"}], "&"}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"HardNeuralAND", "[", 
         RowBox[{"100", ",", "classificationLayerSize", ",", 
          RowBox[{
           RowBox[{"RandomBalancedNormalSoftBits", "[", "#", "]"}], "&"}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"HardNeuralReshapeLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866512854091155*^9, 3.8665128815568047`*^9}, {
   3.866513103300004*^9, 3.866513116326098*^9}, {3.8665133340990458`*^9, 
   3.8665133419773703`*^9}, {3.86651391128594*^9, 3.866513915466413*^9}, {
   3.866514318655335*^9, 3.866514323501399*^9}, {3.866514602855854*^9, 
   3.866514605749691*^9}, {3.86651468027989*^9, 3.8665147385101433`*^9}, {
   3.8665168378259563`*^9, 3.866516840683816*^9}, {3.866516968713831*^9, 
   3.866516971903157*^9}, {3.8665173610656767`*^9, 3.866517372695388*^9}, 
   3.866517444884035*^9, {3.86651878744969*^9, 3.8665188117507257`*^9}, {
   3.866518954624714*^9, 3.866518969573318*^9}, {3.866520101802957*^9, 
   3.866520108575643*^9}, {3.866520188881999*^9, 3.8665202157280684`*^9}, {
   3.866520364293333*^9, 3.866520392296053*^9}, {3.86652044871375*^9, 
   3.8665204631835423`*^9}, {3.8665219880508347`*^9, 3.866522005928316*^9}, {
   3.8665272161026173`*^9, 3.8665272312695007`*^9}, {3.866527801201952*^9, 
   3.866527883631137*^9}, {3.866528045329198*^9, 3.8665280486071043`*^9}, {
   3.866528154113455*^9, 3.8665281741152687`*^9}, {3.866528447153947*^9, 
   3.866528447260316*^9}, {3.866528670002123*^9, 3.86652867583491*^9}, {
   3.86652876246611*^9, 3.86652876256351*^9}, {3.866528813858374*^9, 
   3.866528848079921*^9}, {3.866530033731058*^9, 3.866530050034823*^9}, {
   3.866532603007605*^9, 3.8665326199562283`*^9}, {3.8665328331522837`*^9, 
   3.866532845529175*^9}, {3.866532894976413*^9, 3.866532895812646*^9}, {
   3.8665329705120907`*^9, 3.866532996865466*^9}, {3.866533798129952*^9, 
   3.866533798585582*^9}, {3.866542948856092*^9, 3.866542956003662*^9}, {
   3.866543312214932*^9, 3.8665433126315613`*^9}, {3.866545711295557*^9, 
   3.866545711720436*^9}, {3.866546071686404*^9, 3.866546081040039*^9}, {
   3.866547900239717*^9, 3.8665479093644657`*^9}, {3.866549693552167*^9, 
   3.866549704088811*^9}, {3.866550126984569*^9, 3.8665501393456163`*^9}, {
   3.866551310563048*^9, 3.866551316716016*^9}, {3.866552552251585*^9, 
   3.866552552469812*^9}, {3.866552612077286*^9, 3.866552621902178*^9}, {
   3.86655297295109*^9, 3.8665530085584908`*^9}, {3.866553815227034*^9, 
   3.866553831744128*^9}, {3.866554274483659*^9, 3.8665542884172983`*^9}, {
   3.866554409228067*^9, 3.866554412577661*^9}, {3.866554466780363*^9, 
   3.866554467185257*^9}, {3.866554546724543*^9, 3.866554547081894*^9}, {
   3.866554637927086*^9, 3.866554643213908*^9}, {3.8665551202789803`*^9, 
   3.866555125450521*^9}, {3.866555219318622*^9, 3.8665552411393957`*^9}, {
   3.866555370545534*^9, 3.866555374243248*^9}, {3.866600476190877*^9, 
   3.866600520811289*^9}, {3.866600851629229*^9, 3.8666008545843487`*^9}, {
   3.866601173213505*^9, 3.866601184697352*^9}, {3.866602823213896*^9, 
   3.866602823651602*^9}, {3.866624063636963*^9, 3.866624070070056*^9}, {
   3.866864848820673*^9, 3.8668649018442097`*^9}, 3.8668649498986273`*^9, {
   3.866870158165018*^9, 3.8668701585199003`*^9}, {3.866870313913095*^9, 
   3.866870347432589*^9}, {3.86687070668148*^9, 3.866870709305764*^9}, {
   3.866874324915924*^9, 3.866874327763575*^9}, {3.866874459504965*^9, 
   3.866874459651349*^9}, {3.86688629545262*^9, 3.8668862958798847`*^9}, {
   3.866886781155374*^9, 3.8668867817674427`*^9}, {3.866887024065243*^9, 
   3.866887024335256*^9}, {3.866887176651325*^9, 3.866887183367484*^9}, {
   3.8668872857079782`*^9, 3.866887288446698*^9}, {3.8672933502433777`*^9, 
   3.867293351194455*^9}, {3.8672943201526012`*^9, 3.867294320574452*^9}, {
   3.8673072679566917`*^9, 3.86730727548538*^9}, {3.8673117146946087`*^9, 
   3.86731171694258*^9}, {3.867312640857286*^9, 3.8673126485630198`*^9}, {
   3.867483132216476*^9, 3.867483137068089*^9}, {3.867484558937159*^9, 
   3.867484565125327*^9}, {3.867484885034177*^9, 3.8674848960292263`*^9}, {
   3.8674857810280046`*^9, 3.867485785790262*^9}, {3.867485972308717*^9, 
   3.8674859777590923`*^9}, {3.867575634248128*^9, 3.867575669182214*^9}, 
   3.867592743700955*^9, {3.867593550197529*^9, 3.8675935538692703`*^9}, {
   3.867593719866111*^9, 3.8675937252614183`*^9}, {3.867593837857523*^9, 
   3.867593838180921*^9}, {3.867593997313245*^9, 3.867594007445169*^9}, {
   3.867594183313306*^9, 3.867594191053112*^9}, {3.867594279329269*^9, 
   3.867594279525052*^9}, {3.867594436544726*^9, 3.867594441717057*^9}, {
   3.867594539418096*^9, 3.8675945421729393`*^9}, {3.8675946505292997`*^9, 
   3.8675946515410852`*^9}, {3.867594823818615*^9, 3.867594825101057*^9}, {
   3.867595056465706*^9, 3.867595057069421*^9}, {3.8675951255616198`*^9, 
   3.86759515143506*^9}, {3.867595560572082*^9, 3.867595574085411*^9}, {
   3.867595795195505*^9, 3.867595804189353*^9}, {3.867820900250691*^9, 
   3.8678209054083347`*^9}, {3.8678213948752117`*^9, 
   3.8678213953528347`*^9}, {3.8678241310875*^9, 3.867824155627552*^9}, {
   3.8678359011608477`*^9, 3.867835906741913*^9}, {3.867835991351974*^9, 
   3.867835993033587*^9}, {3.867836130935794*^9, 3.8678361328821583`*^9}, {
   3.8678362401794147`*^9, 3.867836242602487*^9}, {3.867836307448196*^9, 
   3.867836313353601*^9}, {3.86783647125273*^9, 3.867836473650206*^9}, {
   3.867836534947302*^9, 3.86783654330317*^9}, {3.867836648129442*^9, 
   3.8678366544118233`*^9}, {3.867836897818256*^9, 3.8678369025722857`*^9}, {
   3.867837022233658*^9, 3.867837033901739*^9}, {3.867837623887574*^9, 
   3.867837627813425*^9}, {3.86783787807589*^9, 3.867837896261313*^9}, {
   3.8678382960747147`*^9, 3.8678383098582077`*^9}, {3.867838463835903*^9, 
   3.867838469455121*^9}, {3.868011185484955*^9, 3.868011190180541*^9}, 
   3.8680115251975403`*^9, {3.868011599662116*^9, 3.868011610099432*^9}, {
   3.868012021342428*^9, 3.868012021777741*^9}, {3.8680123171105328`*^9, 
   3.868012319851869*^9}, {3.8680133115507507`*^9, 3.86801331266679*^9}, {
   3.868013582390593*^9, 3.868013590170991*^9}, {3.868013764086578*^9, 
   3.8680137687149076`*^9}, {3.868013879870481*^9, 3.868013880403047*^9}, {
   3.868014050630856*^9, 3.8680140534113092`*^9}, {3.868015313257505*^9, 
   3.8680153133813334`*^9}, {3.8680156735935507`*^9, 3.868015674173932*^9}, {
   3.868025979305698*^9, 3.868025989889565*^9}, {3.868026149720632*^9, 
   3.868026153818652*^9}, {3.8680275880620193`*^9, 3.868027599458037*^9}, 
   3.8680728381858788`*^9, {3.868073101365309*^9, 3.868073120896317*^9}, {
   3.868096581385182*^9, 3.868096588849518*^9}, {3.86809724967476*^9, 
   3.868097260664975*^9}, {3.868097366454175*^9, 3.868097372193758*^9}, {
   3.86809744514721*^9, 3.868097454051366*^9}, {3.868106266015449*^9, 
   3.8681062786390047`*^9}, {3.86817188904335*^9, 3.8681718917227983`*^9}, {
   3.8681720442854147`*^9, 3.868172048282813*^9}, {3.868173162117033*^9, 
   3.868173171017057*^9}, {3.868342003158853*^9, 
   3.8683420042415037`*^9}},ExpressionUUID->"feba2f53-f4f5-43e6-a86d-\
fb7cc5e96658"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"64", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"HardNeuralChain", "[", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"inputSize", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardDropoutLayer", "[", "0.25", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralReshapeLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.867841916987248*^9, 3.8678421071281843`*^9}, {
   3.867842389163254*^9, 3.8678424104725847`*^9}, {3.867842604635694*^9, 
   3.867842606084375*^9}, {3.8678427700989523`*^9, 3.8678427715606728`*^9}, {
   3.867843707138914*^9, 3.867843754464377*^9}, 3.867843942708643*^9, {
   3.867843987859889*^9, 3.867843994528171*^9}, {3.867847590981337*^9, 
   3.8678476427453136`*^9}, {3.867847796754768*^9, 3.867847806505651*^9}, {
   3.867848727229472*^9, 3.867848753066246*^9}, {3.8678489087021*^9, 
   3.867848922743598*^9}, {3.867848985918405*^9, 3.867848988579921*^9}, {
   3.867850397128324*^9, 3.867850399228125*^9}, {3.867850871210086*^9, 
   3.867851125253394*^9}, {3.867852647604347*^9, 3.867852661157853*^9}, {
   3.8678904974623013`*^9, 3.867890507541542*^9}, {3.867892066351469*^9, 
   3.867892091410841*^9}, {3.867892395303556*^9, 3.867892412925453*^9}, {
   3.8678925469176607`*^9, 3.8678926534696503`*^9}, {3.867893447753015*^9, 
   3.8678934523329153`*^9}, {3.867893759343811*^9, 3.867893768350878*^9}, {
   3.867894321410741*^9, 3.867894327640942*^9}, {3.867894966595901*^9, 
   3.8678949667723093`*^9}, {3.8678959832744093`*^9, 3.867895984764944*^9}, {
   3.867896217305914*^9, 3.867896217634267*^9}, {3.868015828583332*^9, 
   3.868015830982279*^9}, {3.8680160348880863`*^9, 3.8680160463265867`*^9}, {
   3.8680175823000097`*^9, 3.868017583226742*^9}, {3.8680176903116293`*^9, 
   3.868017690442505*^9}, {3.868017762870285*^9, 3.868017763178317*^9}, {
   3.868017852333824*^9, 3.86801785278174*^9}, {3.868018721655579*^9, 
   3.868018721748577*^9}, {3.868018828735849*^9, 3.868018829084876*^9}, {
   3.8680188647679863`*^9, 3.868018866052195*^9}, {3.868019475857217*^9, 
   3.868019476611607*^9}, {3.8680251836667643`*^9, 3.86802518553231*^9}, 
   3.868025801952386*^9, {3.868025880131111*^9, 3.8680258811405087`*^9}, {
   3.868025969336673*^9, 3.868025970272675*^9}, {3.868075478091976*^9, 
   3.868075488415468*^9}, {3.868075647439807*^9, 3.8680756819954863`*^9}, {
   3.8680758606502132`*^9, 3.868075861124577*^9}, {3.868076303337597*^9, 
   3.868076308238093*^9}, 3.86807639381747*^9, {3.8680765578827057`*^9, 
   3.868076559462569*^9}, {3.868077108394541*^9, 3.868077111307229*^9}, {
   3.868077198532556*^9, 3.868077212922988*^9}, {3.868078074364006*^9, 
   3.868078086727457*^9}, {3.8680965958257837`*^9, 3.868096597707309*^9}, 
   3.868096730107664*^9, {3.868096884802455*^9, 3.868096885803565*^9}, {
   3.868097376954582*^9, 3.868097380136511*^9}, {3.868099357492517*^9, 
   3.8680993643241*^9}, {3.86809980581467*^9, 3.868099806802939*^9}, {
   3.868104553220705*^9, 3.868104554532338*^9}, {3.868104702470316*^9, 
   3.868104706480156*^9}, {3.868106128993238*^9, 3.868106135121017*^9}, {
   3.868107197268901*^9, 3.8681071975647507`*^9}, {3.868332645574889*^9, 
   3.868332646638074*^9}, {3.868332771889559*^9, 3.868332772221434*^9}, {
   3.868332881990411*^9, 3.868332882349235*^9}, {3.868333185653941*^9, 
   3.868333187972329*^9}, {3.868333223789838*^9, 3.868333241436446*^9}, {
   3.868333311494193*^9, 3.868333311585538*^9}, {3.868333363918051*^9, 
   3.868333373439343*^9}, {3.868333426528824*^9, 3.868333427361883*^9}, {
   3.8683334729173727`*^9, 3.868333491484881*^9}, {3.8683336131252527`*^9, 
   3.868333644301938*^9}, {3.868333753839458*^9, 3.868333756348134*^9}, {
   3.868333802548826*^9, 3.868333803066515*^9}, {3.868333852564464*^9, 
   3.8683338529943857`*^9}, {3.868334322461838*^9, 3.868334336210762*^9}, 
   3.8683343802796297`*^9, 3.868335233701426*^9, {3.868342009221051*^9, 
   3.868342010089508*^9}, {3.868343042886507*^9, 3.868343043058333*^9}, {
   3.868344323150991*^9, 3.868344324138338*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"a805bd2a-cef0-4df4-b838-7efd7718ed29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"softNet", "=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<NeuralLogicNet\>\"", "->", "net"}], ",", 
       RowBox[{"\"\<Loss\>\"", "->", 
        RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<NeuralLogicNet\>\"", "->", "\"\<Loss\>\""}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866020485648757*^9, 3.866020486758964*^9}, {
   3.8660206133758917`*^9, 3.86602061576938*^9}, {3.866021594138579*^9, 
   3.866021622648958*^9}, {3.86602221641733*^9, 3.866022259472351*^9}, {
   3.86602506519114*^9, 3.8660250652828293`*^9}, {3.866027283063545*^9, 
   3.866027305459503*^9}, {3.866027571359556*^9, 3.866027577807056*^9}, {
   3.866028577017147*^9, 3.866028577337102*^9}, {3.866028739939226*^9, 
   3.866028740417481*^9}, {3.866038386270308*^9, 3.866038393509417*^9}, {
   3.866038426793558*^9, 3.866038432549663*^9}, {3.866038541734429*^9, 
   3.866038552581696*^9}, {3.8660399839336977`*^9, 3.8660400476873417`*^9}, {
   3.866040086377454*^9, 3.866040113183221*^9}, {3.8660842202209263`*^9, 
   3.8660842234441147`*^9}, {3.866084729086014*^9, 3.8660847389004602`*^9}, {
   3.866084883181377*^9, 3.866084891034108*^9}, {3.866087944385981*^9, 
   3.866087946377273*^9}, {3.8660898129249763`*^9, 3.866089819116226*^9}, {
   3.8660918927590847`*^9, 3.866091896174137*^9}, {3.866118640249077*^9, 
   3.8661186553525763`*^9}, {3.8661697941751633`*^9, 3.86616982143332*^9}, {
   3.8661700477905827`*^9, 3.866170062053422*^9}, {3.866170430900312*^9, 
   3.866170441150339*^9}, {3.866171085971992*^9, 3.866171092538931*^9}, {
   3.8661713117235622`*^9, 3.866171323794742*^9}, {3.866172075114151*^9, 
   3.866172086385466*^9}, {3.8661726453612757`*^9, 3.8661726565682907`*^9}, {
   3.866172963402001*^9, 3.866172967303824*^9}, {3.866175492855685*^9, 
   3.86617549327916*^9}, {3.8661755786344223`*^9, 3.866175597119087*^9}, {
   3.866176135095639*^9, 3.866176139335493*^9}, {3.866176563216754*^9, 
   3.866176567303925*^9}, {3.866177234452429*^9, 3.866177240033128*^9}, {
   3.866177471626033*^9, 3.866177471849081*^9}, {3.8661781260498943`*^9, 
   3.866178174045168*^9}, {3.866179499382938*^9, 3.866179520538422*^9}, {
   3.866180308892374*^9, 3.866180328231532*^9}, {3.866180620692492*^9, 
   3.866180620811393*^9}, {3.866180727174838*^9, 3.866180728856566*^9}, {
   3.8661809278929253`*^9, 3.866180930764296*^9}, {3.866181239813146*^9, 
   3.866181242692215*^9}, {3.866184773364808*^9, 3.866184773468157*^9}, {
   3.866184929896516*^9, 3.866184931032365*^9}, {3.866185363169696*^9, 
   3.866185363420731*^9}, {3.866185838820908*^9, 3.866185842136413*^9}, {
   3.8661861874248247`*^9, 3.866186188480125*^9}, {3.86618706378515*^9, 
   3.866187066984132*^9}, {3.866209107928833*^9, 3.866209126148491*^9}, {
   3.866209156593391*^9, 3.8662091576123867`*^9}, {3.866209702848567*^9, 
   3.866209710039878*^9}, {3.866209813177039*^9, 3.866209834123746*^9}, {
   3.86621053449234*^9, 3.866210540769287*^9}, {3.866210581043235*^9, 
   3.8662105868693542`*^9}, {3.866210622339385*^9, 3.866210627545692*^9}, {
   3.866210657739574*^9, 3.8662106609137363`*^9}, {3.866210756731784*^9, 
   3.866210768609764*^9}, {3.866211193549685*^9, 3.8662112016988564`*^9}, {
   3.866211352173271*^9, 3.866211355378903*^9}, {3.8662114673335752`*^9, 
   3.866211471635058*^9}, {3.8662116682945633`*^9, 3.86621167888715*^9}, 
   3.8662117763988447`*^9, {3.866211833182128*^9, 3.8662118352832003`*^9}, {
   3.86621193783076*^9, 3.866211943219183*^9}, {3.866214069618958*^9, 
   3.866214085207219*^9}, {3.86621414917101*^9, 3.866214201293022*^9}, {
   3.866214582928615*^9, 3.866214586096209*^9}, {3.8662146462687683`*^9, 
   3.8662146535499763`*^9}, {3.866214940556902*^9, 3.866214945432839*^9}, {
   3.86625367959163*^9, 3.86625368544868*^9}, {3.8662538129344873`*^9, 
   3.866253817785205*^9}, {3.866254549496963*^9, 3.866254555093663*^9}, {
   3.8662546252320347`*^9, 3.866254645248086*^9}, {3.866254759667647*^9, 
   3.8662547607426033`*^9}, {3.866254889744342*^9, 3.8662548909149446`*^9}, {
   3.866254921233653*^9, 3.866254922151456*^9}, {3.866255111823483*^9, 
   3.866255112738577*^9}, 3.8662574558616056`*^9, {3.866257625671372*^9, 
   3.8662576360908813`*^9}, {3.866257668990629*^9, 3.866257673154139*^9}, {
   3.866258160607082*^9, 3.866258163488317*^9}, {3.866258216054822*^9, 
   3.866258216152341*^9}, {3.866258465946023*^9, 3.8662584660890408`*^9}, {
   3.8662587584666643`*^9, 3.866258758714335*^9}, {3.8662591656591253`*^9, 
   3.866259171110828*^9}, {3.8662595439403343`*^9, 3.866259575288472*^9}, {
   3.866260163911601*^9, 3.866260184078418*^9}, {3.86626215222803*^9, 
   3.8662621832516203`*^9}, {3.866263109109415*^9, 3.86626311329671*^9}, {
   3.8662634113702927`*^9, 3.866263445027198*^9}, {3.8662637295611134`*^9, 
   3.8662637341766987`*^9}, {3.8662638454628477`*^9, 3.86626384912811*^9}, {
   3.866264629557499*^9, 3.866264632526574*^9}, {3.866264756302319*^9, 
   3.866264756571878*^9}, {3.86626485570925*^9, 3.8662648604861727`*^9}, {
   3.866264906589533*^9, 3.866264909654014*^9}, {3.8662650173821917`*^9, 
   3.866265024103039*^9}, {3.866267932128647*^9, 3.866267936947571*^9}, {
   3.866272289890004*^9, 3.866272326071719*^9}, 3.866272498086396*^9, {
   3.866272605318948*^9, 3.8662726100556726`*^9}, {3.866272697696899*^9, 
   3.8662727061238422`*^9}, {3.866272804197109*^9, 3.866272807076984*^9}, {
   3.866272890576043*^9, 3.8662729018249826`*^9}, {3.866273061136441*^9, 
   3.866273079881092*^9}, {3.8662739928242073`*^9, 3.866274026656089*^9}, {
   3.866274121640194*^9, 3.86627415310497*^9}, {3.8662742538084593`*^9, 
   3.866274260924819*^9}, {3.86627447707015*^9, 3.866274491178595*^9}, {
   3.866274954835182*^9, 3.866274972215249*^9}, {3.8662751949711027`*^9, 
   3.866275214973873*^9}, {3.866275317133552*^9, 3.866275326157571*^9}, {
   3.866276341927771*^9, 3.866276342361364*^9}, {3.866276444445874*^9, 
   3.866276444758065*^9}, 3.866276574032675*^9, {3.8662774805759163`*^9, 
   3.866277486441833*^9}, {3.866277730486899*^9, 3.866277745606361*^9}, {
   3.866277812901185*^9, 3.8662778241863747`*^9}, {3.866277923447342*^9, 
   3.866277942127078*^9}, {3.866278044847097*^9, 3.866278070211129*^9}, {
   3.866278491367318*^9, 3.866278493966505*^9}, {3.866278580024693*^9, 
   3.8662785830122213`*^9}, {3.866278895153315*^9, 3.866278898232675*^9}, {
   3.866280230366321*^9, 3.86628024016776*^9}, 3.866280351079256*^9, {
   3.866280499461529*^9, 3.8662805080447283`*^9}, {3.866280639515723*^9, 
   3.8662806449211483`*^9}, {3.866280754797947*^9, 3.86628075810079*^9}, {
   3.866280876373425*^9, 3.866280889329287*^9}, 3.866281009490582*^9, {
   3.8662811039106913`*^9, 3.866281107962268*^9}, {3.866281186723476*^9, 
   3.866281191533492*^9}, {3.8662812575988626`*^9, 3.866281268830084*^9}, {
   3.8662813166116953`*^9, 3.866281325765922*^9}, {3.866282044987713*^9, 
   3.866282048676916*^9}, {3.866282148870701*^9, 3.866282152685348*^9}, {
   3.86628313823394*^9, 3.8662831431981792`*^9}, {3.866283203895447*^9, 
   3.8662832148382063`*^9}, {3.8662832951824627`*^9, 
   3.8662833056304398`*^9}, {3.866283478244402*^9, 3.866283487341878*^9}, {
   3.8662841436542883`*^9, 3.86628415025281*^9}, {3.866284940968055*^9, 
   3.866284945101494*^9}, {3.866285029031362*^9, 3.866285034053158*^9}, {
   3.866285238231142*^9, 3.8662852400450497`*^9}, {3.8662854784494677`*^9, 
   3.866285480030343*^9}, {3.8662855684494333`*^9, 3.866285589220209*^9}, {
   3.866285661897065*^9, 3.866285665049341*^9}, {3.866286012525502*^9, 
   3.866286023701212*^9}, {3.866286183975936*^9, 3.866286197019022*^9}, {
   3.866286343624745*^9, 3.8662863761838703`*^9}, {3.86628647476213*^9, 
   3.866286478513227*^9}, {3.866286583730136*^9, 3.866286589629998*^9}, {
   3.8662866316154537`*^9, 3.866286632298744*^9}, {3.866286684611227*^9, 
   3.866286694033737*^9}, {3.866286815683847*^9, 3.866286826001635*^9}, {
   3.8662869515842*^9, 3.866286957090143*^9}, {3.866287432190014*^9, 
   3.866287433732437*^9}, {3.8662875714309177`*^9, 3.866287575508819*^9}, {
   3.866287972431319*^9, 3.866287979390542*^9}, {3.8662881211610413`*^9, 
   3.866288128734665*^9}, {3.866301184432645*^9, 3.866301189032214*^9}, {
   3.866301252666163*^9, 3.866301255952261*^9}, {3.866301376402754*^9, 
   3.866301391652487*^9}, {3.866301466042976*^9, 3.866301469288639*^9}, {
   3.866301630395039*^9, 3.866301653060717*^9}, {3.866301748836125*^9, 
   3.866301755312545*^9}, {3.86630188485115*^9, 3.866301888560711*^9}, {
   3.866302280747377*^9, 3.8663022952887983`*^9}, {3.866302405795878*^9, 
   3.866302419001148*^9}, {3.866302495340143*^9, 3.866302504605687*^9}, {
   3.866350591374894*^9, 3.8663505951022243`*^9}, {3.866351142159863*^9, 
   3.866351179558625*^9}, {3.8663515938249702`*^9, 3.866351597311022*^9}, {
   3.8663516429930353`*^9, 3.866351646919097*^9}, {3.8663540899964314`*^9, 
   3.866354091250739*^9}, 3.866354227060774*^9, {3.866354342347616*^9, 
   3.866354366019519*^9}, {3.866354536533381*^9, 3.866354542835105*^9}, {
   3.866354615988611*^9, 3.866354616498942*^9}, {3.866354747316181*^9, 
   3.866354747986311*^9}, {3.866354820971937*^9, 3.866354830674176*^9}, {
   3.866354985259542*^9, 3.866355003354249*^9}, {3.866355243555305*^9, 
   3.866355280233426*^9}, {3.866355363275181*^9, 3.8663553649290257`*^9}, {
   3.866355508482728*^9, 3.8663555086333237`*^9}, {3.866355904531114*^9, 
   3.8663559105053043`*^9}, {3.866355992402801*^9, 3.866356013229351*^9}, {
   3.866356256538742*^9, 3.866356257041319*^9}, {3.866356472449071*^9, 
   3.866356473280033*^9}, {3.8663565818412313`*^9, 3.866356588441074*^9}, {
   3.866356990748909*^9, 3.866356994266841*^9}, {3.8663571204214773`*^9, 
   3.866357120574224*^9}, {3.8663572027579412`*^9, 3.8663572078996153`*^9}, {
   3.866357620436617*^9, 3.866357634688436*^9}, {3.866357667446629*^9, 
   3.866357681140574*^9}, {3.8663583040873337`*^9, 3.866358308549032*^9}, {
   3.866358702488315*^9, 3.866358710660177*^9}, {3.866358792502235*^9, 
   3.866358792643732*^9}, {3.8663588650968037`*^9, 3.866358870370079*^9}, {
   3.8663590601050797`*^9, 3.866359061311141*^9}, {3.866359100825281*^9, 
   3.8663591032317047`*^9}, {3.866360392667655*^9, 3.866360402393593*^9}, {
   3.866360446451545*^9, 3.866360454122822*^9}, {3.866360518763679*^9, 
   3.866360523813664*^9}, {3.8663605658118258`*^9, 3.866360586933572*^9}, {
   3.866360874844895*^9, 3.866360875286996*^9}, {3.8663609358459*^9, 
   3.866360946523975*^9}, {3.8663629695673723`*^9, 3.8663629719826107`*^9}, {
   3.8663639844553833`*^9, 3.8663639851026163`*^9}, {3.866364664263899*^9, 
   3.866364667805708*^9}, {3.8663647416864157`*^9, 3.866364751498241*^9}, {
   3.8663648173209887`*^9, 3.8663648239090853`*^9}, {3.866364861552744*^9, 
   3.866364866359233*^9}, {3.866364911593669*^9, 3.866364912091476*^9}, {
   3.8663650443606586`*^9, 3.8663650452161922`*^9}, {3.866365512692107*^9, 
   3.866365515810193*^9}, 3.866365740980801*^9, {3.866366124781304*^9, 
   3.866366128103511*^9}, {3.86636615827591*^9, 3.866366161795991*^9}, 
   3.8663675572465467`*^9, {3.8663679823247623`*^9, 3.8663679840072737`*^9}, {
   3.8663685724947968`*^9, 3.866368575523563*^9}, {3.866368617885765*^9, 
   3.866368630439355*^9}, {3.8663688420628223`*^9, 3.866368846739706*^9}, {
   3.866368921365861*^9, 3.866368935403892*^9}, {3.866368992805874*^9, 
   3.8663689939334173`*^9}, {3.8663690430938*^9, 3.8663690474648046`*^9}, {
   3.866369083709838*^9, 3.8663691118719187`*^9}, {3.866369202398569*^9, 
   3.866369214195849*^9}, {3.866369334334588*^9, 3.866369336388123*^9}, {
   3.866369454951181*^9, 3.8663694569323397`*^9}, {3.866369515406219*^9, 
   3.866369518628167*^9}, {3.8663703695855513`*^9, 3.8663703750077*^9}, {
   3.8663705385538683`*^9, 3.866370541048525*^9}, {3.866370586394085*^9, 
   3.866370607876096*^9}, {3.8663707547717*^9, 3.866370757696903*^9}, {
   3.866370926163419*^9, 3.866370929489147*^9}, {3.866371042659484*^9, 
   3.8663710475373373`*^9}, {3.866371595734161*^9, 3.866371595814637*^9}, {
   3.866371630486404*^9, 3.866371630623527*^9}, {3.866371683122916*^9, 
   3.866371701147089*^9}, {3.866371789324903*^9, 3.866371822547234*^9}, {
   3.8663718525974607`*^9, 3.8663718606429367`*^9}, {3.866371974165319*^9, 
   3.866371979075355*^9}, {3.866372122293806*^9, 3.8663721296757917`*^9}, {
   3.866372551518608*^9, 3.866372561132722*^9}, {3.866372627211433*^9, 
   3.866372636080841*^9}, {3.8663728112322397`*^9, 3.866372812994047*^9}, {
   3.866372895895451*^9, 3.866372901477323*^9}, {3.8664377149946833`*^9, 
   3.8664377176580143`*^9}, {3.86643884019552*^9, 3.86643884333634*^9}, {
   3.866438919186672*^9, 3.866438921864346*^9}, {3.8664391767222757`*^9, 
   3.866439182016387*^9}, {3.866439413057221*^9, 3.8664394237656918`*^9}, {
   3.866440165425671*^9, 3.8664401663535337`*^9}, {3.8664414544278717`*^9, 
   3.866441455406114*^9}, {3.8664415241527863`*^9, 3.866441526297073*^9}, {
   3.866441636299324*^9, 3.866441637325185*^9}, {3.8664421743093033`*^9, 
   3.866442174534107*^9}, {3.866444116919817*^9, 3.866444119674713*^9}, {
   3.86644604617083*^9, 3.866446049128669*^9}, {3.866512861360115*^9, 
   3.866512866295472*^9}, {3.866512916479863*^9, 3.866512918447736*^9}, {
   3.866623312753614*^9, 3.866623319710231*^9}, 3.866624582319717*^9, {
   3.8668662017322693`*^9, 3.866866202166645*^9}, {3.866885151993841*^9, 
   3.866885152627983*^9}, {3.866886303360961*^9, 3.866886303494787*^9}, {
   3.866886784793562*^9, 3.866886785078327*^9}, {3.866887027953611*^9, 
   3.8668870285346737`*^9}, {3.866887196544759*^9, 3.8668871969509068`*^9}, {
   3.866887908638279*^9, 3.866887908768166*^9}, {3.866888202133163*^9, 
   3.8668882026401367`*^9}, {3.8668885411386957`*^9, 3.86688854148912*^9}, {
   3.866890470117792*^9, 3.866890470852077*^9}, {3.866890765878002*^9, 
   3.866890766260087*^9}, {3.86689132463979*^9, 3.8668913249890223`*^9}, {
   3.86689308168353*^9, 3.866893082217802*^9}, {3.866897888912188*^9, 
   3.8668978892625017`*^9}, {3.866898733832912*^9, 3.866898734749516*^9}, 
   3.8668994402579*^9, {3.866899773765663*^9, 3.866899774274312*^9}, {
   3.866952833901763*^9, 3.8669528351406612`*^9}, {3.866964109943631*^9, 
   3.866964110413616*^9}, {3.866966147880842*^9, 3.8669661483346167`*^9}, {
   3.866988245985949*^9, 3.866988246358993*^9}, {3.867074156194147*^9, 
   3.867074156647444*^9}, {3.867075460518784*^9, 3.867075460872748*^9}, {
   3.867130579976453*^9, 3.867130581878731*^9}, {3.867132238858082*^9, 
   3.86713226222477*^9}, {3.867132321058169*^9, 3.8671324110815372`*^9}, 
   3.86714816879574*^9, {3.867151174390662*^9, 3.867151175718362*^9}, {
   3.8671601859854937`*^9, 3.867160187248486*^9}, {3.867160271865155*^9, 
   3.867160273391037*^9}, {3.867206142108213*^9, 3.867206144010398*^9}, {
   3.867207661638524*^9, 3.8672076639716473`*^9}, {3.867225680992249*^9, 
   3.8672257375848494`*^9}, {3.867226575060524*^9, 3.8672265762181053`*^9}, {
   3.8672269605171947`*^9, 3.867226962147046*^9}, {3.8672272705896187`*^9, 
   3.867227297795145*^9}, {3.867227343085717*^9, 3.86722734351553*^9}, {
   3.86722737998987*^9, 3.867227380393511*^9}, {3.867227510606731*^9, 
   3.867227510759487*^9}, 3.8672275413257437`*^9, 3.867227636478323*^9, {
   3.867228148534873*^9, 3.86722815017175*^9}, {3.867235212746784*^9, 
   3.867235218959901*^9}, {3.867243061589653*^9, 3.867243089467525*^9}, {
   3.867243408789299*^9, 3.867243408892873*^9}, {3.8672443465611343`*^9, 
   3.867244347575115*^9}, {3.8672923794879313`*^9, 3.867292407247943*^9}, {
   3.867292793997984*^9, 3.867292794523506*^9}, {3.86729313056518*^9, 
   3.867293140483102*^9}, {3.8672932303810797`*^9, 3.867293230776718*^9}, {
   3.867294324594297*^9, 3.867294325174638*^9}, {3.867305927312809*^9, 
   3.867305927710868*^9}, {3.86730636106628*^9, 3.8673063615676527`*^9}, {
   3.86730727912813*^9, 3.867307279760503*^9}, {3.867307456280364*^9, 
   3.867307456624774*^9}, {3.867310934782545*^9, 3.867310935612999*^9}, {
   3.8673111612986937`*^9, 3.867311161302167*^9}, {3.8673117249217653`*^9, 
   3.867311725398467*^9}, {3.867312239359359*^9, 3.867312239717518*^9}, {
   3.867323044875226*^9, 3.867323050610677*^9}, {3.867331098943338*^9, 
   3.867331099090743*^9}, {3.86733389853468*^9, 3.867333898684703*^9}, {
   3.867399559935915*^9, 3.867399625423558*^9}, {3.867400091162709*^9, 
   3.867400112677143*^9}, {3.8674004611694317`*^9, 3.867400470751096*^9}, {
   3.8674039612129593`*^9, 3.867403961339106*^9}, {3.867404343391862*^9, 
   3.867404343493106*^9}, {3.867405223938087*^9, 3.8674052257279587`*^9}, {
   3.867406890830207*^9, 3.867406890979588*^9}, {3.867406928334382*^9, 
   3.867406928732006*^9}, 3.8674069690859013`*^9, 3.867407132280343*^9, 
   3.867407699751111*^9, {3.86740910335982*^9, 3.867409103533945*^9}, {
   3.86741451546389*^9, 3.867414544246604*^9}, {3.86741480776128*^9, 
   3.867414823759447*^9}, {3.8674150640103292`*^9, 3.867415067532441*^9}, {
   3.8674192410881844`*^9, 3.8674192414142323`*^9}, {3.867419337601428*^9, 
   3.867419338006322*^9}, {3.8674197151133127`*^9, 3.867419716366417*^9}, {
   3.86741980437457*^9, 3.8674198055585403`*^9}, {3.867420964777163*^9, 
   3.867420970276672*^9}, {3.867565400727728*^9, 3.867565402598975*^9}, 
   3.86757574945562*^9, {3.867583108618186*^9, 3.867583119673476*^9}, {
   3.867592825935584*^9, 3.8675928280210953`*^9}, {3.867593509898299*^9, 
   3.867593511045754*^9}, 3.867593572982695*^9, 3.8678363212387533`*^9, 
   3.867892665101438*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"ff705697-08c0-41db-8a85-131ecdba22d6"],

Cell[CellGroupData[{

Cell[BoxData["softNet"], "Input",
 CellChangeTimes->{{3.867852667460257*^9, 3.8678526698877697`*^9}, {
  3.867892670381201*^9, 3.8678926712427197`*^9}, {3.8680993729517307`*^9, 
  3.868099375535305*^9}, {3.8683613541008463`*^9, 3.868361354994094*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"1b570bfa-2a4d-48ef-b659-d88693679ac4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -15.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"2\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {223.0000014737193, 103.49999999999997`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.5, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Target\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Target\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Target"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Target\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Target"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25},
                     {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {12.75, 
                    17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "NeuralLogicNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{45}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2880}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{2880}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2880}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2880}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2880}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {2880}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{2880}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2880}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{45, 64}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2880}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{45, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{45, 64}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{45, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Sort" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[Sort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Sort, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 45, 
                    "$InputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{45, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{45, 
                    64}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{45, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{45, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Medians" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 33}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{45, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{45}, NeuralNetworks`RealT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {45}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{45}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{45}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{45}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{360}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{360}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{360}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {360}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{360}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {360}|>,
                     "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{360}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{360}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{8, 45}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{360}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 45}, NeuralNetworks`AtomT]|>|>,
                     "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{45}, NeuralNetworks`RealT], 
                    "Weights" -> NeuralNetworks`TensorT[{8, 45}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 45}, NeuralNetworks`RealT]|>|>,
                     "Sort" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[Sort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Sort, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{45}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{45}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 8, 
                    "$InputShape" -> NeuralNetworks`TensorT[{45}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{45}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8, 45}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8, 45},
                     NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8, 45}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 45}, NeuralNetworks`RealT]|>|>,
                     "Medians" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 23}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8, 45}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "3" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{2, 
                    4}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Harden" -> <|"Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 0.9, 0.1]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_845a91f1_5bcb_49f6_80de_2aa415542572", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1:eJy9vQlYU0f3OHyzkEQMkABKEJRAXFBRQ2QVxQRQsCDiWqwLi6Ki7KtbIAGU
2Kpgay22Lmit2r4uWHABRVaVKiCKFSy7oGgRggUBDZD/mXuTCP3e7/l+3/P8
nr9P9c7MPTNz9nNmMnNrHhi+IpCEYdi7YAxzcS1stDXEMC2oBzL5k79Ye3eL
WJHjN3a5xAvBmDMxLJODYWPJ5hgZ6uPhL13KOyIqoy6hsQSO35JSmFO0GMaT
qN8ESkwXkV2+HevSxhIYOjA4ntqCKJlHRKk5z00/9SBL9C15cxnjmiHXdbGM
+wdJEJXCmWE5I916b9b6I9wHZTDuAS6GbYanwKJsDDdwMWY+c3KGqfkU+Md4
GnPfuXT/qM3ruZO3JmWO34+9Zgil5GiqP99dwiLNCf7aMuCfX97aL/va3MKt
6iyjcAWZRaUlizJZXMrE1wzyF5yWiEytf0SflBP5pJkk5jtDNtajnM61LM1c
xJYMzSRZzRuuS9RmaFtvW071V36BfXNYGWuhmyqUTFjs4PBGGpY+nEj3KvwC
ozgtohYO/gvyQ4F+4dnWAw4YmfQ1h8Q9c8BY/wB1dQg/8xFDwhbQn3IC+NzD
0wX7XLiiSa6mNBJJuk2oFc2E4YU2Ft+yaTzB8UAfxkHtFIHrFr7FuI1PDZcX
t0Xr9nDHsnctb3MrsJkCAzw3JaUctVl0lD9U+sGtoNnG4InXCm2y5ZKVbmO+
W7Z+Wa8nFFbOoM0mtyzif338zLjvnpQzLxdJti8uY77Z8rVbCEvoUwkNsrjF
sokXtyZRhryOTGeRx2jrUjnmcyefNRZIycaruUIPfS+S6Rk+F7MdI5oz0dLn
6BobreUg/wCQi4msWQl/6FymHcsFm2wiM8eO6ei+R20Uf22JGZaIeWBavUW0
nwdQG4mvhSAXY74mGa14x0wdbCU2iKVLnGslXFI6NlZIN0l3w/T9Sb/ppLhg
e7OKfGmoTDPAxvqE8ieQfCXbk1sMC8mrTA4+wMZn/tUsROMsxM5jAySMXmiG
6VfBCJZohIs6+w1hwFDuVLKvHcsQ0EufQYy8fwo2Jisk/QrqaoYjIKE062Fj
GJRMPWxeLTfg32P6kAIwoGKaAqdiG6XQEFuITcaB/beRsrCYLOmLYXiViL3E
uvGh3iTrMPtxPlTRCD4IzUK4eVhzsk7KNOwR7SUxVLody5+Fbc2SMpJJDvCK
wyg0DuHez8Qq/SkiGi2CZpIhYGArsEouI52rk6mzz5gqkoRYVgoZ5M0UKY0a
QcOWgCxMQBYGKcIMLrUkRZLBMjRIKcwQmnqc9WJ9HeSynH+ox4uVua2YO6s6
hXuc7/O9rfmtqdTaFPPqo2OK7AKa54W7dC9lOfMzWJIiqlQ7eQyVIyvipBel
kJj3Jcyp1CC+eeZUxpYImgHZJoMlAydgMGlvIcVpQMspM9lOkhq5jRLnQY+/
SN9b66/9qorWmUmHf7u59HiMvptPj8qkR3PpoZheVAQ9Ei+jRgIAyv70mEx6
nJAemq4L/6JqFe21hB6RSY/k0ndW0bok9N0sehzREX+bzaJHSehf6DHY+i77
Dx7FSDYuGSe6iq477r3ZEhy3VvfrivXWRszNCY9E5Tm3D9NbIu1YDxfvOFDd
a8j45dLtR5kZh7S+Ldr8+9GOykZz0gPzlCLgHgv+UulZrvPOuXXTMEwCVa6D
xHz1YitohwoZPBEHKyQxf83bKpJMhhYG/C3kYrr+Hvdo8m6u0AIjIEGedP65
vw6szWBx2agn/OUzJBTOitzUlSQSH1P/MS1M/3rhxbEMTQPWjO1fxdcPFuLY
kPEmGEr7u68p5EwVjhgGWH1/cvMkFkZTd0NYbVxEoQAyUEM+GkPT/fLNIpoQ
444c6tMPjnwKhukjMJYK7A+dFBjJUkUjDqZ/0kMH465V9cRptHWqNoWZEN0S
FfIP956dh5ElIxH7c8gtHqMKKRg+LYZFYK4zDHf/g/MKE2potF/VCdNTCTYT
+Nda/k0h+mjw//DkLIkkVHEan1H7+7MLMXIhacSMq2cvP4NRCylqXsCMv8VZ
UFYA5mR1GwLzCjgPiFFHguX87kViSDTsb8Ym2zEM+0oxrIyMcBiD4s6kDI4x
2yv94Jip7veprhMMyVMWY9sl2jcyKPMOYumBaLxrYH8n4TmXITEtbTHdYkha
IHN1SCk56CKh79pJj86IZL7G9DpZur0S3blMl0nFRRMrz5hu4WvhYMkm5ZQF
Za4LDlIWlO88GBNB38Og7/JIjYig746gxO1MjeCmGpezdd+l67bw9cL4eq3d
ut0+unNZpRMbzU1rzScWB0zawj/gdCfZqcrVMYcy/07y/BSKU3m3YZw/fc82
uv221Cj4V5IakZ4a4U+Ps6THDWjBsPGSVD9GaiQnNSojdVeG1KqrW7erWfdD
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
OWn12qj6xumy/FM4zHuJtETLzXFpjXOUN+sJ0+OMPKexbmGloky8GhFwrWmP
X3X85epEwNxR28eD9xmfvi7efpOsVcJzNfO7eM5RgYbQu6jd4Wq1spNnW6CQ
LdJFJN9eqpAZ66HS/A0KWTANSn/meytk43Ce2SYqZBNRW8tAPkxJ90BzRvZ/
rGxPPNTqHCilAm65YXXOgUMUVPJud476jcSGiSL7Px3uSFwK+P9DHsk3g1MK
2RLtUXyzk/OmuqwSrqqrzZ5f2DzncA/LSPCxbBzNDc0l7biRIF+YBsTp+o/s
dCPt2QI577kTYqt8sItntAbn/OmmvY1KeDfYyXs9fxSj395IO2FE8PlKzcDp
HufA3Z5abrc2tDp38vqNcU37eLjDcagmp5NnNAHXtH1X+u9sUNoeUpTdIwiX
dtgt60882eEcWIbIdfSrdg78mgLat7uiw3lF/800zjnhStLyiuo7TQ7fpXHW
gAIm9NxI45xFOnm3Oi/tRLDQdqJbsmH86f64IeBf9fU03yHMluXixnebO8Re
zqjIqXEOfI8G33Wq2jnqe9KTGJbOiua8y60fm4C3Zni1TXFSrvDrd446R/oT
1d/sbqr5GA5aCohdQujsgpeBNTlpvlEIHe/WXKVbShqnCZDY2HoD7CHfEQT6
YakiR2nqHPUYl5e0o/9udaK4zjnqAekpMUl+x0e/uttpvrsR9lfar6fV7sRL
TbfSfGPwUs3tNE4ilJZv7IDSZVSqqMtPW/+VDSJyZ5g8drjjVlr9Srx6K6wj
Zrg1P833GoILa72TVl/ctoH83ktWfanUbVHFaYVs32jFiJPztswZJcSWvDTT
b92t9KWGH0I7xIfrYk+2Khr7bSuVA528PtuRkH86B17AWbGsHdgMSIixe85j
BaGSFEbdS8bD0NaC0EXw+vrdntw5y6VpnLfYPpvPUjgKsnlINnz6WW+rQf2X
04Ruc8G6mxQVygVdvPEzwbhS6my7wDS71EyrqP7o1w4MMhcB56805SPO16p8
0o0032BUOtVxIy0jCC+15qb5diF+HK4BzvTgpfababU/rgTf1XRnmeJxC49u
yqKVWrA9ljfdaGy/taHGcWPdLnFrbILyOhjsddx0Px4Cv4WXBi4rZPd0R7Fx
VxfvwXiV58zboMzr4j23GsXVhjtptYE4ij35aabbsPsjGCVuT1za5Bxl9XSE
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
v1xFfvvQcCu4pFjcOUEAewarrB+MVMuLPQ1KSBJujLaUD86BZXjM9AZGNOEb
pfkQUV+jdd7HDeDt3+MlcbVzVAWho815+R1Dfk0gz19HLV9joNuj0aEBGLQP
z5Q/Qd5zCGfVnlOgIWinuCUP1oQniXy7USEL1Tcdx2q4VXH6G5sR23sveeNS
r7UE/P7NUELJowGbBtvU7Ore8SZdX6wL+1cmcx2y9xb6qN3buE7e+Vl4hiyW
825yMMKfy+2He8AZlY1yi9UFsAzIx532jTBw2hlRuPm1gkqoFlf5sJg+hIvd
DhLet6Mdxg3wz6Zqg8kbqumDpTlhdgowuwmo1A/GtgblLint+V28PrytfQ84
Skzl8By9YcFe7/n/Fb9u4PHrOWGOuWDAhCnHy3mT9wksi01mJv/suSf6uxk/
/+e7aMVvkQF79iTPLPH8Ofp48ibPn3cEJEcvcSqXbJsno03/e93V6CF5vFnu
c4lsG+3crV0nb34oOL/HzPElFozex+S3y4eudta7H7Rv/lXicXVPY6JFsfve
0hX0E9qyf041ikvPx5pdu/sL2eLO3eDTfUd6kmVbhF/frvlgouxvdH/ny/1V
Ynkz+i/3g3woMR501rmH2XAtfiRN7z35OlRx9W29+yV7f2Jg971tDynn3nIn
nCuM3SOXF9zfZWbdIz1HPjv/arCZ9WrSdm6KzF+25RPvLOvHt1fEpZmUi1KW
RZL5j2/TZC7bzk/oP1Kntw3N/lON/NRw9KNxHjO4xfGT+o+06kWcT96W/rKr
57Y8saGM/q22LOpOjbiNQeGeNU4n18iHzicO97FbDdNncB8q8vpPy7qP/HhT
XGqnhWi8e1587vUOM+vFSYDK+seAlBy7QD5758EOs1/769zfBQOF8h1/AfYR
BPa3FHsfywuuRJpda0DYm97cYeZ44Bvx+M1/YWPYN+6xj9Z1KX/sY5voAn4P
g2/3s3sQpg9DnfrZJeMzaS4yxv5t5xdaaJ85HvGXe/lCyQSGuQXn7PFhmWXK
lt/Dza7dl5wjW5yQ7zC79haNf+LmHrPcB4Q0u+tfdwzBG2sFzrcakKNg3sDS
pEiLd8qtFlEb/c/IlAqlIcswEF0ZHv4eGz9RueP0rfRfX8MYv+FDdDnXvB1+
HG6WW4ghhSjs2XPz/emr4rbdlsCrpMeRGy8o69z/nth/JJopQcze+yC2fnjP
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
dyb8l4GoyBqpToTf+D9s/OI3
                    "]]|>, "orcInstance" -> 112678160, "orcModuleId" -> 
                    87833840, "targetMachineId" -> 85352320|>, 
                    140112100566864, 140112100566720, 140112100566800, 
                    140112100560896, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_36c035ce_9a19_4c8d_a6ce_3f90a432d129", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
LPw7Xn6/1A==
                    "]]|>, "orcInstance" -> 112496560, "orcModuleId" -> 
                    85512288, "targetMachineId" -> 112434432|>, 
                    140112100553248, 140112100552848, 140112100552928, 
                    140112100552704, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {2, 4}, 
                    "$Batched" -> False, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "51942f56097b2f99", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>|>, 
                    "SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                    "SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                    "Error" -> <|"Type" -> "CrossEntropyLoss", 
                    "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 2, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT], 
                    "Target" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Outputs", "Loss"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Target" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.86785267138628*^9, 3.867890517081892*^9, 
  3.867892360169606*^9, 3.867892431703993*^9, 3.867892671650535*^9, 
  3.8678934753848133`*^9, 3.868011551189589*^9, 3.8680218420623913`*^9, 
  3.8680706759167852`*^9, 3.868072809759371*^9, 3.868072844239791*^9, 
  3.868073127363912*^9, 3.868074955589456*^9, 3.8680750040938377`*^9, 
  3.868075064876955*^9, 3.8680750989954367`*^9, 3.868075490920204*^9, 
  3.868075686984458*^9, 3.868077114431445*^9, 3.868077271897544*^9, 
  3.8680774122341547`*^9, 3.8680774552745*^9, 3.8680993895551453`*^9, 
  3.868171915082466*^9, 3.868172052323449*^9, 3.868172931635538*^9, 
  3.8683326688548813`*^9, 3.868334342539136*^9, 3.8683374286209297`*^9, 
  3.868343046329507*^9, 3.868343336611939*^9, 3.868361355523616*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"512b66dd-2edc-451f-97d0-3a8f771dbb7b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866180932479144*^9, 3.866180933335601*^9}, {
  3.866260506971014*^9, 3.8662605102109118`*^9}, {3.866262223194878*^9, 
  3.866262223474766*^9}, {3.8666027494425793`*^9, 3.866602750730301*^9}, {
  3.867466626541892*^9, 
  3.8674666272946873`*^9}},ExpressionUUID->"22d0189b-d6a7-44ad-b35a-\
70f7e8d0dd81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
    "softNet", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"testData", ",", 
          RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "4000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866262230733412*^9, 3.866262232700974*^9}, {
   3.866262747191399*^9, 3.866262755095587*^9}, {3.866263687522623*^9, 
   3.866263691522341*^9}, {3.866272907421722*^9, 3.866272908705574*^9}, {
   3.866274679974001*^9, 3.866274683777981*^9}, {3.866275126894273*^9, 
   3.866275130882132*^9}, {3.866275621030303*^9, 3.86627562449095*^9}, {
   3.866275800963348*^9, 3.866275804851942*^9}, {3.866278286918571*^9, 
   3.866278290408846*^9}, {3.866279939718389*^9, 3.8662799438283052`*^9}, {
   3.8662825835076027`*^9, 3.866282587086446*^9}, {3.8662848978232517`*^9, 
   3.8662849013340178`*^9}, {3.866301199025255*^9, 3.866301208705173*^9}, {
   3.866302091405136*^9, 3.866302093072084*^9}, {3.8663022330606956`*^9, 
   3.8663022743807373`*^9}, {3.866303190918262*^9, 3.8663031961042967`*^9}, {
   3.8663508996403513`*^9, 3.866350903983953*^9}, {3.8663558607588453`*^9, 
   3.866355860917651*^9}, {3.86637013313169*^9, 3.866370138430928*^9}, {
   3.866370237003203*^9, 3.866370239455555*^9}, {3.8663703291644793`*^9, 
   3.866370333111907*^9}, {3.866370363265703*^9, 3.866370363711856*^9}, {
   3.8663720431119947`*^9, 3.866372048852154*^9}, {3.866372163198892*^9, 
   3.8663721862104397`*^9}, 3.8663723957836103`*^9, {3.866372460806899*^9, 
   3.866372466981298*^9}, {3.8663728465397882`*^9, 3.866372846690668*^9}, {
   3.866439863015705*^9, 3.866439889076521*^9}, {3.866444399919945*^9, 
   3.866444403398275*^9}, 3.866445596437694*^9, 3.866445994629862*^9, {
   3.866446077093233*^9, 3.8664460772227592`*^9}, {3.866514058957122*^9, 
   3.866514061965129*^9}, {3.866514093672724*^9, 3.8665140946276417`*^9}, 
   3.866514530731886*^9, {3.866514784096607*^9, 3.866514784235477*^9}, {
   3.8665148543229303`*^9, 3.86651485485518*^9}, {3.866517197949828*^9, 
   3.866517203967832*^9}, 3.866517357579501*^9, 3.8665174374755917`*^9, 
   3.8665175119230967`*^9, {3.866517590284361*^9, 3.866517620168564*^9}, 
   3.8665176619240017`*^9, {3.8665179325026484`*^9, 3.8665179399815683`*^9}, {
   3.866518111910069*^9, 3.866518112233807*^9}, {3.866518521945266*^9, 
   3.866518522115803*^9}, {3.866518571201038*^9, 3.866518588328702*^9}, {
   3.866518646862028*^9, 3.866518650143523*^9}, 3.866518704027602*^9, {
   3.866519202548511*^9, 3.8665192068871107`*^9}, {3.866552934111923*^9, 
   3.866552991359269*^9}, {3.866553502473754*^9, 3.8665535030716467`*^9}, {
   3.866554417382031*^9, 3.866554420050095*^9}, {3.866554652086327*^9, 
   3.8665546522545357`*^9}, {3.86686620714637*^9, 3.866866208536282*^9}, {
   3.867131586949819*^9, 3.867131591208543*^9}, 3.867131663043725*^9, {
   3.867131881962668*^9, 3.8671318821029243`*^9}, {3.8671435395321627`*^9, 
   3.867143571356976*^9}, {3.867225758112248*^9, 3.867225764016302*^9}, {
   3.867225848543758*^9, 3.8672258697127447`*^9}, {3.8672259658939657`*^9, 
   3.8672259915292263`*^9}, {3.867226086215555*^9, 3.867226089976021*^9}, {
   3.8672261350253763`*^9, 3.867226203033741*^9}, {3.86722632250366*^9, 
   3.867226427456987*^9}, 3.867235234814995*^9, {3.86724310526048*^9, 
   3.867243107700055*^9}, 3.867292442863179*^9, {3.867379673640683*^9, 
   3.867379676973427*^9}, {3.867380356810781*^9, 3.867380356962483*^9}, {
   3.867399722631425*^9, 3.8673997262314672`*^9}, {3.867400074607986*^9, 
   3.867400084799662*^9}, {3.867400479559969*^9, 3.867400481738756*^9}, {
   3.867421063533587*^9, 3.867421064997341*^9}, {3.86759144532999*^9, 
   3.867591460699141*^9}, {3.867591774794105*^9, 3.8675917749695683`*^9}, {
   3.867593041039818*^9, 3.867593056406097*^9}, {3.867593515276932*^9, 
   3.86759352350137*^9}, {3.867593591941313*^9, 3.8675936595732317`*^9}, {
   3.867593831714517*^9, 3.867593831997171*^9}, {3.867595065092896*^9, 
   3.867595065243403*^9}, {3.867835916244355*^9, 3.867835918646139*^9}, 
   3.8678360557124443`*^9, 3.8678367200528717`*^9, {3.867837646912689*^9, 
   3.867837647063219*^9}, {3.867837717652178*^9, 3.8678377654535313`*^9}, {
   3.867837872184032*^9, 3.867837872308552*^9}, {3.8678379432341213`*^9, 
   3.867837967053742*^9}, {3.867838016209628*^9, 3.867838016385528*^9}, {
   3.867850413687476*^9, 3.867850413839301*^9}, {3.867852822453457*^9, 
   3.867852822881569*^9}, {3.868024162601286*^9, 3.868024163649033*^9}, {
   3.8680242837912416`*^9, 3.868024285053027*^9}, {3.86802453267244*^9, 
   3.868024533653101*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"fbdac8c7-4549-4743-864d-e467d909f319"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedSoftNet", "=", 
  RowBox[{"NetExtract", "[", 
   RowBox[{
    RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
    "\"\<NeuralLogicNet\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866262883598037*^9, 3.866262913813736*^9}, {
  3.866865528144919*^9, 3.866865528678174*^9}, {3.8675914730807447`*^9, 
  3.8675914876778097`*^9}, {3.867594997374662*^9, 3.8675949984056892`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"c3a89cf2-7844-4806-bca2-4513232e25d6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{16384}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{16384}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{16384}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {16384}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16384}, NeuralNetworks`AtomT]|>|>,
                     "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {16384}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{16384}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{16384}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{256, 64}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{16384}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Weights" -> 
                    NeuralNetworks`TensorT[{256, 64}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Sort" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Map[Sort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Sort, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> 256, "$InputShape" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256, 64}, NeuralNetworks`RealT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 64}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Medians" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 33}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.25, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"BinaryMask"}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "BinaryMask" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Mask" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["BinaryMask"] Slot["Input"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Times], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"BinaryMask" -> 
                    NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>|>|>,
                     "Inputs" -> <|
                    "BinaryMask" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Inputs", "BinaryMask"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout", "Outputs", "BinaryMask"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Outputs", "Output"]}|>, 
                    "3" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 64}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                    NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "6", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ReshapeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8662628854701767`*^9, 3.86626291478244*^9}, 
   3.866263333811677*^9, 3.866263626951891*^9, 3.866275759059902*^9, 
   3.866278860640707*^9, 3.866279610307885*^9, 3.866283089053381*^9, 
   3.8662840988640747`*^9, 3.866301846366849*^9, 3.8663540211677637`*^9, 
   3.8663541757248697`*^9, 3.866354285702705*^9, 3.866354708948234*^9, 
   3.86635480352043*^9, 3.866354946410275*^9, 3.866355129778678*^9, 
   3.866355344404036*^9, 3.8663554109601917`*^9, 3.866355601157222*^9, 
   3.86635584447652*^9, 3.866357046548826*^9, 3.86635827058148*^9, 
   3.8663603567232637`*^9, 3.8663629451402597`*^9, 3.866363945271487*^9, 
   3.866365130852272*^9, 3.866366035676786*^9, 3.866368355050816*^9, 
   3.8663699230437717`*^9, 3.866371572266882*^9, 3.866438770864565*^9, 
   3.86643896077918*^9, 3.8664391415025454`*^9, 3.866439242730338*^9, 
   3.86643934064322*^9, 3.866439448330102*^9, 3.866440229932144*^9, 
   3.8664404742813272`*^9, 3.8664405592015047`*^9, 3.8664414085277576`*^9, 
   3.8664414792281923`*^9, 3.866441619893333*^9, 3.866441689406056*^9, 
   3.8664417857252293`*^9, 3.866441899861754*^9, 3.866442041711031*^9, 
   3.8664421438082438`*^9, 3.86644220577691*^9, 3.866442923332512*^9, 
   3.866443105210555*^9, 3.866443215017268*^9, 3.866443324261043*^9, 
   3.866443392091382*^9, 3.866443463860209*^9, 3.866443916112817*^9, 
   3.866443978954742*^9, 3.8664440999870872`*^9, 3.866444384668812*^9, 
   3.8664455526363*^9, 3.8664459767216597`*^9, 3.8664460963830557`*^9, 
   3.866446198128482*^9, 3.866446371505559*^9, 3.8664466173131857`*^9, 
   3.866446726857621*^9, 3.866446949046866*^9, 3.866447055125682*^9, 
   3.8665132494825897`*^9, 3.866513528458088*^9, 3.866513862467455*^9, 
   3.866514588270062*^9, 3.8665196537633457`*^9, 3.866521033301351*^9, 
   3.866524695734989*^9, 3.8665277373817797`*^9, 3.866528003896955*^9, 
   3.866529999675105*^9, 3.866532541000852*^9, 3.8665328100689297`*^9, 
   3.866542863935906*^9, 3.86654363350113*^9, 3.866545845362557*^9, 
   3.866546635196596*^9, 3.866547880940085*^9, 3.866549439453635*^9, 
   3.8665500175016737`*^9, 3.8665510002342978`*^9, 3.866553594781185*^9, 
   3.8665537613351927`*^9, 3.866554194193324*^9, 3.8665543759376163`*^9, 
   3.8665557900087967`*^9, 3.866600803446225*^9, 3.86660110824417*^9, 
   3.8666014083894787`*^9, 3.8666032722125683`*^9, 3.866603646506237*^9, 
   3.866603924967039*^9, 3.866614149217051*^9, 3.866614517604972*^9, 
   3.8666150772760963`*^9, 3.866615910520022*^9, 3.866617005433221*^9, 
   3.866620518171906*^9, 3.86662136387157*^9, 3.866621931729815*^9, 
   3.86662265578474*^9, 3.866623643819304*^9, 3.866623929846479*^9, 
   3.8666243138661947`*^9, 3.866625027852901*^9, 3.866625329973116*^9, 
   3.8666263955294523`*^9, 3.866626636440639*^9, 3.8666301937443323`*^9, 
   3.866635284071369*^9, 3.8666379464893007`*^9, 3.866865267141653*^9, 
   3.8668659776585407`*^9, 3.8668665360607643`*^9, 3.8668674552454987`*^9, 
   3.866874124396035*^9, 3.86687497460295*^9, 3.8668969132601852`*^9, 
   3.866898071418168*^9, 3.866898609243305*^9, 3.866899135802105*^9, 
   3.866900146525358*^9, 3.866900346483822*^9, 3.86690075029182*^9, 
   3.866942200550881*^9, 3.8669434691033688`*^9, 3.8669440568455133`*^9, 
   3.866944409151135*^9, 3.866946623331648*^9, 3.866950472530398*^9, 
   3.8669509935934668`*^9, 3.866951548335429*^9, 3.866952511511688*^9, 
   3.866953356553648*^9, 3.8669542721524076`*^9, 3.866955408462162*^9, 
   3.866955759821617*^9, 3.866956215314837*^9, 3.866956489039291*^9, 
   3.866957050192541*^9, 3.8669574385039263`*^9, 3.8669581345274153`*^9, 
   3.866958404615336*^9, 3.866958748148402*^9, 3.8669592708283167`*^9, 
   3.866960524376287*^9, 3.866960648062818*^9, 3.866964482955254*^9, 
   3.866965870107953*^9, 3.8669665698327627`*^9, 3.866966912796961*^9, 
   3.866967234979121*^9, 3.8669675446415567`*^9, 3.8669681544987707`*^9, 
   3.8669687474689293`*^9, 3.866969471312014*^9, 3.866975997689666*^9, 
   3.86697784559586*^9, 3.866988474220516*^9, 3.867070541267486*^9, 
   3.867071141063098*^9, 3.867071512821946*^9, 3.867072495499333*^9, 
   3.867072807623479*^9, 3.867073708828951*^9, 3.867074044368046*^9, 
   3.8670743576774607`*^9, 3.867074511128997*^9, 3.867074885972481*^9, 
   3.867075384159924*^9, 3.867075666872263*^9, 3.8670759595572643`*^9, 
   3.867130703473978*^9, 3.8671325789590693`*^9, 3.867142055908609*^9, 
   3.867142222402884*^9, 3.86714258728478*^9, 3.8671430669219217`*^9, 
   3.8671432468665457`*^9, 3.867144668168933*^9, 3.867145744115079*^9, 
   3.86714627085634*^9, 3.8671501033240128`*^9, 3.86715087699004*^9, 
   3.867152069829074*^9, 3.867152733883814*^9, 3.86715325574749*^9, 
   3.867159760259474*^9, 3.867161045989644*^9, 3.867161593031602*^9, 
   3.867162093302425*^9, 3.867162545278716*^9, 3.867162929672419*^9, 
   3.8671631215691357`*^9, 3.8671635752851887`*^9, 3.867163736166375*^9, 
   3.867164020783208*^9, 3.8671642536302013`*^9, 3.867164730673498*^9, 
   3.86720897018189*^9, 3.867209543944471*^9, 3.867210754863386*^9, 
   3.867213186296348*^9, 3.867213987741856*^9, 3.867214842121695*^9, 
   3.867215183394917*^9, 3.867216239673912*^9, 3.867216550433502*^9, 
   3.86721673027888*^9, 3.867217090260976*^9, 3.867217943020084*^9, 
   3.867219362485512*^9, 3.86721988612037*^9, 3.867220752092207*^9, 
   3.867224123145873*^9, 3.8672245028341417`*^9, 3.867224893030838*^9, 
   3.867225253221676*^9, 3.867226899220113*^9, 3.867227193709606*^9, 
   3.867227850496901*^9, 3.8672282892724247`*^9, 3.867235574360211*^9, 
   3.867235802347309*^9, 3.86723620735044*^9, 3.867236645705991*^9, 
   3.867237664538694*^9, 3.8672382521528063`*^9, 3.867238903085815*^9, 
   3.867239250507195*^9, 3.8672396236514893`*^9, 3.867239883283255*^9, 
   3.8672402566845303`*^9, 3.8672416694881287`*^9, 3.867241919213375*^9, 
   3.8672433504474154`*^9, 3.867243745229207*^9, 3.867244112883206*^9, 
   3.8672444029692574`*^9, 3.867244627217216*^9, 3.867292663020062*^9, 
   3.867293070341237*^9, 3.867293578277958*^9, 3.867293942874217*^9, 
   3.867294254384894*^9, 3.867294581837659*^9, 3.8672951611778097`*^9, 
   3.867295683005228*^9, 3.867304246515335*^9, 3.867304762852366*^9, 
   3.867305406975029*^9, 3.867305771133658*^9, 3.8673062724983683`*^9, 
   3.867306606408617*^9, 3.867307169408957*^9, 3.867307380094698*^9, 
   3.8673104061289043`*^9, 3.867311088972395*^9, 3.867311638861496*^9, 
   3.8673118554485693`*^9, 3.867312160097467*^9, 3.8673135117500153`*^9, 
   3.867314146997654*^9, 3.867314434514402*^9, 3.8673181359732227`*^9, 
   3.867318455978945*^9, 3.867318746946628*^9, 3.867319245380412*^9, 
   3.867319558308886*^9, 3.867321199984851*^9, 3.867321463552224*^9, 
   3.8673233735844727`*^9, 3.867323787084449*^9, 3.8673241725604258`*^9, 
   3.867329659517404*^9, 3.867329976854364*^9, 3.8673307791571836`*^9, 
   3.8673310481814213`*^9, 3.8673312110003557`*^9, 3.867331396102231*^9, 
   3.867331840615056*^9, 3.8673327651571198`*^9, 3.867333807483214*^9, 
   3.867334267485148*^9, 3.867379551509262*^9, 3.867379706118277*^9, 
   3.867380208989422*^9, 3.867380441625167*^9, 3.8673807366328*^9, 
   3.867381302682927*^9, 3.867381745571897*^9, 3.86738205042131*^9, 
   3.867382491688291*^9, 3.8673830913584557`*^9, 3.8673834757586*^9, 
   3.8673843358910027`*^9, 3.8673847159639587`*^9, 3.867385052790865*^9, 
   3.8673861417047033`*^9, 3.8673864721323223`*^9, 3.867387027954995*^9, 
   3.867387452676517*^9, 3.867387822766666*^9, 3.8673880857180634`*^9, 
   3.867388433783766*^9, 3.8673999983117247`*^9, 3.867400309497061*^9, 
   3.867400765912784*^9, 3.8674042712454023`*^9, 3.867405171660681*^9, 
   3.8674055927740173`*^9, 3.86740679373538*^9, 3.867407616891014*^9, 
   3.867408261660056*^9, 3.867409571049901*^9, 3.867410389073472*^9, 
   3.8674107990115547`*^9, 3.867411931104046*^9, 3.867418477304476*^9, 
   3.8674190261068087`*^9, 3.8674195901094227`*^9, 3.8674207603084717`*^9, 
   3.86742184116043*^9, 3.867464383052712*^9, 3.867465332275449*^9, 
   3.8674692876969976`*^9, 3.867470425821095*^9, 3.867471394303174*^9, 
   3.8674800170308723`*^9, 3.8674821001653957`*^9, 3.867483077270279*^9, 
   3.86748399390837*^9, 3.86748571092913*^9, 3.867485930024376*^9, 
   3.867486406530424*^9, 3.86756560623253*^9, 3.867565882218875*^9, 
   3.867566129295733*^9, 3.867566486408596*^9, 3.867568883178177*^9, 
   3.867569364404112*^9, 3.867576249193199*^9, 3.867577034087057*^9, 
   3.86758006294209*^9, 3.867580361914866*^9, 3.8675813554675922`*^9, 
   3.867591413262083*^9, 3.8675916969228163`*^9, 3.8675921416186953`*^9, 
   3.867592476569607*^9, 3.867593307680511*^9, 3.867594998911373*^9, 
   3.8676382636106043`*^9, 3.8676506346064453`*^9, 3.8676528842179947`*^9, 
   3.867654807175769*^9, 3.867656382543395*^9, 3.8676598275474453`*^9, 
   3.867660583738608*^9, 3.867820776062737*^9, 3.8678213353311234`*^9, 
   3.867823748394882*^9, 3.867831234747699*^9, 3.8678374859678907`*^9, 
   3.8678469174561987`*^9, 3.8678523440620747`*^9, 3.8678968029434433`*^9, 
   3.868017387774095*^9, 3.8680185491695557`*^9, 3.868019210953308*^9, 
   3.8680200516834803`*^9, 3.868020935116467*^9, 3.868023637788042*^9, 
   3.868074855503366*^9, 3.8680762472602863`*^9, 3.868076989600198*^9, 
   3.868103880035769*^9, 3.8681057893297853`*^9, 3.86810820838379*^9, 
   3.868334521860477*^9, 3.868335315227812*^9, 3.868337618975168*^9, 
   3.8683413633803673`*^9, 3.868343166161261*^9, 3.8683435827862053`*^9, 
   3.868344693794695*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"eeedc82b-d0c7-4e1c-b0f0-a8cb4877b94a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.865509544459216*^9, 3.865509545362651*^9}, {3.8668654702612267`*^9, 
  3.866865471244494*^9}},ExpressionUUID->"e2a69d6c-fddf-4ce0-9a60-\
6b136e91fb12"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{
    RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
    RowBox[{"ConvertDataToClasses", "[", "testData", "]"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8675912624933243`*^9, 3.8675912645650873`*^9}, {
  3.867591419757333*^9, 3.86759142034127*^9}, {3.867591718010557*^9, 
  3.867591738878278*^9}, {3.8675933493486156`*^9, 3.867593351860548*^9}, {
  3.867595003334629*^9, 3.867595005556345*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"61cf3e56-b150-406f-a005-b09cf3a4f4b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"softPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainedSoftNet", "[", 
         RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardenedPredictionTargetPairs", "=", 
   RowBox[{"Harden", "[", "softPredictionTargetPairs", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8632403336213713`*^9, 3.863240377260723*^9}, 
   3.864794328166184*^9, {3.864794407903618*^9, 3.864794436294898*^9}, {
   3.8650544818297043`*^9, 3.865054482561998*^9}, {3.8650591999549913`*^9, 
   3.865059216538383*^9}, {3.865060098170718*^9, 3.865060117548669*^9}, {
   3.865083374025154*^9, 3.865083380805747*^9}, {3.8650835363762093`*^9, 
   3.865083538071233*^9}, {3.865590907688581*^9, 3.865590907991177*^9}, {
   3.865610944975788*^9, 3.865610947181724*^9}, {3.865655407744947*^9, 
   3.865655408023315*^9}, {3.86626050147324*^9, 3.8662605016737347`*^9}, {
   3.86626089567375*^9, 3.86626089681426*^9}, 3.866260938745146*^9, {
   3.866262482360608*^9, 3.866262529517881*^9}, {3.866262922944813*^9, 
   3.866262923422676*^9}, {3.866368441574706*^9, 3.8663684417477407`*^9}, {
   3.8665196844820623`*^9, 3.8665196894081583`*^9}, {3.86651977579454*^9, 
   3.8665198307447023`*^9}, {3.866543759104864*^9, 3.866543761043337*^9}, {
   3.866543933814775*^9, 3.866543946874074*^9}, {3.866544213286334*^9, 
   3.8665442159066887`*^9}, {3.866544345821237*^9, 3.866544359573098*^9}, {
   3.866544406102911*^9, 3.866544410862302*^9}, {3.8665444631671553`*^9, 
   3.866544554177885*^9}, {3.8665453759492197`*^9, 3.866545380545129*^9}, {
   3.866637950431554*^9, 3.866637951085165*^9}, {3.866865285097145*^9, 
   3.866865285469962*^9}, {3.8668653748813343`*^9, 3.8668653802748404`*^9}, {
   3.866865532978038*^9, 3.866865534495945*^9}, {3.866866544565024*^9, 
   3.866866545127615*^9}, 3.867162578537319*^9, {3.867219455610979*^9, 
   3.867219455860599*^9}, {3.8675912676571007`*^9, 3.86759126780343*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"a637f3cb-d7f7-4492-ad2f-108fbd4b3b99"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 88.7088%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "5049"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "4417"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}], "\[Rule]", "4083"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "4018"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", "376"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", "353"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", "303"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "265"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "\[Rule]", "182"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", "178"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "1"}], "}"}], "\[Rule]", "166"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "143"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", "136"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", "90"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "27"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "17"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->CompressedData["
1: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
peJLUOF8qr4V+R9+ccJH
  "],
 CellLabel->"Out[50]=",ExpressionUUID->"c5457a0a-43d6-4ce7-ba40-2868d0fbf6a1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"RandomSample", "[", 
       RowBox[{"hardenedPredictionTargetPairs", ",", "5"}], "]"}], ",", "1"}],
      "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"True", "->", 
     RowBox[{"Style", "[", 
      RowBox[{"True", ",", "Red"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.867383550245969*^9, 3.867383551294194*^9}, 
   3.867896997431472*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"fd20a90c-0e3a-42a1-ac7f-bc712b1b2778"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"First", "/@", "softPredictionTargetPairs"}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867214498029375*^9, 3.867214530414569*^9}, {
  3.867382601200721*^9, 3.867382603134129*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"0bd26ae7-e31b-4a68-b76a-1002446f1f03"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5599999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5599999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {0.05, 1.337767*^6}, "RoundingRadius" -> 0]},
          
          
          ImageSizeCache->{{46.45824315702562, 
           62.27865573708967}, {-70.441708391382, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1337767]& ,
        TagBoxNote->"1337767"],
       StyleBox["1337767", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1337767, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.05, 0}, {0.1, 135072.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{61.77865573708967, 77.59906831715372}, {
           70.54149055041668, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 135072]& ,
        TagBoxNote->"135072"],
       StyleBox["135072", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[135072, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.1, 0}, {0.15, 83119.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{77.09906831715372, 92.91948089721777}, {
           76.63156337405299, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 83119]& ,
        TagBoxNote->"83119"],
       StyleBox["83119", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[83119, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.15, 0}, {0.2, 53108.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{92.41948089721777, 108.23989347728184`}, {
           80.149534915834, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 53108]& ,
        TagBoxNote->"53108"],
       StyleBox["53108", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[53108, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.2, 0}, {0.25, 30529.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{107.73989347728184`, 123.56030605734588`}, {
           82.79630708076931, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 30529]& ,
        TagBoxNote->"30529"],
       StyleBox["30529", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[30529, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.25, 0}, {0.3, 21965.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{123.06030605734588`, 138.88071863740993`}, {
           83.80020259520776, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 21965]& ,
        TagBoxNote->"21965"],
       StyleBox["21965", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21965, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.3, 0}, {0.35, 38147.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{138.38071863740993`, 154.20113121747397`}, {
           81.90330427495519, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 38147]& ,
        TagBoxNote->"38147"],
       StyleBox["38147", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[38147, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.35, 0}, {0.4, 60761.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{153.70113121747397`, 169.52154379753804`}, {
           79.25242931424624, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 60761]& ,
        TagBoxNote->"60761"],
       StyleBox["60761", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[60761, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.4, 0}, {0.45, 50788.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{169.02154379753804`, 184.84195637760212`}, {
           80.42149166425732, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 50788]& ,
        TagBoxNote->"50788"],
       StyleBox["50788", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[50788, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.45, 0}, {0.5, 1.564994*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{184.34195637760212`, 
           200.16236895766616`}, {-97.0778791129266, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1564994]& ,
        TagBoxNote->"1564994"],
       StyleBox["1564994", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1564994, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {0.55, 1.140919*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{199.66236895766616`, 
           215.4827815377302}, {-47.36664717860968, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1140919]& ,
        TagBoxNote->"1140919"],
       StyleBox["1140919", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1140919, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.55, 0}, {0.6, 27628.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{214.9827815377302, 230.80319411779425`}, {
           83.13637023903483, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 27628]& ,
        TagBoxNote->"27628"],
       StyleBox["27628", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27628, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.6, 0}, {0.65, 25081.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{230.30319411779425`, 246.1236066978583}, {
           83.43493654861854, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 25081]& ,
        TagBoxNote->"25081"],
       StyleBox["25081", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[25081, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.65, 0}, {0.7, 12075.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{245.6236066978583, 261.44401927792234`}, {
           84.95953545809851, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12075]& ,
        TagBoxNote->"12075"],
       StyleBox["12075", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12075, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.7, 0}, {0.75, 17587.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{260.94401927792234`, 276.7644318579864}, {
           84.31340373512037, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 17587]& ,
        TagBoxNote->"17587"],
       StyleBox["17587", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[17587, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.75, 0}, {0.8, 14670.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{276.2644318579864, 292.0848444380505}, {
           84.65534245716813, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 14670]& ,
        TagBoxNote->"14670"],
       StyleBox["14670", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[14670, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.8, 0}, {0.85, 12511.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{291.5848444380505, 307.40525701811447`}, {
           84.90842634503277, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12511]& ,
        TagBoxNote->"12511"],
       StyleBox["12511", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12511, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.85, 0}, {0.9, 36328.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{306.90525701811447`, 322.72566959817857`}, {
           82.11653243244743, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 36328]& ,
        TagBoxNote->"36328"],
       StyleBox["36328", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[36328, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.9, 0}, {0.95, 43140.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{322.22566959817857`, 338.0460821782426}, {
           81.31801115216312, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 43140]& ,
        TagBoxNote->"43140"],
       StyleBox["43140", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[43140, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.95, 0}, {1., 363379.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{337.5460821782426, 353.36649475830666`}, {
           43.77871927357157, 86.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 363379]& ,
        TagBoxNote->"363379"],
       StyleBox["363379", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[363379, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.02, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8672145012856503`*^9, 3.86721453103242*^9}, 
   3.867214886673502*^9, 3.8672152540007877`*^9, 3.867216351594112*^9, 
   3.8672165884984837`*^9, 3.867216774551539*^9, 3.867217133104129*^9, 
   3.867217991284543*^9, 3.867219410741493*^9, 3.867219941199617*^9, 
   3.867220804408003*^9, 3.867224167423118*^9, 3.867224953652439*^9, 
   3.867225310024466*^9, 3.8672269464513607`*^9, 3.8672279101112137`*^9, 
   3.867235616907338*^9, 3.86723626603331*^9, 3.867236701548422*^9, 
   3.867237717473666*^9, 3.867238308657311*^9, 3.867239307370199*^9, 
   3.867239677388426*^9, 3.8672399522345467`*^9, 3.8672403054119577`*^9, 
   3.867241727039076*^9, 3.86724339296774*^9, 3.867243812575938*^9, 
   3.867244167981337*^9, 3.867244457449991*^9, 3.86729274240382*^9, 
   3.867293628350546*^9, 3.867293994011964*^9, 3.867294651545733*^9, 
   3.867295760022895*^9, 3.867304327902404*^9, 3.867305469868129*^9, 
   3.8673063345418577`*^9, 3.867307248568591*^9, 3.8673119534948187`*^9, 
   3.8673135773524446`*^9, 3.867318191097289*^9, 3.867323471170349*^9, 
   3.867329702532007*^9, 3.8673300425460663`*^9, {3.8673825758518867`*^9, 
   3.867382603921441*^9}, 3.867383554208437*^9, 3.867386533410076*^9, 
   3.867408323390875*^9, 3.867419651396039*^9, 3.867469394209402*^9, 
   3.86757711535248*^9, 3.867580419259817*^9, 3.86789700993076*^9, 
   3.868019254985968*^9, 3.8683346199087152`*^9, 3.868335362841898*^9, 
   3.868337675192824*^9, 3.8683413960580883`*^9, 3.8683432009415483`*^9, 
   3.868343618951576*^9, 3.86834473214053*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"9006c2b6-39da-423a-bd76-90c851f9fa93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"ExtractWeights", "[", "trainedSoftNet", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866953397932728*^9, 3.866953404315634*^9}, {
  3.866953505684793*^9, 3.866953515956293*^9}, {3.867305490607383*^9, 
  3.867305500732195*^9}, {3.867382609248455*^9, 3.867382611150051*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"4836d32b-7df4-4c05-858e-1e553b9f2099"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5459999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5459999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.05, 0}, {0., 6851.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{30.863384457566056`, 
           45.985422997488904`}, {-101.22428935292332`, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6851]& ,
        TagBoxNote->"6851"],
       StyleBox["6851", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6851, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {0.05, 77.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{45.485422997488904`, 60.60746153741175}, {
           89.21033129759525, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 77]& ,
        TagBoxNote->"77"],
       StyleBox["77", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[77, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.05, 0}, {0.1, 128.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{60.10746153741175, 75.2295000773346}, {
           87.77658968950897, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 128]& ,
        TagBoxNote->"128"],
       StyleBox["128", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[128, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.1, 0}, {0.15, 110.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{74.7295000773346, 89.85153861725745}, {
           88.28261613942176, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 110]& ,
        TagBoxNote->"110"],
       StyleBox["110", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[110, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.15, 0}, {0.2, 139.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{89.35153861725745, 104.4735771571803}, {
           87.46735130345114, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 139]& ,
        TagBoxNote->"139"],
       StyleBox["139", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[139, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.2, 0}, {0.25, 80.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{103.9735771571803, 119.09561569710314`}, {
           89.12599355594311, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 80]& ,
        TagBoxNote->"80"],
       StyleBox["80", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[80, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.25, 0}, {0.3, 92.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{118.59561569710314`, 133.71765423702598`}, {
           88.78864258933457, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 92]& ,
        TagBoxNote->"92"],
       StyleBox["92", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[92, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.3, 0}, {0.35, 83.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{133.21765423702598`, 148.33969277694885`}, {
           89.04165581429098, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 83]& ,
        TagBoxNote->"83"],
       StyleBox["83", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[83, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.35, 0}, {0.4, 84.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{147.83969277694885`, 162.9617313168717}, {
           89.01354323374026, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 84]& ,
        TagBoxNote->"84"],
       StyleBox["84", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[84, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.4, 0}, {0.45, 203.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{162.4617313168717, 177.58376985679456`}, {
           85.66814614820561, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 203]& ,
        TagBoxNote->"203"],
       StyleBox["203", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[203, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.45, 0}, {0.5, 881.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{177.08376985679456`, 192.2058083967174}, {
           66.60781653482333, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 881]& ,
        TagBoxNote->"881"],
       StyleBox["881", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[881, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {0.55, 897.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{191.7058083967174, 206.82784693664027`}, {
           66.15801524601196, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 897]& ,
        TagBoxNote->"897"],
       StyleBox["897", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[897, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.55, 0}, {0.6, 347.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{206.32784693664027`, 221.44988547656308`}, {
           81.61993454890319, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 347]& ,
        TagBoxNote->"347"],
       StyleBox["347", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[347, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.6, 0}, {0.65, 141.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{220.94988547656308`, 236.07192401648595`}, {
           87.41112614234972, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 141]& ,
        TagBoxNote->"141"],
       StyleBox["141", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[141, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.65, 0}, {0.7, 41.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{235.57192401648595`, 250.6939625564088}, {
           90.22238419742085, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 41]& ,
        TagBoxNote->"41"],
       StyleBox["41", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[41, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.7, 0}, {0.75, 91.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{250.1939625564088, 265.31600109633166`}, {
           88.81675516988528, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 91]& ,
        TagBoxNote->"91"],
       StyleBox["91", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[91, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.75, 0}, {0.8, 144.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{264.81600109633166`, 279.9380396362545}, {
           87.32678840069758, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 144]& ,
        TagBoxNote->"144"],
       StyleBox["144", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[144, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.8, 0}, {0.85, 127.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{279.4380396362545, 294.56007817617734`}, {
           87.80470227005968, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 127]& ,
        TagBoxNote->"127"],
       StyleBox["127", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[127, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.85, 0}, {0.9, 100.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{294.06007817617734`, 309.1821167161002}, {
           88.56374194492888, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 100]& ,
        TagBoxNote->"100"],
       StyleBox["100", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[100, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.9, 0}, {0.95, 181.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{308.6821167161002, 323.804155256023}, {
           86.28662292032126, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 181]& ,
        TagBoxNote->"181"],
       StyleBox["181", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[181, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.95, 0}, {1., 114.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{323.304155256023, 338.4261937959459}, {
           88.17016581721892, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 114]& ,
        TagBoxNote->"114"],
       StyleBox["114", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[114, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {1.05, 5473.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{337.9261937959459, 
           353.04823233586876`}, {-62.485153354043106`, 91.87500000000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5473]& ,
        TagBoxNote->"5473"],
       StyleBox["5473", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5473, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.07200000000000001, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-0.05, 1.05}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.866953405398438*^9, {3.8669535086600723`*^9, 3.8669535168089046`*^9}, 
   3.866954313826535*^9, 3.866955457083973*^9, 3.8669557990421457`*^9, 
   3.866956255330904*^9, 3.8669565304074993`*^9, 3.8669570894272423`*^9, 
   3.8669574773997*^9, 3.866958175242688*^9, 3.866958443749235*^9, 
   3.866959311543325*^9, 3.8669645251454897`*^9, 3.8669666181421423`*^9, 
   3.866967585518009*^9, 3.866968194173625*^9, 3.8669687903644257`*^9, 
   3.8669695121091843`*^9, 3.8669778912310266`*^9, 3.8669885587554703`*^9, 
   3.867071193495838*^9, 3.867072542819018*^9, 3.8670737514774847`*^9, 
   3.867074113470283*^9, 3.8670749610975227`*^9, 3.867143628016296*^9, 
   3.867145791625614*^9, 3.867152781387341*^9, 3.8671625871255836`*^9, 
   3.8671637686717653`*^9, 3.867164072222712*^9, 3.8672056243581*^9, 
   3.867209073037076*^9, 3.867209586902226*^9, 3.867214140415625*^9, 
   3.867214888956481*^9, 3.867215256093277*^9, 3.8672163552337627`*^9, 
   3.867216591914497*^9, 3.867216777130972*^9, 3.867217137334942*^9, 
   3.867217996261094*^9, 3.867219420254675*^9, 3.867219946982617*^9, 
   3.8672208086987123`*^9, 3.867224171790861*^9, 3.8672249784404716`*^9, 
   3.867225313424816*^9, 3.8672269503439093`*^9, 3.86722791201066*^9, 
   3.867235619647745*^9, 3.86723626903706*^9, 3.8672367036959677`*^9, 
   3.867237721080928*^9, 3.867238314503063*^9, 3.8672393107718887`*^9, 
   3.8672396811779137`*^9, 3.867239956582532*^9, 3.867240311914506*^9, 
   3.867241732923114*^9, 3.867244174200135*^9, 3.867244467379243*^9, 
   3.867292748791696*^9, 3.86729364497375*^9, 3.8672939960119658`*^9, 
   3.867294655644163*^9, 3.8672957645747232`*^9, 3.867304330659622*^9, {
   3.8673054790161047`*^9, 3.86730550247573*^9}, 3.86730634147044*^9, 
   3.867307252855768*^9, 3.867311956834914*^9, 3.86731358127571*^9, 
   3.867318195891453*^9, 3.867323472972732*^9, 3.867329704811387*^9, 
   3.867330044539565*^9, 3.867382579023087*^9, 3.867382611694048*^9, 
   3.867383555462047*^9, 3.867386535028846*^9, 3.8674083251931877`*^9, 
   3.867419653691588*^9, 3.867469398241379*^9, 3.8675771496278753`*^9, 
   3.867580423407976*^9, 3.867897017548945*^9, 3.868019259711413*^9, 
   3.868335654011243*^9, 3.868337676646687*^9, 3.868341397690797*^9, 
   3.868343208924286*^9, 3.868343620566523*^9, 3.868344733720083*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"a999c015-da09-4c19-9e15-306f1611cd56"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Subsection",
 CellChangeTimes->{{3.8650593677216454`*^9, 3.865059378776081*^9}, {
  3.866602769035088*^9, 3.866602771891135*^9}, {3.866865474676983*^9, 
  3.866865476493029*^9}},ExpressionUUID->"76d42d52-0573-4522-b5b7-\
498e3dde144e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedSoftNet"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.868345737262371*^9, {3.8683457725392942`*^9, 3.868345778146843*^9}, 
   3.8683608188358097`*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"fe80e3bc-7068-4221-b26f-10b1a0432998"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hardPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hnf", "[", 
         RowBox[{"Harden", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.86680194442417*^9, 3.866801959585536*^9}, 
   3.8668020564125566`*^9, 3.8668021880135727`*^9, 3.86680224094079*^9, {
   3.866862414056994*^9, 3.866862435758893*^9}, 3.8668631732132587`*^9, 
   3.866863454099498*^9, {3.866863887767027*^9, 3.866863891596203*^9}, {
   3.866866085045*^9, 3.866866085408708*^9}, {3.866866613610317*^9, 
   3.8668666139621067`*^9}, 3.868345733723016*^9, {3.868345775811075*^9, 
   3.868345775909162*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"4ca549a6-f4a8-48b8-bd04-5ba2c91f7834"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 88.7088%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "5049"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "4417"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}], "\[Rule]", "4083"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "4018"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", "376"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", "353"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", "303"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "265"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "\[Rule]", "182"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", "178"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "1"}], "}"}], "\[Rule]", "166"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "143"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", "136"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", "90"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "27"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "17"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.868343703253748*^9, 3.8683457261788473`*^9, 
  3.868360810745982*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"11820a5b-df23-4e21-a143-7e0ec361375c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpaceSaving", "[", "trainedSoftNet", "]"}]], "Input",
 CellChangeTimes->{{3.8668642342489862`*^9, 3.8668642483212557`*^9}, {
  3.866864301980486*^9, 3.866864302505608*^9}, {3.866864406655108*^9, 
  3.86686453684363*^9}, {3.866864775311109*^9, 3.866864778850369*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"d5dbb3ee-e45f-4e95-8066-408558b38cda"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Soft net size = 65.536 kilobytes\"\>"},
    {"\<\"Hard net size = 2.048 kilobytes\"\>"},
    {"\<\"Saving factor = 32.\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866864249947411*^9, 3.8668643028534403`*^9, 3.866864414235868*^9, 
   3.866864445660204*^9, {3.866864494244638*^9, 3.866864537301672*^9}, 
   3.866864595971245*^9, 3.866864779447701*^9, 3.86686686475023*^9, 
   3.8668677412127867`*^9, 3.866897713231059*^9, 3.867898621531806*^9, 
   3.8680192787284403`*^9, 3.868337739551867*^9, 3.868341537962901*^9, 
   3.868343715676773*^9, 3.868360822210245*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"ce4b0e3f-c031-47fc-baf3-1db147f538d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"boolNet", "=", 
  RowBox[{"hnf", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"\"\<b\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "inputSize"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.868339420141143*^9, 3.868339440841282*^9}, {
  3.868339491874304*^9, 3.868339492587295*^9}, {3.868339534029948*^9, 
  3.868339558120921*^9}, {3.868340327454562*^9, 3.86834032889155*^9}, {
  3.8683415532870483`*^9, 3.8683415580154667`*^9}, {3.86834206174513*^9, 
  3.868342061842394*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"077f67d6-f27e-43d9-828d-e19736cc28aa"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Majority", "[", 
               
               RowBox[{
                "b1", ",", "b10", ",", "b11", ",", "b12", ",", "b13", ",", 
                 "b14", ",", "b15", ",", "b16", ",", "b17", ",", "b18", ",", 
                 "b19", ",", "b2", ",", "b20", ",", "b21", ",", "b22", ",", 
                 "b23", ",", "b24", ",", "b25", ",", "b26", ",", "b27", ",", 
                 "b28", ",", "b29", ",", "b3", ",", "b30", ",", "b31", ",", 
                 "b32", ",", "b33", ",", "b34", ",", "b35", ",", "b36", ",", 
                 "b37", ",", "b38", ",", "b39", ",", "b4", ",", "b40", ",", 
                 "b41", ",", "b42", ",", "b43", ",", "b44", ",", "b45", ",", 
                 "b46", ",", "b47", ",", "b48", ",", "b49", ",", "b5", ",", 
                 "b50", ",", "b51", ",", "b52", ",", "b53", ",", "b54", ",", 
                 "b55", ",", "b56", ",", "b57", ",", "b58", ",", "b59", ",", 
                 "b6", ",", "b60", ",", "b61", ",", "b62", ",", "b63", ",", 
                 "b64", ",", "b7", ",", "b8", ",", "b9"}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               
               RowBox[{
                "b1", ",", "b10", ",", "b11", ",", "b12", ",", "b13", ",", 
                 "b14", ",", "b15", ",", "b16", ",", "b17", ",", "b18", ",", 
                 "b19", ",", "b2", ",", "b20", ",", "b21", ",", "b22", ",", 
                 "b23", ",", "b24", ",", "b25", ",", "b26", ",", "b27", ",", 
                 "b28", ",", "b29", ",", "b3", ",", "b30", ",", "b31", ",", 
                 "b32", ",", "b33", ",", "b34", ",", "b35", ",", "b36", ",", 
                 "b37", ",", "b38", ",", "b39", ",", "b4", ",", "b40", ",", 
                 "b41", ",", "b42", ",", "b43", ",", "b44", ",", "b45", ",", 
                 "b46", ",", "b47", ",", "b48", ",", "b49", ",", "b5", ",", 
                 "b50", ",", "b51", ",", "b52", ",", "b53", ",", "b54", ",", 
                 "b55", ",", "b56", ",", "b57", ",", "b58", ",", "b59", ",", 
                 "b6", ",", "b60", ",", "b61", ",", "b62", ",", "b63", ",", 
                 "b64", ",", "b7", ",", "b8", ",", "b9"}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               
               RowBox[{
                "b1", ",", "b10", ",", "b11", ",", "b12", ",", "b13", ",", 
                 "b14", ",", "b15", ",", "b16", ",", "b17", ",", "b18", ",", 
                 "b19", ",", "b2", ",", "b20", ",", "b21", ",", "b22", ",", 
                 "b23", ",", "b24", ",", "b25", ",", "b26", ",", "b27", ",", 
                 "b28", ",", "b29", ",", "b3", ",", "b30", ",", "b31", ",", 
                 "b32", ",", "b33", ",", "b34", ",", "b35", ",", "b36", ",", 
                 "b37", ",", "b38", ",", "b39", ",", "b4", ",", "b40", ",", 
                 "b41", ",", "b42", ",", "b43", ",", "b44", ",", "b45", ",", 
                 "b46", ",", "b47", ",", "b48", ",", "b49", ",", "b5", ",", 
                 "b50", ",", "b51", ",", "b52", ",", "b53", ",", "b54", ",", 
                 "b55", ",", "b56", ",", "b57", ",", "b58", ",", "b59", ",", 
                 "b6", ",", "b60", ",", "b61", ",", "b62", ",", "b63", ",", 
                 "b64", ",", "b7", ",", "b8", ",", "b9"}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               
               RowBox[{
                "b1", ",", "b10", ",", "b11", ",", "b12", ",", "b13", ",", 
                 "b14", ",", "b15", ",", "b16", ",", "b17", ",", "b18", ",", 
                 "b19", ",", "b2", ",", "b20", ",", "b21", ",", "b22", ",", 
                 "b23", ",", "b24", ",", "b25", ",", "b26", ",", "b27", ",", 
                 "b28", ",", "b29", ",", "b3", ",", "b30", ",", "b31", ",", 
                 "b32", ",", "b33", ",", "b34", ",", "b35", ",", "b36", ",", 
                 "b37", ",", "b38", ",", "b39", ",", "b4", ",", "b40", ",", 
                 "b41", ",", "b42", ",", "b43", ",", "b44", ",", "b45", ",", 
                 "b46", ",", "b47", ",", "b48", ",", "b49", ",", "b5", ",", 
                 "b50", ",", "b51", ",", "b52", ",", "b53", ",", "b54", ",", 
                 "b55", ",", "b56", ",", "b57", ",", "b58", ",", "b59", ",", 
                 "b6", ",", "b60", ",", "b61", ",", "b62", ",", "b63", ",", 
                 "b64", ",", "b7", ",", "b8", ",", "b9"}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               RowBox[{
                 RowBox[{"!", "b1"}], ",", 
                 RowBox[{"!", "b10"}], ",", 
                 RowBox[{"!", "b11"}], ",", 
                 RowBox[{"!", "b12"}], ",", 
                 RowBox[{"!", "b13"}], ",", 
                 RowBox[{"!", "b14"}], ",", 
                 RowBox[{"!", "b15"}], ",", 
                 RowBox[{"!", "b16"}], ",", 
                 RowBox[{"!", "b17"}], ",", 
                 RowBox[{"!", "b18"}], ",", 
                 RowBox[{"!", "b19"}], ",", 
                 RowBox[{"!", "b2"}], ",", 
                 RowBox[{"!", "b20"}], ",", 
                 RowBox[{"!", "b21"}], ",", 
                 RowBox[{"!", "b22"}], ",", 
                 RowBox[{"!", "b23"}], ",", 
                 RowBox[{"!", "b24"}], ",", 
                 RowBox[{"!", "b25"}], ",", 
                 RowBox[{"!", "b26"}], ",", 
                 RowBox[{"!", "b27"}], ",", 
                 RowBox[{"!", "b28"}], ",", 
                 RowBox[{"!", "b29"}], ",", 
                 RowBox[{"!", "b3"}], ",", 
                 RowBox[{"!", "b30"}], ",", 
                 RowBox[{"!", "b31"}], ",", 
                 RowBox[{"!", "b32"}], ",", 
                 RowBox[{"!", "b33"}], ",", 
                 RowBox[{"!", "b34"}], ",", 
                 RowBox[{"!", "b35"}], ",", 
                 RowBox[{"!", "b36"}], ",", 
                 RowBox[{"!", "b37"}], ",", 
                 RowBox[{"!", "b38"}], ",", 
                 RowBox[{"!", "b39"}], ",", 
                 RowBox[{"!", "b4"}], ",", 
                 RowBox[{"!", "b40"}], ",", 
                 RowBox[{"!", "b41"}], ",", 
                 RowBox[{"!", "b42"}], ",", 
                 RowBox[{"!", "b43"}], ",", 
                 RowBox[{"!", "b44"}], ",", 
                 RowBox[{"!", "b45"}], ",", 
                 RowBox[{"!", "b46"}], ",", 
                 RowBox[{"!", "b47"}], ",", 
                 RowBox[{"!", "b48"}], ",", 
                 RowBox[{"!", "b49"}], ",", 
                 RowBox[{"!", "b5"}], ",", 
                 RowBox[{"!", "b50"}], ",", 
                 RowBox[{"!", "b51"}], ",", 
                 RowBox[{"!", "b52"}], ",", 
                 RowBox[{"!", "b53"}], ",", 
                 RowBox[{"!", "b54"}], ",", 
                 RowBox[{"!", "b55"}], ",", 
                 RowBox[{"!", "b56"}], ",", 
                 RowBox[{"!", "b57"}], ",", 
                 RowBox[{"!", "b58"}], ",", 
                 RowBox[{"!", "b59"}], ",", 
                 RowBox[{"!", "b6"}], ",", 
                 RowBox[{"!", "b60"}], ",", 
                 RowBox[{"!", "b61"}], ",", 
                 RowBox[{"!", "b62"}], ",", 
                 RowBox[{"!", "b63"}], ",", 
                 RowBox[{"!", "b64"}], ",", 
                 RowBox[{"!", "b7"}], ",", 
                 RowBox[{"!", "b8"}], ",", 
                 RowBox[{"!", "b9"}]}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               RowBox[{
                 RowBox[{"!", "b1"}], ",", 
                 RowBox[{"!", "b10"}], ",", 
                 RowBox[{"!", "b11"}], ",", 
                 RowBox[{"!", "b12"}], ",", 
                 RowBox[{"!", "b13"}], ",", 
                 RowBox[{"!", "b14"}], ",", 
                 RowBox[{"!", "b15"}], ",", 
                 RowBox[{"!", "b16"}], ",", 
                 RowBox[{"!", "b17"}], ",", 
                 RowBox[{"!", "b18"}], ",", 
                 RowBox[{"!", "b19"}], ",", 
                 RowBox[{"!", "b2"}], ",", 
                 RowBox[{"!", "b20"}], ",", 
                 RowBox[{"!", "b21"}], ",", 
                 RowBox[{"!", "b22"}], ",", 
                 RowBox[{"!", "b23"}], ",", 
                 RowBox[{"!", "b24"}], ",", 
                 RowBox[{"!", "b25"}], ",", 
                 RowBox[{"!", "b26"}], ",", 
                 RowBox[{"!", "b27"}], ",", 
                 RowBox[{"!", "b28"}], ",", 
                 RowBox[{"!", "b29"}], ",", 
                 RowBox[{"!", "b3"}], ",", 
                 RowBox[{"!", "b30"}], ",", 
                 RowBox[{"!", "b31"}], ",", 
                 RowBox[{"!", "b32"}], ",", 
                 RowBox[{"!", "b33"}], ",", 
                 RowBox[{"!", "b34"}], ",", 
                 RowBox[{"!", "b35"}], ",", 
                 RowBox[{"!", "b36"}], ",", 
                 RowBox[{"!", "b37"}], ",", 
                 RowBox[{"!", "b38"}], ",", 
                 RowBox[{"!", "b39"}], ",", 
                 RowBox[{"!", "b4"}], ",", 
                 RowBox[{"!", "b40"}], ",", 
                 RowBox[{"!", "b41"}], ",", 
                 RowBox[{"!", "b42"}], ",", 
                 RowBox[{"!", "b43"}], ",", 
                 RowBox[{"!", "b44"}], ",", 
                 RowBox[{"!", "b45"}], ",", 
                 RowBox[{"!", "b46"}], ",", 
                 RowBox[{"!", "b47"}], ",", 
                 RowBox[{"!", "b48"}], ",", 
                 RowBox[{"!", "b49"}], ",", 
                 RowBox[{"!", "b5"}], ",", 
                 RowBox[{"!", "b50"}], ",", 
                 RowBox[{"!", "b51"}], ",", 
                 RowBox[{"!", "b52"}], ",", 
                 RowBox[{"!", "b53"}], ",", 
                 RowBox[{"!", "b54"}], ",", 
                 RowBox[{"!", "b55"}], ",", 
                 RowBox[{"!", "b56"}], ",", 
                 RowBox[{"!", "b57"}], ",", 
                 RowBox[{"!", "b58"}], ",", 
                 RowBox[{"!", "b59"}], ",", 
                 RowBox[{"!", "b6"}], ",", 
                 RowBox[{"!", "b60"}], ",", 
                 RowBox[{"!", "b61"}], ",", 
                 RowBox[{"!", "b62"}], ",", 
                 RowBox[{"!", "b63"}], ",", 
                 RowBox[{"!", "b64"}], ",", 
                 RowBox[{"!", "b7"}], ",", 
                 RowBox[{"!", "b8"}], ",", 
                 RowBox[{"!", "b9"}]}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               
               RowBox[{
                "b1", ",", "b10", ",", "b11", ",", "b12", ",", "b13", ",", 
                 "b14", ",", "b15", ",", "b16", ",", "b17", ",", "b18", ",", 
                 "b19", ",", "b2", ",", "b20", ",", "b21", ",", "b22", ",", 
                 "b23", ",", "b24", ",", "b25", ",", "b26", ",", "b27", ",", 
                 "b28", ",", "b29", ",", "b3", ",", "b30", ",", "b31", ",", 
                 "b32", ",", "b33", ",", "b34", ",", "b35", ",", "b36", ",", 
                 "b37", ",", "b38", ",", "b39", ",", "b4", ",", "b40", ",", 
                 "b41", ",", "b42", ",", "b43", ",", "b44", ",", "b45", ",", 
                 "b46", ",", "b47", ",", "b48", ",", "b49", ",", "b5", ",", 
                 "b50", ",", "b51", ",", "b52", ",", "b53", ",", "b54", ",", 
                 "b55", ",", "b56", ",", "b57", ",", "b58", ",", "b59", ",", 
                 "b6", ",", "b60", ",", "b61", ",", "b62", ",", "b63", ",", 
                 "b64", ",", "b7", ",", "b8", ",", "b9"}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               RowBox[{
                 RowBox[{"!", "b1"}], ",", 
                 RowBox[{"!", "b10"}], ",", 
                 RowBox[{"!", "b11"}], ",", 
                 RowBox[{"!", "b12"}], ",", 
                 RowBox[{"!", "b13"}], ",", 
                 RowBox[{"!", "b14"}], ",", 
                 RowBox[{"!", "b15"}], ",", 
                 RowBox[{"!", "b16"}], ",", 
                 RowBox[{"!", "b17"}], ",", 
                 RowBox[{"!", "b18"}], ",", 
                 RowBox[{"!", "b19"}], ",", 
                 RowBox[{"!", "b2"}], ",", 
                 RowBox[{"!", "b20"}], ",", 
                 RowBox[{"!", "b21"}], ",", 
                 RowBox[{"!", "b22"}], ",", 
                 RowBox[{"!", "b23"}], ",", 
                 RowBox[{"!", "b24"}], ",", 
                 RowBox[{"!", "b25"}], ",", 
                 RowBox[{"!", "b26"}], ",", 
                 RowBox[{"!", "b27"}], ",", 
                 RowBox[{"!", "b28"}], ",", 
                 RowBox[{"!", "b29"}], ",", 
                 RowBox[{"!", "b3"}], ",", 
                 RowBox[{"!", "b30"}], ",", 
                 RowBox[{"!", "b31"}], ",", 
                 RowBox[{"!", "b32"}], ",", 
                 RowBox[{"!", "b33"}], ",", 
                 RowBox[{"!", "b34"}], ",", 
                 RowBox[{"!", "b35"}], ",", 
                 RowBox[{"!", "b36"}], ",", 
                 RowBox[{"!", "b37"}], ",", 
                 RowBox[{"!", "b38"}], ",", 
                 RowBox[{"!", "b39"}], ",", 
                 RowBox[{"!", "b4"}], ",", 
                 RowBox[{"!", "b40"}], ",", 
                 RowBox[{"!", "b41"}], ",", 
                 RowBox[{"!", "b42"}], ",", 
                 RowBox[{"!", "b43"}], ",", 
                 RowBox[{"!", "b44"}], ",", 
                 RowBox[{"!", "b45"}], ",", 
                 RowBox[{"!", "b46"}], ",", 
                 RowBox[{"!", "b47"}], ",", 
                 RowBox[{"!", "b48"}], ",", 
                 RowBox[{"!", "b49"}], ",", 
                 RowBox[{"!", "b5"}], ",", 
                 RowBox[{"!", "b50"}], ",", 
                 RowBox[{"!", "b51"}], ",", 
                 RowBox[{"!", "b52"}], ",", 
                 RowBox[{"!", "b53"}], ",", 
                 RowBox[{"!", "b54"}], ",", 
                 RowBox[{"!", "b55"}], ",", 
                 RowBox[{"!", "b56"}], ",", 
                 RowBox[{"!", "b57"}], ",", 
                 RowBox[{"!", "b58"}], ",", 
                 RowBox[{"!", "b59"}], ",", 
                 RowBox[{"!", "b6"}], ",", 
                 RowBox[{"!", "b60"}], ",", 
                 RowBox[{"!", "b61"}], ",", 
                 RowBox[{"!", "b62"}], ",", 
                 RowBox[{"!", "b63"}], ",", 
                 RowBox[{"!", "b64"}], ",", 
                 RowBox[{"!", "b7"}], ",", 
                 RowBox[{"!", "b8"}], ",", 
                 RowBox[{"!", "b9"}]}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               RowBox[{
                 RowBox[{"!", "b1"}], ",", 
                 RowBox[{"!", "b10"}], ",", 
                 RowBox[{"!", "b11"}], ",", 
                 RowBox[{"!", "b12"}], ",", 
                 RowBox[{"!", "b13"}], ",", 
                 RowBox[{"!", "b14"}], ",", 
                 RowBox[{"!", "b15"}], ",", 
                 RowBox[{"!", "b16"}], ",", 
                 RowBox[{"!", "b17"}], ",", 
                 RowBox[{"!", "b18"}], ",", 
                 RowBox[{"!", "b19"}], ",", 
                 RowBox[{"!", "b2"}], ",", 
                 RowBox[{"!", "b20"}], ",", 
                 RowBox[{"!", "b21"}], ",", 
                 RowBox[{"!", "b22"}], ",", 
                 RowBox[{"!", "b23"}], ",", 
                 RowBox[{"!", "b24"}], ",", 
                 RowBox[{"!", "b25"}], ",", 
                 RowBox[{"!", "b26"}], ",", 
                 RowBox[{"!", "b27"}], ",", 
                 RowBox[{"!", "b28"}], ",", 
                 RowBox[{"!", "b29"}], ",", 
                 RowBox[{"!", "b3"}], ",", 
                 RowBox[{"!", "b30"}], ",", 
                 RowBox[{"!", "b31"}], ",", 
                 RowBox[{"!", "b32"}], ",", 
                 RowBox[{"!", "b33"}], ",", 
                 RowBox[{"!", "b34"}], ",", 
                 RowBox[{"!", "b35"}], ",", 
                 RowBox[{"!", "b36"}], ",", 
                 RowBox[{"!", "b37"}], ",", 
                 RowBox[{"!", "b38"}], ",", 
                 RowBox[{"!", "b39"}], ",", 
                 RowBox[{"!", "b4"}], ",", 
                 RowBox[{"!", "b40"}], ",", 
                 RowBox[{"!", "b41"}], ",", 
                 RowBox[{"!", "b42"}], ",", 
                 RowBox[{"!", "b43"}], ",", 
                 RowBox[{"!", "b44"}], ",", 
                 RowBox[{"!", "b45"}], ",", 
                 RowBox[{"!", "b46"}], ",", 
                 RowBox[{"!", "b47"}], ",", 
                 RowBox[{"!", "b48"}], ",", 
                 RowBox[{"!", "b49"}], ",", 
                 RowBox[{"!", "b5"}], ",", 
                 RowBox[{"!", "b50"}], ",", 
                 RowBox[{"!", "b51"}], ",", 
                 RowBox[{"!", "b52"}], ",", 
                 RowBox[{"!", "b53"}], ",", 
                 RowBox[{"!", "b54"}], ",", 
                 RowBox[{"!", "b55"}], ",", 
                 RowBox[{"!", "b56"}], ",", 
                 RowBox[{"!", "b57"}], ",", 
                 RowBox[{"!", "b58"}], ",", 
                 RowBox[{"!", "b59"}], ",", 
                 RowBox[{"!", "b6"}], ",", 
                 RowBox[{"!", "b60"}], ",", 
                 RowBox[{"!", "b61"}], ",", 
                 RowBox[{"!", "b62"}], ",", 
                 RowBox[{"!", "b63"}], ",", 
                 RowBox[{"!", "b64"}], ",", 
                 RowBox[{"!", "b7"}], ",", 
                 RowBox[{"!", "b8"}], ",", 
                 RowBox[{"!", "b9"}]}], "]"}], ",", 
             TemplateBox[{"47"}, "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"Majority", "[", 
               RowBox[{
                 RowBox[{"!", "b1"}], ",", 
                 RowBox[{"!", "b10"}], ",", 
                 RowBox[{"!", "b11"}], ",", 
                 RowBox[{"!", "b12"}], ",", 
                 RowBox[{"!", "b13"}], ",", 
                 RowBox[{"!", "b14"}], ",", 
                 RowBox[{"!", "b15"}], ",", 
                 RowBox[{"!", "b16"}], ",", 
                 RowBox[{"!", "b17"}], ",", 
                 RowBox[{"!", "b18"}], ",", 
                 RowBox[{"!", "b19"}], ",", 
                 RowBox[{"!", "b2"}], ",", 
                 RowBox[{"!", "b20"}], ",", 
                 RowBox[{"!", "b21"}], ",", 
                 RowBox[{"!", "b22"}], ",", 
                 RowBox[{"!", "b23"}], ",", 
                 RowBox[{"!", "b24"}], ",", 
                 RowBox[{"!", "b25"}], ",", 
                 RowBox[{"!", "b26"}], ",", 
                 RowBox[{"!", "b27"}], ",", 
                 RowBox[{"!", "b28"}], ",", 
                 RowBox[{"!", "b29"}], ",", 
                 RowBox[{"!", "b3"}], ",", 
                 RowBox[{"!", "b30"}], ",", 
                 RowBox[{"!", "b31"}], ",", 
                 RowBox[{"!", "b32"}], ",", 
                 RowBox[{"!", "b33"}], ",", 
                 RowBox[{"!", "b34"}], ",", 
                 RowBox[{"!", "b35"}], ",", 
                 RowBox[{"!", "b36"}], ",", 
                 RowBox[{"!", "b37"}], ",", 
                 RowBox[{"!", "b38"}], ",", 
                 RowBox[{"!", "b39"}], ",", 
                 RowBox[{"!", "b4"}], ",", 
                 RowBox[{"!", "b40"}], ",", 
                 RowBox[{"!", "b41"}], ",", 
                 RowBox[{"!", "b42"}], ",", 
                 RowBox[{"!", "b43"}], ",", 
                 RowBox[{"!", "b44"}], ",", 
                 RowBox[{"!", "b45"}], ",", 
                 RowBox[{"!", "b46"}], ",", 
                 RowBox[{"!", "b47"}], ",", 
                 RowBox[{"!", "b48"}], ",", 
                 RowBox[{"!", "b49"}], ",", 
                 RowBox[{"!", "b5"}], ",", 
                 RowBox[{"!", "b50"}], ",", 
                 RowBox[{"!", "b51"}], ",", 
                 RowBox[{"!", "b52"}], ",", 
                 RowBox[{"!", "b53"}], ",", 
                 RowBox[{"!", "b54"}], ",", 
                 RowBox[{"!", "b55"}], ",", 
                 RowBox[{"!", "b56"}], ",", 
                 RowBox[{"!", "b57"}], ",", 
                 RowBox[{"!", "b58"}], ",", 
                 RowBox[{"!", "b59"}], ",", 
                 RowBox[{"!", "b6"}], ",", 
                 RowBox[{"!", "b60"}], ",", 
                 RowBox[{"!", "b61"}], ",", 
                 RowBox[{"!", "b62"}], ",", 
                 RowBox[{"!", "b63"}], ",", 
                 RowBox[{"!", "b64"}], ",", 
                 RowBox[{"!", "b7"}], ",", 
                 RowBox[{"!", "b8"}], ",", 
                 RowBox[{"!", "b9"}]}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               
               RowBox[{
                "b1", ",", "b10", ",", "b11", ",", "b12", ",", "b13", ",", 
                 "b14", ",", "b15", ",", "b16", ",", "b17", ",", "b18", ",", 
                 "b19", ",", "b2", ",", "b20", ",", "b21", ",", "b22", ",", 
                 "b23", ",", "b24", ",", "b25", ",", "b26", ",", "b27", ",", 
                 "b28", ",", "b29", ",", "b3", ",", "b30", ",", "b31", ",", 
                 "b32", ",", "b33", ",", "b34", ",", "b35", ",", "b36", ",", 
                 "b37", ",", "b38", ",", "b39", ",", "b4", ",", "b40", ",", 
                 "b41", ",", "b42", ",", "b43", ",", "b44", ",", "b45", ",", 
                 "b46", ",", "b47", ",", "b48", ",", "b49", ",", "b5", ",", 
                 "b50", ",", "b51", ",", "b52", ",", "b53", ",", "b54", ",", 
                 "b55", ",", "b56", ",", "b57", ",", "b58", ",", "b59", ",", 
                 "b6", ",", "b60", ",", "b61", ",", "b62", ",", "b63", ",", 
                 "b64", ",", "b7", ",", "b8", ",", "b9"}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               
               RowBox[{
                "b1", ",", "b10", ",", "b11", ",", "b12", ",", "b13", ",", 
                 "b14", ",", "b15", ",", "b16", ",", "b17", ",", "b18", ",", 
                 "b19", ",", "b2", ",", "b20", ",", "b21", ",", "b22", ",", 
                 "b23", ",", "b24", ",", "b25", ",", "b26", ",", "b27", ",", 
                 "b28", ",", "b29", ",", "b3", ",", "b30", ",", "b31", ",", 
                 "b32", ",", "b33", ",", "b34", ",", "b35", ",", "b36", ",", 
                 "b37", ",", "b38", ",", "b39", ",", "b4", ",", "b40", ",", 
                 "b41", ",", "b42", ",", "b43", ",", "b44", ",", "b45", ",", 
                 "b46", ",", "b47", ",", "b48", ",", "b49", ",", "b5", ",", 
                 "b50", ",", "b51", ",", "b52", ",", "b53", ",", "b54", ",", 
                 "b55", ",", "b56", ",", "b57", ",", "b58", ",", "b59", ",", 
                 "b6", ",", "b60", ",", "b61", ",", "b62", ",", "b63", ",", 
                 "b64", ",", "b7", ",", "b8", ",", "b9"}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               
               RowBox[{
                "b1", ",", "b10", ",", "b11", ",", "b12", ",", "b13", ",", 
                 "b14", ",", "b15", ",", "b16", ",", "b17", ",", "b18", ",", 
                 "b19", ",", "b2", ",", "b20", ",", "b21", ",", "b22", ",", 
                 "b23", ",", "b24", ",", "b25", ",", "b26", ",", "b27", ",", 
                 "b28", ",", "b29", ",", "b3", ",", "b30", ",", "b31", ",", 
                 "b32", ",", "b33", ",", "b34", ",", "b35", ",", "b36", ",", 
                 "b37", ",", "b38", ",", "b39", ",", "b4", ",", "b40", ",", 
                 "b41", ",", "b42", ",", "b43", ",", "b44", ",", "b45", ",", 
                 "b46", ",", "b47", ",", "b48", ",", "b49", ",", "b5", ",", 
                 "b50", ",", "b51", ",", "b52", ",", "b53", ",", "b54", ",", 
                 "b55", ",", "b56", ",", "b57", ",", "b58", ",", "b59", ",", 
                 "b6", ",", "b60", ",", "b61", ",", "b62", ",", "b63", ",", 
                 "b64", ",", "b7", ",", "b8", ",", "b9"}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               RowBox[{
                 RowBox[{"!", "b1"}], ",", 
                 RowBox[{"!", "b10"}], ",", 
                 RowBox[{"!", "b11"}], ",", 
                 RowBox[{"!", "b12"}], ",", 
                 RowBox[{"!", "b13"}], ",", 
                 RowBox[{"!", "b14"}], ",", 
                 RowBox[{"!", "b15"}], ",", 
                 RowBox[{"!", "b16"}], ",", 
                 RowBox[{"!", "b17"}], ",", 
                 RowBox[{"!", "b18"}], ",", 
                 RowBox[{"!", "b19"}], ",", 
                 RowBox[{"!", "b2"}], ",", 
                 RowBox[{"!", "b20"}], ",", 
                 RowBox[{"!", "b21"}], ",", 
                 RowBox[{"!", "b22"}], ",", 
                 RowBox[{"!", "b23"}], ",", 
                 RowBox[{"!", "b24"}], ",", 
                 RowBox[{"!", "b25"}], ",", 
                 RowBox[{"!", "b26"}], ",", 
                 RowBox[{"!", "b27"}], ",", 
                 RowBox[{"!", "b28"}], ",", 
                 RowBox[{"!", "b29"}], ",", 
                 RowBox[{"!", "b3"}], ",", 
                 RowBox[{"!", "b30"}], ",", 
                 RowBox[{"!", "b31"}], ",", 
                 RowBox[{"!", "b32"}], ",", 
                 RowBox[{"!", "b33"}], ",", 
                 RowBox[{"!", "b34"}], ",", 
                 RowBox[{"!", "b35"}], ",", 
                 RowBox[{"!", "b36"}], ",", 
                 RowBox[{"!", "b37"}], ",", 
                 RowBox[{"!", "b38"}], ",", 
                 RowBox[{"!", "b39"}], ",", 
                 RowBox[{"!", "b4"}], ",", 
                 RowBox[{"!", "b40"}], ",", 
                 RowBox[{"!", "b41"}], ",", 
                 RowBox[{"!", "b42"}], ",", 
                 RowBox[{"!", "b43"}], ",", 
                 RowBox[{"!", "b44"}], ",", 
                 RowBox[{"!", "b45"}], ",", 
                 RowBox[{"!", "b46"}], ",", 
                 RowBox[{"!", "b47"}], ",", 
                 RowBox[{"!", "b48"}], ",", 
                 RowBox[{"!", "b49"}], ",", 
                 RowBox[{"!", "b5"}], ",", 
                 RowBox[{"!", "b50"}], ",", 
                 RowBox[{"!", "b51"}], ",", 
                 RowBox[{"!", "b52"}], ",", 
                 RowBox[{"!", "b53"}], ",", 
                 RowBox[{"!", "b54"}], ",", 
                 RowBox[{"!", "b55"}], ",", 
                 RowBox[{"!", "b56"}], ",", 
                 RowBox[{"!", "b57"}], ",", 
                 RowBox[{"!", "b58"}], ",", 
                 RowBox[{"!", "b59"}], ",", 
                 RowBox[{"!", "b6"}], ",", 
                 RowBox[{"!", "b60"}], ",", 
                 RowBox[{"!", "b61"}], ",", 
                 RowBox[{"!", "b62"}], ",", 
                 RowBox[{"!", "b63"}], ",", 
                 RowBox[{"!", "b64"}], ",", 
                 RowBox[{"!", "b7"}], ",", 
                 RowBox[{"!", "b8"}], ",", 
                 RowBox[{"!", "b9"}]}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               
               RowBox[{
                "b1", ",", "b10", ",", "b11", ",", "b12", ",", "b13", ",", 
                 "b14", ",", "b15", ",", "b16", ",", "b17", ",", "b18", ",", 
                 "b19", ",", "b2", ",", "b20", ",", "b21", ",", "b22", ",", 
                 "b23", ",", "b24", ",", "b25", ",", "b26", ",", "b27", ",", 
                 "b28", ",", "b29", ",", "b3", ",", "b30", ",", "b31", ",", 
                 "b32", ",", "b33", ",", "b34", ",", "b35", ",", "b36", ",", 
                 "b37", ",", "b38", ",", "b39", ",", "b4", ",", "b40", ",", 
                 "b41", ",", "b42", ",", "b43", ",", "b44", ",", "b45", ",", 
                 "b46", ",", "b47", ",", "b48", ",", "b49", ",", "b5", ",", 
                 "b50", ",", "b51", ",", "b52", ",", "b53", ",", "b54", ",", 
                 "b55", ",", "b56", ",", "b57", ",", "b58", ",", "b59", ",", 
                 "b6", ",", "b60", ",", "b61", ",", "b62", ",", "b63", ",", 
                 "b64", ",", "b7", ",", "b8", ",", "b9"}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               RowBox[{
                 RowBox[{"!", "b1"}], ",", 
                 RowBox[{"!", "b10"}], ",", 
                 RowBox[{"!", "b11"}], ",", 
                 RowBox[{"!", "b12"}], ",", 
                 RowBox[{"!", "b13"}], ",", 
                 RowBox[{"!", "b14"}], ",", 
                 RowBox[{"!", "b15"}], ",", 
                 RowBox[{"!", "b16"}], ",", 
                 RowBox[{"!", "b17"}], ",", 
                 RowBox[{"!", "b18"}], ",", 
                 RowBox[{"!", "b19"}], ",", 
                 RowBox[{"!", "b2"}], ",", 
                 RowBox[{"!", "b20"}], ",", 
                 RowBox[{"!", "b21"}], ",", 
                 RowBox[{"!", "b22"}], ",", 
                 RowBox[{"!", "b23"}], ",", 
                 RowBox[{"!", "b24"}], ",", 
                 RowBox[{"!", "b25"}], ",", 
                 RowBox[{"!", "b26"}], ",", 
                 RowBox[{"!", "b27"}], ",", 
                 RowBox[{"!", "b28"}], ",", 
                 RowBox[{"!", "b29"}], ",", 
                 RowBox[{"!", "b3"}], ",", 
                 RowBox[{"!", "b30"}], ",", 
                 RowBox[{"!", "b31"}], ",", 
                 RowBox[{"!", "b32"}], ",", 
                 RowBox[{"!", "b33"}], ",", 
                 RowBox[{"!", "b34"}], ",", 
                 RowBox[{"!", "b35"}], ",", 
                 RowBox[{"!", "b36"}], ",", 
                 RowBox[{"!", "b37"}], ",", 
                 RowBox[{"!", "b38"}], ",", 
                 RowBox[{"!", "b39"}], ",", 
                 RowBox[{"!", "b4"}], ",", 
                 RowBox[{"!", "b40"}], ",", 
                 RowBox[{"!", "b41"}], ",", 
                 RowBox[{"!", "b42"}], ",", 
                 RowBox[{"!", "b43"}], ",", 
                 RowBox[{"!", "b44"}], ",", 
                 RowBox[{"!", "b45"}], ",", 
                 RowBox[{"!", "b46"}], ",", 
                 RowBox[{"!", "b47"}], ",", 
                 RowBox[{"!", "b48"}], ",", 
                 RowBox[{"!", "b49"}], ",", 
                 RowBox[{"!", "b5"}], ",", 
                 RowBox[{"!", "b50"}], ",", 
                 RowBox[{"!", "b51"}], ",", 
                 RowBox[{"!", "b52"}], ",", 
                 RowBox[{"!", "b53"}], ",", 
                 RowBox[{"!", "b54"}], ",", 
                 RowBox[{"!", "b55"}], ",", 
                 RowBox[{"!", "b56"}], ",", 
                 RowBox[{"!", "b57"}], ",", 
                 RowBox[{"!", "b58"}], ",", 
                 RowBox[{"!", "b59"}], ",", 
                 RowBox[{"!", "b6"}], ",", 
                 RowBox[{"!", "b60"}], ",", 
                 RowBox[{"!", "b61"}], ",", 
                 RowBox[{"!", "b62"}], ",", 
                 RowBox[{"!", "b63"}], ",", 
                 RowBox[{"!", "b64"}], ",", 
                 RowBox[{"!", "b7"}], ",", 
                 RowBox[{"!", "b8"}], ",", 
                 RowBox[{"!", "b9"}]}], "]"}], ",", 
             RowBox[{"Majority", "[", 
               RowBox[{
                 RowBox[{"!", "b1"}], ",", 
                 RowBox[{"!", "b10"}], ",", 
                 RowBox[{"!", "b11"}], ",", 
                 RowBox[{"!", "b12"}], ",", 
                 RowBox[{"!", "b13"}], ",", 
                 RowBox[{"!", "b14"}], ",", 
                 RowBox[{"!", "b15"}], ",", 
                 RowBox[{"!", "b16"}], ",", 
                 RowBox[{"!", "b17"}], ",", 
                 RowBox[{"!", "b18"}], ",", 
                 RowBox[{"!", "b19"}], ",", 
                 RowBox[{"!", "b2"}], ",", 
                 RowBox[{"!", "b20"}], ",", 
                 RowBox[{"!", "b21"}], ",", 
                 RowBox[{"!", "b22"}], ",", 
                 RowBox[{"!", "b23"}], ",", 
                 RowBox[{"!", "b24"}], ",", 
                 RowBox[{"!", "b25"}], ",", 
                 RowBox[{"!", "b26"}], ",", 
                 RowBox[{"!", "b27"}], ",", 
                 RowBox[{"!", "b28"}], ",", 
                 RowBox[{"!", "b29"}], ",", 
                 RowBox[{"!", "b3"}], ",", 
                 RowBox[{"!", "b30"}], ",", 
                 RowBox[{"!", "b31"}], ",", 
                 RowBox[{"!", "b32"}], ",", 
                 RowBox[{"!", "b33"}], ",", 
                 RowBox[{"!", "b34"}], ",", 
                 RowBox[{"!", "b35"}], ",", 
                 RowBox[{"!", "b36"}], ",", 
                 RowBox[{"!", "b37"}], ",", 
                 RowBox[{"!", "b38"}], ",", 
                 RowBox[{"!", "b39"}], ",", 
                 RowBox[{"!", "b4"}], ",", 
                 RowBox[{"!", "b40"}], ",", 
                 RowBox[{"!", "b41"}], ",", 
                 RowBox[{"!", "b42"}], ",", 
                 RowBox[{"!", "b43"}], ",", 
                 RowBox[{"!", "b44"}], ",", 
                 RowBox[{"!", "b45"}], ",", 
                 RowBox[{"!", "b46"}], ",", 
                 RowBox[{"!", "b47"}], ",", 
                 RowBox[{"!", "b48"}], ",", 
                 RowBox[{"!", "b49"}], ",", 
                 RowBox[{"!", "b5"}], ",", 
                 RowBox[{"!", "b50"}], ",", 
                 RowBox[{"!", "b51"}], ",", 
                 RowBox[{"!", "b52"}], ",", 
                 RowBox[{"!", "b53"}], ",", 
                 RowBox[{"!", "b54"}], ",", 
                 RowBox[{"!", "b55"}], ",", 
                 RowBox[{"!", "b56"}], ",", 
                 RowBox[{"!", "b57"}], ",", 
                 RowBox[{"!", "b58"}], ",", 
                 RowBox[{"!", "b59"}], ",", 
                 RowBox[{"!", "b6"}], ",", 
                 RowBox[{"!", "b60"}], ",", 
                 RowBox[{"!", "b61"}], ",", 
                 RowBox[{"!", "b62"}], ",", 
                 RowBox[{"!", "b63"}], ",", 
                 RowBox[{"!", "b64"}], ",", 
                 RowBox[{"!", "b7"}], ",", 
                 RowBox[{"!", "b8"}], ",", 
                 RowBox[{"!", "b9"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Majority", "[", 
               RowBox[{
                 RowBox[{"!", "b1"}], ",", 
                 RowBox[{"!", "b10"}], ",", 
                 RowBox[{"!", "b11"}], ",", 
                 RowBox[{"!", "b12"}], ",", 
                 RowBox[{"!", "b13"}], ",", 
                 RowBox[{"!", "b14"}], ",", 
                 RowBox[{"!", "b15"}], ",", 
                 RowBox[{"!", "b16"}], ",", 
                 RowBox[{"!", "b17"}], ",", 
                 RowBox[{"!", "b18"}], ",", 
                 RowBox[{"!", "b19"}], ",", 
                 RowBox[{"!", "b2"}], ",", 
                 TemplateBox[{"40"}, "OutputSizeLimit`Skeleton"], ",", 
                 RowBox[{"!", "b57"}], ",", 
                 RowBox[{"!", "b58"}], ",", 
                 RowBox[{"!", "b59"}], ",", 
                 RowBox[{"!", "b6"}], ",", 
                 RowBox[{"!", "b60"}], ",", 
                 RowBox[{"!", "b61"}], ",", 
                 RowBox[{"!", "b62"}], ",", 
                 RowBox[{"!", "b63"}], ",", 
                 RowBox[{"!", "b64"}], ",", 
                 RowBox[{"!", "b7"}], ",", 
                 RowBox[{"!", "b8"}], ",", 
                 RowBox[{"!", "b9"}]}], "]"}], ",", 
             TemplateBox[{"62"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], "}"}], ",", 
         RowBox[{"{", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}]}], "}"}], 
     Short[#, 40]& ], "line" -> 70, "sessionID" -> 32544660011905439754, 
   "byteCount" -> 595272, "size" -> 40, "stored" -> False, "expr" -> 
   Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{
  3.8683387992767277`*^9, 3.868339062407858*^9, 3.8683391205963507`*^9, 
   3.8683394210609922`*^9, 3.8683394930279417`*^9, {3.868339535580161*^9, 
   3.8683395589023457`*^9}, 3.8683402337001677`*^9, 3.868340329845833*^9, {
   3.868341547297985*^9, 3.8683415586552677`*^9}, 3.8683420627851667`*^9, 
   3.868343717045269*^9, 3.86834574670435*^9, 3.868360825775988*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"20634c40-5b16-4a94-a7cf-9a0f3c60137d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.865418895304618*^9, 
  3.865418895944718*^9}},ExpressionUUID->"c33fd357-ab86-4dac-a5dc-\
fb8a483872d5"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<neural-logic.m\>\"", ",", 
   RowBox[{"Path", "->", 
    RowBox[{"SetDirectory", "[", 
     RowBox[{"ParentDirectory", "[", 
      RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8680109147923737`*^9, 3.868010915386524*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"de7ef9f2-bf67-4869-9b14-c25b89d18d50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetFlatten", "[", 
  RowBox[{
   RowBox[{"HardNeuralAND", "[", 
    RowBox[{"2", ",", "4"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.868171785892291*^9, 3.8681718225454483`*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"6b7168ce-8b76-4c08-965c-d335f1581d98"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"HardInclu..\"", "\"HardInclude\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "HardInclude", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{0, -13.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"And/Filter\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"OutputClip\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -13.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"And/Mean\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -13.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"And/Min\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Reshape\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-4.999999973205101, 
                    1.0000001339744848`}], 
                    
                    Offset[{0, -13.5}, {-4.999999973205101, 
                    1.0000001339744848`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Weights/W..\"", "\"Weights/Weights\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Weights/Weights", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{0, -13.5}, {-6.9999999732051, 
                    1.0000001875642788`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Weights/W..\"", "\"Weights/WeightsClip\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Weights/WeightsClip", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{0, -13.5}, {-5.999999973205101, 
                    1.0000001607693818`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{-3.8890871923183172`, 
                    3.8890874007337035`}, {-4.449999985262805, 
                    0.5500001192372916}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.707106762239694}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{3.889087400733703, 
                    3.889087192318317}, {-2.4499999879422956`, 
                    0.45000006564749745`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396939, -0.7071068001334005}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"2\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318316}, {-3.449999987942295, 
                    0.45000009244239464`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396938, -0.7071068001334007}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"2\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193454461564`*^-7, 
                    5.499999999999999}, {-3.449999973205102, 
                    1.0000000924423944`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.9999999999999998,
                     -2.6794897189930118`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"2\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-4.449999973205101, 
                    1.0000001192372916`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885513`*^-8}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-6.4499999732051005`, 
                    1.0000001728270855`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-5.4499999732051005`, 
                    1.0000001460321886`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999999999998, 
                    1.339744851455892*^-7}, {-3.9999999732051017`, 
                    1.0000001071795879`}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mean\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mean"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Min\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Min"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999999999999, 
                    8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999973205101, 
                    1.0000001339744848`}, {-3.9999999732051017`, 
                    1.0000001071795879`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.9999999732051, 
                    1.0000001875642788`}, {-5.999999973205101, 
                    1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999973205101, 
                    1.0000001607693818`}, {-4.999999973205101, 
                    1.0000001339744848`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.449999985262805, 
                    0.5500001192372916}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948965`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mean\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mean"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999879422956`, 
                    0.45000006564749745`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051028, -1.0000000267948965`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Min\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Min"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999987942295, 
                    0.45000009244239464`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051026, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999973205102, 
                    1.0000000924423944`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489718993011*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.449999973205101, 
                    1.0000001192372916`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4499999732051005`, 
                    1.0000001728270855`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4499999732051005`, 
                    1.0000001460321886`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4.999999999999998, 1.339744851455892*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-3.9999999732051017`, 
                    1.0000001071795879`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"HardInclude\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["HardInclude", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"And/Filter\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["And/Filter", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm89rE0EUx9NW0UoVfxXEk/YP8FBBBQUtWGvFYm2t+AOVJjuzTWtaSCu1
VehFwV+IICLiwUvNzK4o2oOCguBFBUFFcvCiHvTipSAoelDjm6ilO7tJNjQz
u0/3C6/N7uk7H2bevPmxK+MDHbQ6FosNzoU/Hd3DTel090jnQnjo6h9Mmv3E
aO0fIiZJr4vXwMvVEO0Qs2KhV1vQBpAr4jczVZhfrqq3117Wk7DWmwbfAXGQ
Up4khA9Qag3C76P5MNioSazjxaKyvpRpxvy6uuwa4LOHGtymhE9C5CoRlWic
Bs2In2lkmqGt2Uox+5/4EcIOQDt/qGD3r/OD8bof2vizSPs/EGLdh1zHTcKv
wfNF+H8B8tpZeH8Knk9DPjwJY/5Eoah0QxWpbH5ifoD2f/Jg9pAQe6PIhyqM
hlRl84N+NC6zMw1rrwpzCFQWP1GXuPod5WdUmUOgsvjBnJGR+L2i9MpsVeYQ
yDe/ZPL6IuD1bTo/mAuISnMI5JsfjNPDUt97OzY2Vq3SHAL550f4CynvHVNp
DIl88evpYSvkeSMeZ8tVm0MgX/zEHoCDn8EeqzaGRH75TTjqPcKGVRtDopL8
Uqm7c4DZ5+n8DCOzSoc5BCrJD2qUzfLaVuzz6TCHQCX5iTW/M/fxqzqMIVFJ
fsDrmbNuYft0GEOiovxSqfEFrj0+mlmqyxwCFeVHCG+Vcl9WlzEkKsEvv9c5
rW7hl3QZQ6Ki/IDXE2m/YLcuY0hUkF88fme+vGYTe886zSFQQX6mYW2T9gte
6zSGRAX5Qd1yzjl22WWdxpCoMD/KnzvPONguncaQyJNfX9+tJa7zyaju85In
P5hnO6W546VuY0jkyU+cezv5Wed1G0MiFz9xpgG83jvnDr49CHMI5OJHKVsr
jd0vlE7MC8IcArn4eexX2UEYQyKJX64KmL2L1my+5eBnmpmt0tj9Cmu2uqDM
IZCDH/B6IK3ZbgZlDImm+HnMG8DP3hCkOQTK8/tzxpaT5o1HQZtDoLZ8vQes
3Hf6Ms1Bmwu7GhrWpKFW/ujue9a9sJxRUmq16wxC2E6xfhV1hzgrE3eVTYMl
xDcY8G5E7EMBo6eiLm5pOeK+u0z5m0TCXhw0t79y+QtRePCbDNvdAuExrNHY
2DH1u2lTX7a+vqE79ntOCUPkFXQfK9r/tgx9FzWf2BsN6715yDu3dYeoeyHX
3TAJs8R9efENhsh7+bWtwUYhTx4Sd8Fra+s6g+aDXNH3l5EiRVKmXweTrmA=

                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"OutputClip\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["OutputClip", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Mu]\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-2.999999999999999, 
                    8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"And/Mean\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Mean", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["And/Mean", Bold], 
                    HoldForm[
                    AggregationLayer[Mean]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Min\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-2.999999973205102, 
                    1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"And/Min\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Min", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["And/Min", Bold], 
                    HoldForm[
                    AggregationLayer[Min]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-4.999999973205101, 1.0000001339744848`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-4.999999973205101, 
                    1.0000001339744848`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Reshape\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Reshape", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{-10.5, -10.5}, {-6.9999999732051, 
                    1.0000001875642788`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{10.5, 10.5}, {-6.9999999732051, 
                    1.0000001875642788`}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-6.9999999732051, 
                    1.0000001875642788`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Weights/Weights\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Weights/Weights", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-5.999999973205101, 1.0000001607693818`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-5.999999973205101, 
                    1.0000001607693818`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Weights/WeightsClip\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Weights/WeightsClip", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-4.999999999999998, 
                    1.339744851455892*^-7}, {-3.9999999732051017`, 
                    1.0000001071795879`}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-2.999999973205102, 
                    1.0000000803846907`}, {0., 0.}, {-4.999999973205101, 
                    1.0000001339744848`}, {-6.9999999732051, 
                    1.0000001875642788`}, {-5.999999973205101, 
                    1.0000001607693818`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 25, 21, 21, 21, 8, 21, 21, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {442.99999852628054`, 103.50000736859666`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.499997052561326`, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Weights/Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Weights/WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 2}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 2}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 2}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "And/Min" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 2}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "And/Mean" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 2}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "And/Filter" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (If[
                    Slot["Min"] > 1/2, 
                    Slot["Min"] + ((Slot["Min"] - 1/2) Slot["Mean"]) (1 - 
                    Slot["Min"]), Slot["Min"] + (1/2 - Slot["Min"]) 
                    Slot["Mean"]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    If[# > 0.5, # + (#2 (-0.5 + #)) Subtract[1, #], # + #2 
                    Subtract[0.5, #]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"Min" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT], "Mean" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|
                    "Min" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT], "Mean" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {4}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights/WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights/Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights/WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "And/Mean", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "And/Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "And/Filter", "Inputs", "Min"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And/Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "And/Filter", "Inputs", "Mean"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And/Mean", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And/Filter", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "HardInclude"], 
                    NeuralNetworks`NetPath["Nodes", "And/Filter"], 
                    NeuralNetworks`NetPath["Nodes", "OutputClip"], 
                    NeuralNetworks`NetPath["Nodes", "And/Mean"], 
                    NeuralNetworks`NetPath["Nodes", "And/Min"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Reshape"], 
                    NeuralNetworks`NetPath["Nodes", "Weights/Weights"], 
                    NeuralNetworks`NetPath["Nodes", "Weights/WeightsClip"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "HardInclude"], 
                    NeuralNetworks`NetPath["Nodes", "And/Filter"], 
                    NeuralNetworks`NetPath["Nodes", "OutputClip"], 
                    NeuralNetworks`NetPath["Nodes", "And/Mean"], 
                    NeuralNetworks`NetPath["Nodes", "And/Min"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Reshape"], 
                    NeuralNetworks`NetPath["Nodes", "Weights/Weights"], 
                    NeuralNetworks`NetPath["Nodes", "Weights/WeightsClip"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.868171794161949*^9, 3.86817182310389*^9}},
 CellLabel->
  "Out[214]=",ExpressionUUID->"0662a7dd-b988-4382-9716-22dd36cbcb88"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_List", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"min", "=", 
       RowBox[{"Min", "[", "x", "]"}]}], ",", "mean"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mean", "=", 
      RowBox[{"Mean", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"min", ">", 
        RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"min", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"min", "-", 
               RowBox[{"1", "/", "2"}]}], ")"}], "mean"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", "min"}], ")"}]}], ")"}], "2"]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"min", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "/", "2"}], "-", "min"}], ")"}], "mean"}], ")"}], 
         "2"]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8681693268098392`*^9, 3.868169351080463*^9}, {
  3.868169386546289*^9, 3.868169432349392*^9}, {3.8681695287044353`*^9, 
  3.868169529077178*^9}, {3.8681696362653513`*^9, 3.868169639997221*^9}, {
  3.868169697032585*^9, 3.868169706452898*^9}, {3.8681697392405443`*^9, 
  3.8681697431447887`*^9}, {3.868169802993058*^9, 3.868169873139258*^9}, {
  3.868169905019539*^9, 3.868169916067243*^9}, {3.868169964497034*^9, 
  3.868169969272614*^9}, {3.86817004299786*^9, 3.868170156540319*^9}, {
  3.868170189398267*^9, 3.868170240604663*^9}, {3.8681702818153954`*^9, 
  3.8681702956528673`*^9}, {3.868170360935886*^9, 3.868170368067059*^9}, {
  3.868172316553619*^9, 3.868172322723378*^9}, {3.8681723638739777`*^9, 
  3.868172376352201*^9}, {3.868172406467661*^9, 3.868172408651301*^9}, {
  3.8681725853098307`*^9, 3.868172593450333*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"be27fba8-cb1d-46fc-9b9f-3c287c572eda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5"}], "}"}], 
        "]"}], ",", "x2", ",", "x3", ",", "x4", ",", "x5"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "->", "Automatic"}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x2", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x4", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x5", ",", "0", ",", "1"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQzVDga/j+4htHxjd9biA6Q3yfN4huj0sKBNEaH8zD
QHRRRQaYvqaTkw6ixeUKwHSc4rVsEB1ltjEfRHOwd1SCaD6bCTUgenPO4gYQ
LSZm3gaiOavdukD0pkUp/WC+6o7JIPqVH+MMEG22L2IOiLYojQXTfzP0oz4B
aaYbPekgutLuczaI9rv2phBEL+KY2giil7buaAbRO3b0TATRPJkKk0E044/S
+SBayKEFTBvNnr0YRJ9iWwqm1Q3ni3wG0nW1ujIgev2WMFUQfSmgQQtEz5oW
KPIFSOu+/iYKooWm3pQF0bf+ySmBaADVAbu5
  "],
 CellLabel->
  "In[244]:=",ExpressionUUID->"8e1ac32c-6500-422a-87dc-aa7526afb847"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x2$$ = 1., $CellContext`x3$$ = 
    1., $CellContext`x4$$ = 1., $CellContext`x5$$ = 1., Typeset`show$$ = True,
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x2$$], 0, 1}, {
      Hold[$CellContext`x3$$], 0, 1}, {
      Hold[$CellContext`x4$$], 0, 1}, {
      Hold[$CellContext`x5$$], 0, 1}}, Typeset`size$$ = {414., {109., 114.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`x2$$ = 0, $CellContext`x3$$ = 
        0, $CellContext`x4$$ = 0, $CellContext`x5$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`f[{$CellContext`x1, $CellContext`x2$$, \
$CellContext`x3$$, $CellContext`x4$$, $CellContext`x5$$}], $CellContext`x2$$, \
$CellContext`x3$$, $CellContext`x4$$, $CellContext`x5$$}, {$CellContext`x1, 0,
          1}, PlotRange -> {{0, 1}, {0, 1}}, 
        GridLines -> {{1/2, 1}, {1/2, 1}}, AxesLabel -> Automatic, 
        PlotLegends -> Automatic], 
      "Specifications" :> {{$CellContext`x2$$, 0, 1}, {$CellContext`x3$$, 0, 
         1}, {$CellContext`x4$$, 0, 1}, {$CellContext`x5$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{460., {189.6875, 195.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.868170558415954*^9, 3.86817058046315*^9}, {
   3.8681713548473263`*^9, 3.868171359083845*^9}, 3.868172466244052*^9, 
   3.868172529044649*^9, 3.868172561398308*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"018fcc4a-9d86-4bdb-bc9a-1839752b3109"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HardMinAll", "[", "]"}], ":=", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Min\>\"", "->", 
       RowBox[{"AggregationLayer", "[", "Min", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Mean\>\"", "->", 
       RowBox[{"AggregationLayer", "[", "Mean", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Filter\>\"", "->", 
       RowBox[{"FunctionLayer", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#Min", ">", 
            RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"#Min", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#Min", "-", 
                 RowBox[{"1", "/", "2"}]}], ")"}], "#Mean"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "#Min"}], ")"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"#Min", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1", "/", "2"}], "-", "#Min"}], ")"}], "#Mean"}]}]}], 
          "\[IndentingNewLine]", "]"}], "&"}], "\[IndentingNewLine]", 
        "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Min\>\"", "->", 
       RowBox[{"NetPort", "[", 
        RowBox[{"\"\<Filter\>\"", ",", "\"\<Min\>\""}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Mean\>\"", "->", 
       RowBox[{"NetPort", "[", 
        RowBox[{"\"\<Filter\>\"", ",", "\"\<Mean\>\""}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 CellChangeTimes->{{3.868160350659812*^9, 3.868160514365514*^9}, {
  3.868160549884338*^9, 3.868160584668363*^9}, {3.8681606194066067`*^9, 
  3.868161077461689*^9}, {3.86816112103161*^9, 3.868161169341282*^9}, {
  3.868161223207426*^9, 3.868161253273538*^9}, {3.868161301999243*^9, 
  3.868161340572719*^9}, {3.868161407398546*^9, 3.868161465683693*^9}, {
  3.8681615376544724`*^9, 3.8681615779637938`*^9}, {3.868161619847168*^9, 
  3.8681616467067223`*^9}, {3.868161823417741*^9, 3.868161825186036*^9}, {
  3.86816188511351*^9, 3.868161886857553*^9}, {3.868171516155754*^9, 
  3.868171579175879*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"905806b8-a280-46ce-8be0-b532f67a66fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hma", "=", 
  RowBox[{"HardMinAll", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.868160421555121*^9, 3.8681604234403353`*^9}, {
  3.868161079221603*^9, 3.868161089739822*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"a345db9d-3014-4475-870f-50bf85457e2b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]rank\[VeryThinSpace]\[GreaterEqual]\
\[VeryThinSpace]2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"vector\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Mean\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -13.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Min\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -13.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Filter\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -15.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"\[DottedSquare]\"", 
                    "\"\[DottedSquare]\"", "\"\[Ellipsis]\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"\[DottedSquare]\"", 
                    "\"\[DottedSquare]\"", "\"\[Ellipsis]\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-2.4499999852628056`, 
                    0.5500000656474976}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"\[DottedSquare]\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"\[DottedSquare]\"", TraditionalForm], 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318317}, {-1.4499999879422958`, 
                    0.4500000388526005}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396939, -0.7071068001334007}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]rank\[VeryThinSpace]\[GreaterEqual]\
\[VeryThinSpace]2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]rank\[VeryThinSpace]\[GreaterEqual]\
\[VeryThinSpace]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]rank\[VeryThinSpace]\[GreaterEqual]\
\[VeryThinSpace]2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]rank\[VeryThinSpace]\[GreaterEqual]\
\[VeryThinSpace]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{"\"vector\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"vector", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{"\"vector\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mean\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"vector", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mean"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{"\"vector\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Min\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"vector", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Min"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]rank\[VeryThinSpace]\[GreaterEqual]\
\[VeryThinSpace]2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]rank\[VeryThinSpace]\[GreaterEqual]\
\[VeryThinSpace]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999852628056`, 
                    0.5500000656474976}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]rank\[VeryThinSpace]\[GreaterEqual]\
\[VeryThinSpace]2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", 
                    Style[
                    "(\[VeryThinSpace]rank\[VeryThinSpace]\[GreaterEqual]\
\[VeryThinSpace]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{"\"vector\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"vector", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{"\"vector\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mean\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"vector", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mean"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999879422958`, 
                    0.4500000388526005}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051027, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{"\"vector\""}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Min\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"vector", 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Min"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Mu]\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Mean\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Mean", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Mean", Bold], 
                    HoldForm[
                    AggregationLayer[Mean]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Min\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Min\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Min", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Min", Bold], 
                    HoldForm[
                    AggregationLayer[Min]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Filter\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Filter", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 21, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {222.99999999999994`, 103.50000147371932`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.499998526280663`, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]rank\[VeryThinSpace]\[GreaterEqual]\
\[VeryThinSpace]2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"vector\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Min" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`SizeT, NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT},
                     NeuralNetworks`AtomT]|>|>, 
                    "Mean" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`SizeT, NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, 
                    "Filter" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (If[
                    Slot["Min"] > 1/2, 
                    Slot["Min"] + ((Slot["Min"] - 1/2) Slot["Mean"]) (1 - 
                    Slot["Min"]), Slot["Min"] + (1/2 - Slot["Min"]) 
                    Slot["Mean"]]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    If[# > 0.5, # + (#2 (-0.5 + #)) Subtract[1, #], # + #2 
                    Subtract[0.5, #]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"Min" -> 
                    NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`AtomT], "Mean" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|
                    "Min" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`AtomT], "Mean" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT},
                     NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`SizeT, NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`AtomT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Mean", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Filter", "Inputs", "Min"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Filter", "Inputs", "Mean"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mean", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Filter", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Mean"], 
                    NeuralNetworks`NetPath["Nodes", "Min"], 
                    NeuralNetworks`NetPath["Nodes", "Filter"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Mean"], 
                    NeuralNetworks`NetPath["Nodes", "Min"], 
                    NeuralNetworks`NetPath["Nodes", "Filter"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.868160426072698*^9, 3.8681604894481688`*^9}, {
   3.868160545963567*^9, 3.8681605858608913`*^9}, 3.868160653270183*^9, 
   3.868160714415896*^9, {3.868160777110875*^9, 3.86816079055435*^9}, 
   3.868160835707715*^9, {3.868160867262807*^9, 3.868160955556527*^9}, {
   3.868161028146681*^9, 3.8681610902848167`*^9}, {3.868161123226056*^9, 
   3.868161170515407*^9}, {3.868161226114049*^9, 3.868161254324085*^9}, {
   3.868161310310864*^9, 3.8681613423602037`*^9}, {3.8681614002250633`*^9, 
   3.86816142079709*^9}, {3.86816145215098*^9, 3.868161466923421*^9}, 
   3.86816157961677*^9, 3.8681715806745462`*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"a8158411-f538-436a-991f-713fb053b462"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hma", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.6", ",", "0.8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.9", ",", "0.9", ",", "0.52"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.01", ",", "0.45"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.01", ",", "0.55"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.55", ",", "0.57", ",", "0.9"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8681610919053173`*^9, 3.8681611144041157`*^9}, {
  3.868161513759027*^9, 3.868161515594305*^9}, {3.8681716497791433`*^9, 
  3.868171655202199*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"2656977b-8fd8-427d-9169-329ea368bb8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.30000001192092896`", ",", "0.5274239778518677`", ",", 
   "0.10146666318178177`", ",", "0.11780000478029251`", ",", 
   "0.5651500225067139`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8681611154882097`*^9, 3.8681611458158283`*^9}, 
   3.868161177206717*^9, {3.8681612450504007`*^9, 3.868161254880396*^9}, {
   3.868161319006899*^9, 3.86816134316323*^9}, {3.8681614027761917`*^9, 
   3.86816142168046*^9}, {3.8681614533638*^9, 3.868161467816663*^9}, 
   3.868161516046283*^9, 3.868171622249213*^9, 3.8681716568647013`*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"2da9f213-964d-4af2-8a64-ca7807c2482b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counting", "Section",
 CellChangeTimes->{{3.867832936078092*^9, 
  3.867832936917717*^9}},ExpressionUUID->"49d7fd52-7d0e-4eba-9a43-\
3a6532a9b58f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Experimental", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"net", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"32", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Layer1\>\"", "->", 
          RowBox[{
           RowBox[{"HardNeuralNAND", "[", 
            RowBox[{"inputSize", ",", "600"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Layer2\>\"", "->", 
          RowBox[{
           RowBox[{"HardNeuralNAND", "[", 
            RowBox[{"600", ",", "classificationLayerSize"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<ToMatrix\>\"", "->", 
          RowBox[{"ReshapeLayer", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "classificationLayerSize"}], "}"}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Require\>\"", "->", 
          RowBox[{
           RowBox[{"Require", "[", 
            RowBox[{
             RowBox[{"HardNeuralLTEK", "[", 
              RowBox[{"1", ",", "classificationLayerSize", ",", "32"}], "]"}],
              "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<ToVector\>\"", "->", 
          RowBox[{"ReshapeLayer", "[", 
           RowBox[{"{", "classificationLayerSize", "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ClassPredictions\>\"", "->", 
          RowBox[{
           RowBox[{"HardNeuralPortLayer", "[", 
            RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
        "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Layer1\>\"", "->", "\"\<Layer2\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Layer2\>\"", "->", "\"\<ToMatrix\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ToMatrix\>\"", "->", "\"\<Require\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Require\>\"", "->", "\"\<ToVector\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ToVector\>\"", "->", "\"\<ClassPredictions\>\""}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.867668231870791*^9, 3.867668235477289*^9}, {
   3.867668376339018*^9, 3.867668395784988*^9}, {3.867669799325087*^9, 
   3.867669809905347*^9}, {3.8676698456204653`*^9, 3.867669869738494*^9}, {
   3.8676699106411133`*^9, 3.8676699115453577`*^9}, {3.867669948359013*^9, 
   3.867670038801297*^9}, {3.86767030213902*^9, 3.867670318841384*^9}, {
   3.867670454382246*^9, 3.867670454482563*^9}, {3.86773420314202*^9, 
   3.867734379574403*^9}, {3.8677344216150846`*^9, 3.867734490143653*^9}, {
   3.867734621874201*^9, 3.867734623184408*^9}, {3.867734693122128*^9, 
   3.867734695505403*^9}, {3.867734747689705*^9, 3.867734756655624*^9}, {
   3.867734790199747*^9, 3.867734987499298*^9}, {3.8677350208744164`*^9, 
   3.867735125633463*^9}, {3.8677351638336763`*^9, 3.867735204009555*^9}, {
   3.867735317610345*^9, 3.8677353254980707`*^9}, {3.867735393290935*^9, 
   3.867735395305931*^9}, {3.8677354322513533`*^9, 3.867735440153603*^9}, {
   3.8677354886910477`*^9, 3.8677354936178827`*^9}, {3.867735591979089*^9, 
   3.867735601154071*^9}, {3.8677356862821093`*^9, 3.8677356918016987`*^9}, {
   3.8677357634512177`*^9, 3.867735791576468*^9}, {3.867735822699938*^9, 
   3.8677358465307007`*^9}, {3.867736920421318*^9, 3.8677369326207657`*^9}, {
   3.867736973742214*^9, 3.867737045436118*^9}, {3.8677371125088177`*^9, 
   3.867737122764319*^9}, {3.867737176710585*^9, 3.867737247838262*^9}, {
   3.8677378255448503`*^9, 3.867737827355835*^9}, {3.867737907966132*^9, 
   3.867737927804604*^9}, {3.867738001497107*^9, 3.867738007068056*^9}, {
   3.867738831068059*^9, 3.8677388441007833`*^9}, {3.867751900566104*^9, 
   3.867751950846384*^9}, {3.867752035360849*^9, 3.8677520509677753`*^9}, 
   3.8677521643541937`*^9, {3.867752700279015*^9, 3.86775272021528*^9}, {
   3.867752776206182*^9, 3.867752776508008*^9}, {3.867753149109016*^9, 
   3.867753149371195*^9}, {3.8677539432696457`*^9, 3.86775395329886*^9}, {
   3.867754162947703*^9, 3.867754173784737*^9}, {3.867812347833035*^9, 
   3.8678123928175793`*^9}, {3.8678124502232027`*^9, 3.867812460277479*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"373847f0-5ceb-4aea-9bd8-2b9bd00ed101"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 782.25},
WindowMargins->{{1440, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6b749efe-4de6-4ef5-81a5-e56ac96807ba"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 155, 3, 98, "Title",ExpressionUUID->"e16c6739-4a62-4e56-b75b-c3030d8dbab8"],
Cell[738, 27, 532, 12, 29, "Input",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],
Cell[CellGroupData[{
Cell[1295, 43, 202, 3, 29, "Input",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],
Cell[1500, 48, 22385, 513, 269, "Output",ExpressionUUID->"52548520-b90c-4bc8-ac2f-aadbf0328f49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23922, 566, 207, 4, 69, "Chapter",ExpressionUUID->"c980f6be-656d-464c-97de-7bbd91e03ade"],
Cell[24132, 572, 2717, 72, 187, "Input",ExpressionUUID->"a640c9f1-9738-4c46-b19d-979750434b3f"],
Cell[CellGroupData[{
Cell[26874, 648, 537, 13, 29, "Input",ExpressionUUID->"f98077b4-8d7e-401d-8481-6508057768cf"],
Cell[27414, 663, 193, 3, 33, "Output",ExpressionUUID->"e4ae1fb4-c0bc-4bf3-89db-46ae92637e0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27644, 671, 493, 12, 29, "Input",ExpressionUUID->"d9b20918-29d1-46bd-b70f-acfd27b2c0a3"],
Cell[28140, 685, 221, 4, 33, "Output",ExpressionUUID->"37311f9f-d207-4160-970d-ddd98433cd87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28398, 694, 489, 13, 29, "Input",ExpressionUUID->"cf906399-5828-4b87-80e7-ddc37d71aa2a"],
Cell[28890, 709, 77, 0, 34, "Output",ExpressionUUID->"a059d7eb-fb26-44d7-914e-ed15b2f67445"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[29016, 715, 156, 3, 58, "Chapter",ExpressionUUID->"e172cf77-104a-417b-9e8b-0895cfdd6efc"],
Cell[CellGroupData[{
Cell[29197, 722, 167, 3, 67, "Section",ExpressionUUID->"ea4901f7-e0c3-4d87-b293-6cf447e04ea7"],
Cell[CellGroupData[{
Cell[29389, 729, 13448, 296, 162, "Input",ExpressionUUID->"a1d35da7-df69-4f5a-aded-2375da917235"],
Cell[42840, 1027, 131, 3, 26, "Echo",ExpressionUUID->"c5a032b3-c31d-4116-ae58-de03d5f9c5af"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[43020, 1036, 213, 4, 53, "Section",ExpressionUUID->"741eda3f-af0a-4750-965a-e5d5e10c6c4b"],
Cell[CellGroupData[{
Cell[43258, 1044, 254, 4, 54, "Subsection",ExpressionUUID->"78cdb806-63d5-4627-b46f-81c4507b63c2"],
Cell[43515, 1050, 331, 8, 29, "Input",ExpressionUUID->"58a7a509-6e27-4603-86a4-437a1775943b"],
Cell[43849, 1060, 5831, 90, 154, "Input",ExpressionUUID->"9f7ed563-e3db-4f0c-b6ae-311c23f293e5"],
Cell[49683, 1152, 2958, 52, 154, "Input",ExpressionUUID->"278acab4-3241-466c-905c-bc0ec791ddf1"],
Cell[CellGroupData[{
Cell[52666, 1208, 13455, 188, 32, "Input",ExpressionUUID->"e3c08978-37d7-4772-8ade-495439d8bdfc"],
Cell[66124, 1398, 186219, 3462, 68, "Output",ExpressionUUID->"c7b66bac-c973-44c9-b769-2b8001d2974d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[252392, 4866, 302, 5, 54, "Subsection",ExpressionUUID->"f41264f3-0416-47d7-bf15-5c0bdda1b4b1"],
Cell[252697, 4873, 16419, 233, 133, "Input",ExpressionUUID->"7672c6d3-df1d-405b-9e2a-90aa6887df6d"],
Cell[CellGroupData[{
Cell[269141, 5110, 446, 9, 29, "Input",ExpressionUUID->"9dfbfa0c-b8e2-42c4-ae5a-99e0b63edb66"],
Cell[269590, 5121, 68328, 1276, 68, "Output",ExpressionUUID->"48f037f9-1952-4722-b51d-7a18384547a9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[337967, 6403, 360, 6, 54, "Subsection",ExpressionUUID->"ef5026cf-d3fa-473c-a6d2-fd3ceabc2c77"],
Cell[CellGroupData[{
Cell[338352, 6413, 9882, 233, 99, "Input",ExpressionUUID->"83a191b0-e40c-4fb5-b1f9-ccd397e52042"],
Cell[348237, 6648, 1818, 39, 54, "Output",ExpressionUUID->"da172786-3cbb-4677-95d1-16973db76d69"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[350104, 6693, 363, 6, 54, "Subsection",ExpressionUUID->"aedaa5e1-1481-4153-8a9a-7340dfa910d6"],
Cell[CellGroupData[{
Cell[350492, 6703, 9019, 215, 78, "Input",ExpressionUUID->"75f9651e-a0eb-4d63-a6ab-7f292ab49187"],
Cell[359514, 6920, 1179, 30, 77, "Output",ExpressionUUID->"d09559b2-1c12-4f82-80a6-61b87b71a7f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360730, 6955, 369, 5, 29, "Input",ExpressionUUID->"653d89c7-18c0-4eb6-8f2f-18461069c675"],
Cell[361102, 6962, 710, 15, 80, "Output",ExpressionUUID->"2cd4dd4f-78a5-48b6-b0a3-7ab19a720a27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361849, 6982, 409, 11, 29, "Input",ExpressionUUID->"19fb0538-abb5-447b-a710-5d81fa013a2c"],
Cell[362261, 6995, 1546, 45, 55, "Output",ExpressionUUID->"198e0bd3-cf63-4b6a-9d5b-4c375b36f7c6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[363880, 7048, 207, 4, 69, "Chapter",ExpressionUUID->"ab35440a-cabc-4736-a5ac-e07454ebd2a0"],
Cell[CellGroupData[{
Cell[364112, 7056, 167, 3, 67, "Section",ExpressionUUID->"7a765571-11e0-47e7-bd2b-e5df28d2018f"],
Cell[364282, 7061, 2637, 64, 113, "Input",ExpressionUUID->"32fda3b9-b853-499b-9d93-f6cc5b2d03d6"],
Cell[CellGroupData[{
Cell[366944, 7129, 3335, 65, 113, "Input",ExpressionUUID->"e694fd5c-31a2-4c80-9a3a-3cbb8af0f0d2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[370282, 7196, 737, 16, 29, "Input",ExpressionUUID->"ec0b1266-533d-40d4-a949-ccce78250c06",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[371022, 7214, 9732, 202, 244, "Output",ExpressionUUID->"95431d6d-fdc1-487a-8977-34eb1054aa74",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[380769, 7419, 8658, 205, 37, "Input",ExpressionUUID->"5f23d7f5-27d3-4f48-9a93-1389f19dc351"]
}, Closed]],
Cell[CellGroupData[{
Cell[389464, 7629, 459, 7, 53, "Section",ExpressionUUID->"fc68a4bd-9bf9-485f-9eed-cf7b8ff25567"],
Cell[389926, 7638, 622, 16, 29, "Input",ExpressionUUID->"afc9d31b-db6d-45ca-8b6b-e25b97a5ac3c"],
Cell[CellGroupData[{
Cell[390573, 7658, 404, 6, 54, "Subsection",ExpressionUUID->"9502650c-75ff-4479-bca2-f7b8b0c4641d"],
Cell[390980, 7666, 1555, 33, 174, "Input",ExpressionUUID->"5fefb9b9-6e54-460e-b544-a43d033404b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392572, 7704, 450, 7, 54, "Subsection",ExpressionUUID->"d41cd2db-8088-4737-b918-a082c6448deb"],
Cell[393025, 7713, 16339, 231, 113, "Input",ExpressionUUID->"5e8aefb1-dfc7-4620-8212-9b7f8316e5ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409401, 7949, 453, 7, 54, "Subsection",ExpressionUUID->"7822fb59-1347-4e85-b721-29a9f368ef8e"],
Cell[CellGroupData[{
Cell[409879, 7960, 400, 7, 29, "Input",ExpressionUUID->"e96a481e-3ba1-4201-9c24-39f96d06cf2b"],
Cell[410282, 7969, 47501, 1080, 526, "Output",ExpressionUUID->"e5de8c20-5ac5-47e0-aafd-32dd27bb98dc"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[457844, 9056, 408, 6, 53, "Section",ExpressionUUID->"5330bb32-e656-4b8b-bb36-16ab02f0840f"],
Cell[CellGroupData[{
Cell[458277, 9066, 404, 6, 54, "Subsection",ExpressionUUID->"9ccf4bd6-05a1-49f1-915f-95679eedaa4f"],
Cell[458684, 9074, 382, 9, 29, "Input",ExpressionUUID->"ce6f0f7f-95ec-4012-ad4e-67899225afe1"],
Cell[459069, 9085, 7944, 121, 133, "Input",ExpressionUUID->"feba2f53-f4f5-43e6-a86d-fb7cc5e96658"],
Cell[467016, 9208, 4637, 72, 195, "Input",ExpressionUUID->"a805bd2a-cef0-4df4-b838-7efd7718ed29"],
Cell[471656, 9282, 17562, 245, 32, "Input",ExpressionUUID->"ff705697-08c0-41db-8a85-131ecdba22d6"],
Cell[CellGroupData[{
Cell[489243, 9531, 330, 4, 29, "Input",ExpressionUUID->"1b570bfa-2a4d-48ef-b659-d88693679ac4"],
Cell[489576, 9537, 157682, 3001, 325, "Output",ExpressionUUID->"512b66dd-2edc-451f-97d0-3a8f771dbb7b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[647307, 12544, 501, 8, 54, "Subsection",ExpressionUUID->"22d0189b-d6a7-44ad-b35a-70f7e8d0dd81"],
Cell[647811, 12554, 17883, 252, 113, "Input",ExpressionUUID->"fbdac8c7-4549-4743-864d-e467d909f319"],
Cell[CellGroupData[{
Cell[665719, 12810, 496, 9, 29, "Input",ExpressionUUID->"c3a89cf2-7844-4806-bca2-4513232e25d6"],
Cell[666218, 12821, 41054, 756, 68, "Output",ExpressionUUID->"eeedc82b-d0c7-4e1c-b0f0-a8cb4877b94a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[707321, 13583, 409, 6, 54, "Subsection",ExpressionUUID->"e2a69d6c-fddf-4ce0-9a60-6b136e91fb12"],
Cell[707733, 13591, 582, 12, 29, "Input",ExpressionUUID->"61cf3e56-b150-406f-a005-b09cf3a4f4b6"],
Cell[CellGroupData[{
Cell[708340, 13607, 10323, 231, 78, "Input",ExpressionUUID->"a637f3cb-d7f7-4492-ad2f-108fbd4b3b99"],
Cell[718666, 13840, 4234, 97, 79, "Output",ExpressionUUID->"c5457a0a-43d6-4ce7-ba40-2868d0fbf6a1"]
}, Open  ]],
Cell[722915, 13940, 560, 15, 29, "Input",ExpressionUUID->"fd20a90c-0e3a-42a1-ac7f-bc712b1b2778"],
Cell[CellGroupData[{
Cell[723500, 13959, 403, 8, 29, "Input",ExpressionUUID->"0bd26ae7-e31b-4a68-b76a-1002446f1f03"],
Cell[723906, 13969, 16732, 467, 226, "Output",ExpressionUUID->"9006c2b6-39da-423a-bd76-90c851f9fa93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[740675, 14441, 500, 9, 29, "Input",ExpressionUUID->"4836d32b-7df4-4c05-858e-1e553b9f2099"],
Cell[741178, 14452, 18634, 519, 235, "Output",ExpressionUUID->"a999c015-da09-4c19-9e15-306f1611cd56"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[759861, 14977, 262, 4, 54, "Subsection",ExpressionUUID->"76d42d52-0573-4522-b5b7-498e3dde144e"],
Cell[760126, 14983, 356, 8, 29, "Input",ExpressionUUID->"fe80e3bc-7068-4221-b26f-10b1a0432998"],
Cell[CellGroupData[{
Cell[760507, 14995, 9030, 213, 58, "Input",ExpressionUUID->"4ca549a6-f4a8-48b8-bd04-5ba2c91f7834"],
Cell[769540, 15210, 2187, 62, 79, "Output",ExpressionUUID->"11820a5b-df23-4e21-a143-7e0ec361375c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[771764, 15277, 369, 5, 29, "Input",ExpressionUUID->"d5dbb3ee-e45f-4e95-8066-408558b38cda"],
Cell[772136, 15284, 852, 17, 80, "Output",ExpressionUUID->"ce4b0e3f-c031-47fc-baf3-1db147f538d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[773025, 15306, 719, 16, 29, "Input",ExpressionUUID->"077f67d6-f27e-43d9-828d-e19736cc28aa"],
Cell[773747, 15324, 35802, 724, 1005, "Output",ExpressionUUID->"20634c40-5b16-4a94-a7cf-9a0f3c60137d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[809622, 16056, 201, 4, 58, "Chapter",ExpressionUUID->"c33fd357-ab86-4dac-a5dc-fb8a483872d5"],
Cell[809826, 16062, 407, 9, 29, "Input",ExpressionUUID->"de7ef9f2-bf67-4869-9b14-c25b89d18d50"],
Cell[CellGroupData[{
Cell[810258, 16075, 332, 8, 29, "Input",ExpressionUUID->"6b7168ce-8b76-4c08-965c-d335f1581d98"],
Cell[810593, 16085, 185000, 3852, 68, "Output",ExpressionUUID->"0662a7dd-b988-4382-9716-22dd36cbcb88"]
}, Open  ]],
Cell[995608, 19940, 2120, 50, 143, "Input",ExpressionUUID->"be27fba8-cb1d-46fc-9b9f-3c287c572eda"],
Cell[CellGroupData[{
Cell[997753, 19994, 1926, 51, 154, "Input",ExpressionUUID->"8e1ac32c-6500-422a-87dc-aa7526afb847"],
Cell[999682, 20047, 2431, 48, 404, "Output",ExpressionUUID->"018fcc4a-9d86-4bdb-bc9a-1839752b3109"]
}, Open  ]],
Cell[1002128, 20098, 2536, 59, 353, "Input",ExpressionUUID->"905806b8-a280-46ce-8be0-b532f67a66fe"],
Cell[CellGroupData[{
Cell[1004689, 20161, 283, 6, 29, "Input",ExpressionUUID->"a345db9d-3014-4475-870f-50bf85457e2b"],
Cell[1004975, 20169, 102952, 2121, 495, "Output",ExpressionUUID->"a8158411-f538-436a-991f-713fb053b462"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1107964, 22295, 731, 19, 29, "Input",ExpressionUUID->"2656977b-8fd8-427d-9169-329ea368bb8e"],
Cell[1108698, 22316, 650, 12, 56, "Output",ExpressionUUID->"2da9f213-964d-4af2-8a64-ca7807c2482b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1109385, 22333, 153, 3, 67, "Section",ExpressionUUID->"49d7fd52-7d0e-4eba-9a43-3a6532a9b58f"],
Cell[1109541, 22338, 4894, 89, 411, "Input",ExpressionUUID->"373847f0-5ceb-4aea-9bd8-2b9bd00ed101"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

