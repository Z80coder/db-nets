(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
<<<<<<< HEAD
NotebookDataLength[    452625,       9198]
NotebookOptionsPosition[    437500,       8923]
NotebookOutlinePosition[    437938,       8940]
CellTagsIndexPosition[    437895,       8937]
=======
NotebookDataLength[   1370850,      26732]
NotebookOptionsPosition[   1355395,      26457]
NotebookOutlinePosition[   1355833,      26474]
CellTagsIndexPosition[   1355790,      26471]
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Neural Logic", "Title",
 CellChangeTimes->{{3.864793590384657*^9, 
  3.864793591864854*^9}},ExpressionUUID->"e16c6739-4a62-4e56-b75b-\
c3030d8dbab8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"\"\<neural-logic.m\>\"", ",", 
    RowBox[{"Path", "->", 
     RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.864789316910233*^9, 3.864789318413851*^9}, 
   3.8647909759269857`*^9, 3.864791161343305*^9, {3.865060533686211*^9, 
   3.865060534575768*^9}, {3.865654305983205*^9, 3.8656543071935663`*^9}, {
   3.866956080731056*^9, 3.86695608434475*^9}, {3.8669767464388313`*^9, 
   3.866976747693492*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"31a3d5b7-a862-4434-bcdf-74b6c5931123"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "neurallogic`*"}]], "Input",
 CellChangeTimes->{{3.864791111748754*^9, 3.8647911154679937`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["ExtractWeights", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "ExtractWeights", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardeningLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardeningLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralCount", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNeuralCount", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNeuralNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardWeightSize", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardWeightSize", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "NeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "SoftOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralExactlyK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNeuralExactlyK", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBalanced", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "InitializeBalanced", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "NeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftWeightSize", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "SoftWeightSize", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClassificationLoss", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardClassificationLoss", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralLTEK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNeuralLTEK", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralPortLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNeuralPortLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBiasToOne", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "InitializeBiasToOne", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Require", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "Require", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SpaceSaving", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "SpaceSaving", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNetFunction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNeuralMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBiasToZero", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "InitializeBiasToZero", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "SoftAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["HardDropoutLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardDropoutLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNeuralNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeToConstant", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "InitializeToConstant", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Soften", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "Soften", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["Harden", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "Harden", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralChain", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNeuralChain", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardNeuralNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "HardOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LogisticClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "LogisticClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-59f1c9cb-6266-45d2-8ecc-38329146c7dd", {
                   "SoftNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.1357142857142857]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVz1tM0mEABXA0NWqVxZoVi5xmqEFOrFkPtYZ2oZapSMxZDw2trbKLBYaS
JFi2Lq7BnKXhRrYyMy+II6vJ3Eo3hwiUScTK8rIp/dtqgEqQdr6Hs9/LeTgn
TnJReCqMRqPlIiGhapnKQvHlnFfRxG/6egHRc3xvCTGxt1FG/J1dpyGOV85a
iTcDaeFqWPvElU6c2fUoh0hvrzAQUxjz0ir4467NooGCW9ecxK1fojZpYR/j
BLMWhtS6jBdw4AyLtwhTV3++SuyPzfARA/qPdbQhih/xQaENg1EHtt1YAqVH
1tYQZ5O4jAgoMR9qpsN6tX36Oen5K8ta4ApDc5oBipNXTRBbmoRzxGJpR18X
1MY+GyNWTw1NG+Gd3pIt3TBT17+8B5rHWhkOmCr/1BGEoY3KdXQrxe8IKhuS
oN/ijzkJbZ25bYWwiO14cx3SX/IUKugrSPk1DI9eqFrvgKbkpzuc8H2p/F/C
MHZ5t+uyYKnSaCuA3Z3uinI44H59bxDeH2GZiOUrdz74Cs+2eVR+yOauEcxB
5aXD0nnYdSU8MgB9PXuCf2Gh5LaEY6P4m61MWQ7MbteUEZ3y9Pw8aB79MyOC
8fJ3g8fgaffYfjGsnIgZJ+ofFnllUBRkKiLtFL/JttQlggnh+cbHML7YwxuB
3B6qcQFumMzazXLgX/V5ExtSPy9HJ8LvrrejmVAdR/MS9y1McQTw3MHJmjyo
X2y1i+F/iSZ0Jg==
  "],
 CellLabel->"Out[2]=",ExpressionUUID->"ae7a56be-102d-44d4-8e90-76189914d075"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utilities", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.8666054582437687`*^9, 
  3.866605459643314*^9}},ExpressionUUID->"c980f6be-656d-464c-97de-\
7bbd91e03ade"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HardPrediction", "[", "m_", "]"}], ":=", 
  RowBox[{"Ordering", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", "=", 
           RowBox[{"#", "[", "True", "]"}]}], "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MissingQ", "[", "t", "]"}], ",", "0", ",", "t"}], "]"}]}],
         "]"}], "&"}], ")"}], "/@", 
     RowBox[{"Counts", "/@", "m"}]}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HardTarget", "[", "t_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Position", "[", 
    RowBox[{"t", ",", "True"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HardResults", "[", "hardPredictionTargetPairs_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"results", ",", "accuracy"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"results", "=", 
      RowBox[{"Reverse", "[", 
       RowBox[{"Sort", "[", 
        RowBox[{"Counts", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"HardPrediction", "[", 
               RowBox[{"First", "[", "#", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"HardTarget", "[", 
               RowBox[{"Last", "[", "#", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], "/@", 
          "hardPredictionTargetPairs"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"accuracy", "=", 
      RowBox[{"KeySelect", "[", 
       RowBox[{"results", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "#", "]"}], "==", 
          RowBox[{"Last", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Accuracy = \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"Total", "[", "accuracy", "]"}], 
           RowBox[{"Length", "[", "hardPredictionTargetPairs", "]"}]], "*", 
          "100.0"}], "]"}], "<>", "\"\<%\>\""}], ",", "results"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.866544665069222*^9, 3.866544678336033*^9}, {
  3.866544717412966*^9, 3.866544787984428*^9}, {3.866544845678438*^9, 
  3.866544933668165*^9}, {3.866545008326929*^9, 3.866545292029965*^9}, {
  3.866545452822143*^9, 3.86654557558593*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a640c9f1-9738-4c46-b19d-979750434b3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HardPrediction", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.867227950964772*^9, 3.867227975562758*^9}, {
  3.867480105517453*^9, 3.867480107005077*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"f98077b4-8d7e-401d-8481-6508057768cf"],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Output",
 CellChangeTimes->{3.867227976087944*^9, 3.867480107441572*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e4ae1fb4-c0bc-4bf3-89db-46ae92637e0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HardPrediction", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8672279902982407`*^9, 3.8672280084975967`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"d9b20918-29d1-46bd-b70f-acfd27b2c0a3"],

Cell[BoxData[
 RowBox[{"{", "2", "}"}]], "Output",
 CellChangeTimes->{{3.867227992235056*^9, 3.867228008956266*^9}, 
   3.867480108955101*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"37311f9f-d207-4160-970d-ddd98433cd87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HardPrediction", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.867228025234231*^9, 3.867228036921878*^9}},
 CellLabel->
  "In[742]:=",ExpressionUUID->"cf906399-5828-4b87-80e7-ddc37d71aa2a"],

Cell[, "Output",ExpressionUUID->"a059d7eb-fb26-44d7-914e-ed15b2f67445"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Learn XOR", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 
  3.864793644095471*^9}},ExpressionUUID->"e172cf77-104a-417b-9e8b-\
0895cfdd6efc"],

Cell[CellGroupData[{

Cell[, "Section",ExpressionUUID->"f58270f5-8f0f-4a1c-9f4c-0201cecf95d8"],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"660052dc-0b70-46b2-924e-427e0bd9ad48"],

Cell[, "Echo",ExpressionUUID->"73d1db25-b91a-40d2-814b-47492f662e24"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[, "Section",ExpressionUUID->"616a2ddc-1005-46d4-8c14-343a4bd3b6ff"],

Cell[CellGroupData[{

Cell[, "Subsection",ExpressionUUID->"efe91894-6841-49a9-ab9d-fd0123575c7c"],

Cell[, "Input",ExpressionUUID->"169ec1a0-b1c3-4506-b125-378dd25952df"],

Cell[, "Input",ExpressionUUID->"b30edffc-67af-4934-8f33-faee89f4353a"],

Cell[, "Input",ExpressionUUID->"319732b5-cfeb-47c1-acda-faab4d2e172a"],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"2799844a-7684-4eb7-88cb-2eb8a3232481"],

Cell[, "Output",ExpressionUUID->"e35a0ca4-67c3-4424-b16f-e689798bb2fd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Subsection",ExpressionUUID->"ad8f60ad-b03c-4795-b29f-2120bea29aab"],

Cell[, "Input",ExpressionUUID->"5ce8ebfa-b558-499e-a012-4d55894a0d04"],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"b170e72e-0c32-4303-b9fb-00b577c2bacc"],

Cell[, "Output",ExpressionUUID->"00573e1c-b4f7-4510-aad5-e9e45ed36756"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Subsection",ExpressionUUID->"b675450a-34c8-422e-899e-e8ac46fc9f8e"],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"17d6edff-ccbc-4c33-ae6f-0bcb97945f31"],

Cell[, "Output",ExpressionUUID->"eaa96b1e-56f2-4d3d-953f-3a263da851c9"],

Cell[, "Output",ExpressionUUID->"503f04a3-57f6-4d3c-a403-85db7d5c0ff2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Subsection",ExpressionUUID->"fe3385d8-1e0f-4395-9df9-244ad13d435b"],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"c923db83-6a37-4dff-b538-3d1c876e6342"],

Cell[, "Output",ExpressionUUID->"65c0e448-2fc9-4e3c-88af-008c93ced575"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"0d96031a-fb3e-4195-9bbc-f328b3fc8e6f"],

Cell[, "Output",ExpressionUUID->"8b4d64a2-335d-456d-a7f6-3942dfa50eca"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Learn MNIST", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.865071137544158*^9, 
  3.865071139735918*^9}},ExpressionUUID->"ab35440a-cabc-4736-a5ac-\
e07454ebd2a0"],

Cell[CellGroupData[{

Cell["Generate training data", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 
  3.864793759486944*^9}},ExpressionUUID->"7a765571-11e0-47e7-bd2b-\
e5df28d2018f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ConvertBinaryStringToList", "[", "s_String", "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"\"\<{\>\"", "<>", 
    RowBox[{"StringInsert", "[", 
     RowBox[{"s", ",", "\"\<,\>\"", ",", 
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"StringLength", "[", "s", "]"}], "]"}], ",", "1"}], "]"}]}], 
     "]"}], "<>", "\"\<}\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConvertBinaryStringToImageData", "[", 
   RowBox[{"s_String", ",", 
    RowBox[{"{", 
     RowBox[{"width_", ",", "height_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{
    RowBox[{"ConvertBinaryStringToList", "[", "s", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"width", ",", "height"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MNISTExample", "[", "example_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Soften", "/@", 
     RowBox[{"ConvertBinaryStringToList", "[", 
      RowBox[{"First", "[", "example", "]"}], "]"}]}], ")"}], "->", 
   RowBox[{"Last", "[", "example", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MNISTImageExample", "[", 
   RowBox[{"example_", ",", "w_", ",", "h_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{"ConvertBinaryStringToImageData", "[", 
      RowBox[{
       RowBox[{"First", "[", "example", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"w", ",", "h"}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}], "->", 
   RowBox[{"Last", "[", "example", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TargetClass", "[", 
   RowBox[{"class_", ",", "numClasses_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "==", 
       RowBox[{
        RowBox[{"ToExpression", "[", "class", "]"}], "+", "1"}]}], ",", "1", 
      ",", "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "numClasses"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.777544428958893*^9, 3.777544449223729*^9}, {
  3.785053289286406*^9, 3.7850533015825367`*^9}, {3.865071356234124*^9, 
  3.865071368364665*^9}, {3.865072537508193*^9, 3.865072583145698*^9}, {
  3.8650727653223124`*^9, 3.865072769389474*^9}, {3.865072855048724*^9, 
  3.865072873389448*^9}, {3.865074216205205*^9, 3.865074217943268*^9}, {
  3.8650742607422447`*^9, 3.865074263919525*^9}, {3.865074303282633*^9, 
  3.865074304334848*^9}, {3.8655763816838627`*^9, 3.86557638296766*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"32fda3b9-b853-499b-9d93-f6cc5b2d03d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"first2Digits", "=", "12665"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"first4Digits", "=", "24754"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"StringSplit", "/@", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NotebookDirectory", "[", "]"}], ",", 
            "\"\<data/mnist_data.csv\>\""}], "}"}], "]"}], "]"}], ",", 
        "first4Digits"}], "]"}]}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numClasses", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Last", "/@", "data"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "#", "]"}], "->", 
       RowBox[{"TargetClass", "[", 
        RowBox[{
         RowBox[{"Last", "[", "#", "]"}], ",", "numClasses"}], "]"}]}], "&"}],
      ",", "data"}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7775425649316273`*^9, 3.7775427188349257`*^9}, 
   3.777542765885343*^9, {3.777542891883361*^9, 3.777542895266905*^9}, {
   3.777548901853368*^9, 3.777548904429871*^9}, 3.777948863055695*^9, {
   3.785053289286778*^9, 3.785053301583352*^9}, {3.8004618114961*^9, 
   3.8004618132862787`*^9}, {3.865071380522399*^9, 3.865071389330105*^9}, {
   3.865071506398736*^9, 3.86507150965482*^9}, {3.865072153294796*^9, 
   3.865072153439651*^9}, {3.8650725203995028`*^9, 3.8650725250999613`*^9}, {
   3.865072598133906*^9, 3.8650726430451927`*^9}, {3.8650730651631327`*^9, 
   3.865073065309772*^9}, {3.8650737788630743`*^9, 3.8650737799185247`*^9}, {
   3.8650741657549047`*^9, 3.865074192750668*^9}, {3.865084557601783*^9, 
   3.865084557727841*^9}, {3.865096614528236*^9, 3.865096614722213*^9}, {
   3.865096960213298*^9, 3.865096961035049*^9}, {3.8654249749431143`*^9, 
   3.865424975283492*^9}, {3.865425652554762*^9, 3.865425654875148*^9}, {
   3.8655942181851254`*^9, 3.865594218683255*^9}, {3.865603687795599*^9, 
   3.8656036911095867`*^9}, {3.865654143595076*^9, 3.865654143741383*^9}, {
   3.8656591261724367`*^9, 3.865659126260923*^9}, {3.86586673745885*^9, 
   3.865866737630937*^9}, {3.865868704726523*^9, 3.865868705092907*^9}, {
   3.865935589729813*^9, 3.8659355902888536`*^9}, {3.8659425359146223`*^9, 
   3.865942536047833*^9}, {3.8660004673198977`*^9, 3.866000467920465*^9}, {
   3.866008550651922*^9, 3.866008550802231*^9}, {3.8662143357376127`*^9, 
   3.8662143358729973`*^9}, {3.866214933669497*^9, 3.866214933766831*^9}, {
   3.866550101779276*^9, 3.866550102242258*^9}, {3.8665523509986134`*^9, 
   3.866552351965906*^9}, {3.866552870119151*^9, 3.866552872331809*^9}, {
   3.866553040839672*^9, 3.8665530794623127`*^9}, {3.866553478936655*^9, 
   3.866553479983959*^9}, {3.8665536320416937`*^9, 3.866553632487995*^9}, {
   3.8666350940570993`*^9, 3.866635094215591*^9}, {3.866635327817191*^9, 
   3.8666353279906816`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e694fd5c-31a2-4c80-9a3a-3cbb8af0f0d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MNISTImageExample", "[", 
    RowBox[{"#", ",", "8", ",", "8"}], "]"}], "&"}], "/@", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"data", ",", "8"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.777543319132126*^9, 3.7775433399263563`*^9}, {
  3.777543441494869*^9, 3.7775434634803457`*^9}, {3.777543498428781*^9, 
  3.777543511470965*^9}, {3.777543585019107*^9, 3.7775436179526777`*^9}, {
  3.77754392590884*^9, 3.777543943146496*^9}, {3.777544227856449*^9, 
  3.777544239080214*^9}, {3.777544492370078*^9, 3.777544497694388*^9}, {
  3.7775489467068253`*^9, 3.777548973388241*^9}, {3.777948786010269*^9, 
  3.777948796326861*^9}, {3.785053289286827*^9, 3.78505330158349*^9}, {
  3.865071727267377*^9, 3.865071727490307*^9}, {3.865072163300022*^9, 
  3.865072163779492*^9}, {3.8650737878134604`*^9, 3.865073795253149*^9}, {
  3.865424992846648*^9, 3.865424993398445*^9}, {3.8654256604637814`*^9, 
  3.865425660711246*^9}, {3.866552364829324*^9, 3.8665523991802883`*^9}, {
  3.866553053990242*^9, 3.866553085837536*^9}, {3.866553486542989*^9, 
  3.866553487982315*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"ec0b1266-533d-40d4-a949-ccce78250c06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 1., 0., 1., 0., 0., 1.}, {1., 1., 0., 0., 
        1., 0., 0., 1.}, {1., 1., 0., 1., 1., 0., 1., 1.}, {1., 0., 1., 1., 
        0., 1., 1., 1.}, {1., 0., 0., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 0., 
        1., 0., 1., 1.}, {1., 1., 0., 1., 1., 0., 1., 1.}, {1., 1., 0., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 0., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 0., 
        1., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 0., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 0., 0., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 1., 1., 0., 0., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 0., 0., 1., 1., 1.}, {1., 1., 0., 0., 
        1., 1., 1., 1.}, {1., 1., 0., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 0., 
        1., 1., 1., 1.}, {1., 1., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 0., 1., 1., 0., 1., 1.}, {1., 1., 0., 1., 
        1., 1., 0., 1.}, {1., 1., 0., 1., 1., 0., 1., 1.}, {1., 1., 0., 1., 
        1., 0., 1., 1.}, {1., 1., 0., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], "}"}]], "Output",\

 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.865071516233152*^9, 3.865071727764624*^9, {3.865072157992421*^9, 
   3.865072164263248*^9}, 3.8650726482204933`*^9, {3.8650728081429157`*^9, 
   3.865072815412401*^9}, {3.8650728584132767`*^9, 3.8650728763860283`*^9}, 
   3.865073067508193*^9, {3.865073789904008*^9, 3.865073795522964*^9}, {
   3.865074175245178*^9, 3.8650742213114853`*^9}, 3.8650742663256474`*^9, 
   3.8650743064252872`*^9, 3.865075757486204*^9, 3.865080599940412*^9, 
   3.865083621171164*^9, {3.865084563801412*^9, 3.865084592428769*^9}, 
   3.8650856590126333`*^9, 3.8650875182866573`*^9, 3.865091000291559*^9, 
   3.865093056070513*^9, 3.865094694162876*^9, 3.865096615969627*^9, 
   3.86509696259997*^9, 3.865139954249607*^9, 3.865141786671627*^9, 
   3.8651521367013702`*^9, 3.865423552909775*^9, {3.865424979404682*^9, 
   3.8654249938473787`*^9}, {3.865425656479721*^9, 3.8654256609377003`*^9}, 
   3.8654809208707523`*^9, 3.865482033395006*^9, 3.8655011685646477`*^9, {
   3.865576369155878*^9, 3.8655763849362507`*^9}, 3.8655934591865187`*^9, 
   3.865594225086277*^9, 3.865603693195478*^9, 3.865654145596838*^9, 
   3.8656591284289303`*^9, 3.865663486762136*^9, {3.865675843854004*^9, 
   3.8656758480254383`*^9}, 3.865680692292922*^9, 3.865785373725032*^9, 
   3.865838237420817*^9, 3.8658644284650097`*^9, 3.865866739205634*^9, 
   3.865868706936183*^9, 3.86593559197605*^9, 3.8659425376483192`*^9, 
   3.866000471570891*^9, 3.8660023671723824`*^9, 3.866008552558271*^9, 
   3.866083736145451*^9, 3.866209093677637*^9, 3.866209596724132*^9, 
   3.866214336990232*^9, 3.866214934859021*^9, 3.866257446329878*^9, 
   3.866258666676694*^9, 3.866285701938628*^9, 3.866300727645417*^9, 
   3.866350581558517*^9, 3.8663715089115543`*^9, 3.8664377020714197`*^9, 
   3.866512491986065*^9, 3.866527204842803*^9, 3.866550105097583*^9, {
   3.866552357229663*^9, 3.866552399674362*^9}, 3.8665527340777407`*^9, 
   3.866552874933894*^9, {3.866553049548827*^9, 3.866553086238255*^9}, {
   3.8665534827091827`*^9, 3.866553488434558*^9}, 3.866553534951789*^9, 
   3.866553633744459*^9, 3.866600459846939*^9, 3.866602523014666*^9, 
   3.866614026941433*^9, 3.8666262010362787`*^9, 3.866635097265691*^9, 
   3.8666353295523643`*^9, 3.86671287784385*^9, 3.8668648189771833`*^9, 
   3.86686557723407*^9, 3.867159524610252*^9, 3.867322063035668*^9, 
   3.8673789484877462`*^9, 3.867470655008312*^9, 3.867479462918984*^9, 
   3.867565378519354*^9, 3.867591080109098*^9, 3.8676400269193563`*^9, 
   3.867653432365038*^9, 3.867669760039253*^9, 3.86773415064207*^9, 
   3.867811745519134*^9, 3.867820389693028*^9, 3.867838001660368*^9, 
   3.867841895496252*^9, 3.8678469507400503`*^9, 3.867847677521079*^9, 
   3.8678503868424177`*^9, 3.8678904849913807`*^9, 3.867890555843211*^9, 
   3.867893435896879*^9, 3.8678959723069487`*^9, 3.867896205315556*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"0cd33ffa-9a13-4832-9e9d-3fe54cf243d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{"MNISTExample", "/@", "data"}], ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.8", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8650715619235697`*^9, 3.865071567650784*^9}, {
  3.8650716393413363`*^9, 3.865071641123829*^9}, {3.865075763152564*^9, 
  3.865075763445953*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"5f23d7f5-27d3-4f48-9a93-1389f19dc351"]
}, Closed]],

Cell[CellGroupData[{

Cell["Standard neural net", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602720354347*^9, 
  3.866602722250537*^9}, {3.866867763326234*^9, 
  3.866867766054191*^9}},ExpressionUUID->"fc68a4bd-9bf9-485f-9eed-\
cf7b8ff25567"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConvertDataToClasses", "[", "data_", "]"}], ":=", 
  RowBox[{"MapAt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "]"}], "]"}], "-", "1"}], "&"}], ",",
     "data", ",", 
    RowBox[{"{", 
     RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8668693365321074`*^9, 3.8668693867886343`*^9}, {
  3.8668694253582287`*^9, 3.8668694957654448`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"afc9d31b-db6d-45ca-8b6b-e25b97a5ac3c"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602724930586*^9, 
  3.866602725762454*^9}},ExpressionUUID->"9502650c-75ff-4479-bca2-\
f7b8b0c4641d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", "numClasses"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NetChain", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
        "300", ",", "LogisticSigmoid", ",", "\[IndentingNewLine]", 
         "classificationLayerSize", ",", "LogisticSigmoid", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<Output\>\"", "->", 
        RowBox[{"NetDecoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Class\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<0\>\"", ",", "\"\<1\>\"", ",", "\"\<2\>\"", ",", 
             "\"\<3\>\""}], "}"}]}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8668677843113413`*^9, 3.866867810879756*^9}, {
  3.866867866054343*^9, 3.866867918755149*^9}, {3.866867993454722*^9, 
  3.86686799965574*^9}, {3.8668681258788567`*^9, 3.86686812619947*^9}, {
  3.8668689240969467`*^9, 3.866868981929222*^9}, {3.866869073179029*^9, 
  3.8668690742445583`*^9}, {3.866869111667173*^9, 3.8668691123403177`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"5fefb9b9-6e54-460e-b544-a43d033404b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866180932479144*^9, 3.866180933335601*^9}, {
  3.866260506971014*^9, 3.8662605102109118`*^9}, {3.866262223194878*^9, 
  3.866262223474766*^9}, {3.8666027494425793`*^9, 
  3.866602750730301*^9}},ExpressionUUID->"d41cd2db-8088-4737-b918-\
a082c6448deb"],

Cell[BoxData[
<<<<<<< HEAD
=======
 RowBox[{"softNet", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<NeuralLogicNet\>\"", "->", "net"}], ",", 
      RowBox[{"\"\<Loss\>\"", "->", 
       RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
     "\[RightAssociation]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<NeuralLogicNet\>\"", "->", "\"\<Loss\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.866020485648757*^9, 3.866020486758964*^9}, {
   3.8660206133758917`*^9, 3.86602061576938*^9}, {3.866021594138579*^9, 
   3.866021622648958*^9}, {3.86602221641733*^9, 3.866022259472351*^9}, {
   3.86602506519114*^9, 3.8660250652828293`*^9}, {3.866027283063545*^9, 
   3.866027305459503*^9}, {3.866027571359556*^9, 3.866027577807056*^9}, {
   3.866028577017147*^9, 3.866028577337102*^9}, {3.866028739939226*^9, 
   3.866028740417481*^9}, {3.866038386270308*^9, 3.866038393509417*^9}, {
   3.866038426793558*^9, 3.866038432549663*^9}, {3.866038541734429*^9, 
   3.866038552581696*^9}, {3.8660399839336977`*^9, 3.8660400476873417`*^9}, {
   3.866040086377454*^9, 3.866040113183221*^9}, {3.8660842202209263`*^9, 
   3.8660842234441147`*^9}, {3.866084729086014*^9, 3.8660847389004602`*^9}, {
   3.866084883181377*^9, 3.866084891034108*^9}, {3.866087944385981*^9, 
   3.866087946377273*^9}, {3.8660898129249763`*^9, 3.866089819116226*^9}, {
   3.8660918927590847`*^9, 3.866091896174137*^9}, {3.866118640249077*^9, 
   3.8661186553525763`*^9}, {3.8661697941751633`*^9, 3.86616982143332*^9}, {
   3.8661700477905827`*^9, 3.866170062053422*^9}, {3.866170430900312*^9, 
   3.866170441150339*^9}, {3.866171085971992*^9, 3.866171092538931*^9}, {
   3.8661713117235622`*^9, 3.866171323794742*^9}, {3.866172075114151*^9, 
   3.866172086385466*^9}, {3.8661726453612757`*^9, 3.8661726565682907`*^9}, {
   3.866172963402001*^9, 3.866172967303824*^9}, {3.866175492855685*^9, 
   3.86617549327916*^9}, {3.8661755786344223`*^9, 3.866175597119087*^9}, {
   3.866176135095639*^9, 3.866176139335493*^9}, {3.866176563216754*^9, 
   3.866176567303925*^9}, {3.866177234452429*^9, 3.866177240033128*^9}, {
   3.866177471626033*^9, 3.866177471849081*^9}, {3.8661781260498943`*^9, 
   3.866178174045168*^9}, {3.866179499382938*^9, 3.866179520538422*^9}, {
   3.866180308892374*^9, 3.866180328231532*^9}, {3.866180620692492*^9, 
   3.866180620811393*^9}, {3.866180727174838*^9, 3.866180728856566*^9}, {
   3.8661809278929253`*^9, 3.866180930764296*^9}, {3.866181239813146*^9, 
   3.866181242692215*^9}, {3.866184773364808*^9, 3.866184773468157*^9}, {
   3.866184929896516*^9, 3.866184931032365*^9}, {3.866185363169696*^9, 
   3.866185363420731*^9}, {3.866185838820908*^9, 3.866185842136413*^9}, {
   3.8661861874248247`*^9, 3.866186188480125*^9}, {3.86618706378515*^9, 
   3.866187066984132*^9}, {3.866209107928833*^9, 3.866209126148491*^9}, {
   3.866209156593391*^9, 3.8662091576123867`*^9}, {3.866209702848567*^9, 
   3.866209710039878*^9}, {3.866209813177039*^9, 3.866209834123746*^9}, {
   3.86621053449234*^9, 3.866210540769287*^9}, {3.866210581043235*^9, 
   3.8662105868693542`*^9}, {3.866210622339385*^9, 3.866210627545692*^9}, {
   3.866210657739574*^9, 3.8662106609137363`*^9}, {3.866210756731784*^9, 
   3.866210768609764*^9}, {3.866211193549685*^9, 3.8662112016988564`*^9}, {
   3.866211352173271*^9, 3.866211355378903*^9}, {3.8662114673335752`*^9, 
   3.866211471635058*^9}, {3.8662116682945633`*^9, 3.86621167888715*^9}, 
   3.8662117763988447`*^9, {3.866211833182128*^9, 3.8662118352832003`*^9}, {
   3.86621193783076*^9, 3.866211943219183*^9}, {3.866214069618958*^9, 
   3.866214085207219*^9}, {3.86621414917101*^9, 3.866214201293022*^9}, {
   3.866214582928615*^9, 3.866214586096209*^9}, {3.8662146462687683`*^9, 
   3.8662146535499763`*^9}, {3.866214940556902*^9, 3.866214945432839*^9}, {
   3.86625367959163*^9, 3.86625368544868*^9}, {3.8662538129344873`*^9, 
   3.866253817785205*^9}, {3.866254549496963*^9, 3.866254555093663*^9}, {
   3.8662546252320347`*^9, 3.866254645248086*^9}, {3.866254759667647*^9, 
   3.8662547607426033`*^9}, {3.866254889744342*^9, 3.8662548909149446`*^9}, {
   3.866254921233653*^9, 3.866254922151456*^9}, {3.866255111823483*^9, 
   3.866255112738577*^9}, 3.8662574558616056`*^9, {3.866257625671372*^9, 
   3.8662576360908813`*^9}, {3.866257668990629*^9, 3.866257673154139*^9}, {
   3.866258160607082*^9, 3.866258163488317*^9}, {3.866258216054822*^9, 
   3.866258216152341*^9}, {3.866258465946023*^9, 3.8662584660890408`*^9}, {
   3.8662587584666643`*^9, 3.866258758714335*^9}, {3.8662591656591253`*^9, 
   3.866259171110828*^9}, {3.8662595439403343`*^9, 3.866259575288472*^9}, {
   3.866260163911601*^9, 3.866260184078418*^9}, {3.86626215222803*^9, 
   3.8662621832516203`*^9}, {3.866263109109415*^9, 3.86626311329671*^9}, {
   3.8662634113702927`*^9, 3.866263445027198*^9}, {3.8662637295611134`*^9, 
   3.8662637341766987`*^9}, {3.8662638454628477`*^9, 3.86626384912811*^9}, {
   3.866264629557499*^9, 3.866264632526574*^9}, {3.866264756302319*^9, 
   3.866264756571878*^9}, {3.86626485570925*^9, 3.8662648604861727`*^9}, {
   3.866264906589533*^9, 3.866264909654014*^9}, {3.8662650173821917`*^9, 
   3.866265024103039*^9}, {3.866267932128647*^9, 3.866267936947571*^9}, {
   3.866272289890004*^9, 3.866272326071719*^9}, 3.866272498086396*^9, {
   3.866272605318948*^9, 3.8662726100556726`*^9}, {3.866272697696899*^9, 
   3.8662727061238422`*^9}, {3.866272804197109*^9, 3.866272807076984*^9}, {
   3.866272890576043*^9, 3.8662729018249826`*^9}, {3.866273061136441*^9, 
   3.866273079881092*^9}, {3.8662739928242073`*^9, 3.866274026656089*^9}, {
   3.866274121640194*^9, 3.86627415310497*^9}, {3.8662742538084593`*^9, 
   3.866274260924819*^9}, {3.86627447707015*^9, 3.866274491178595*^9}, {
   3.866274954835182*^9, 3.866274972215249*^9}, {3.8662751949711027`*^9, 
   3.866275214973873*^9}, {3.866275317133552*^9, 3.866275326157571*^9}, {
   3.866276341927771*^9, 3.866276342361364*^9}, {3.866276444445874*^9, 
   3.866276444758065*^9}, 3.866276574032675*^9, {3.8662774805759163`*^9, 
   3.866277486441833*^9}, {3.866277730486899*^9, 3.866277745606361*^9}, {
   3.866277812901185*^9, 3.8662778241863747`*^9}, {3.866277923447342*^9, 
   3.866277942127078*^9}, {3.866278044847097*^9, 3.866278070211129*^9}, {
   3.866278491367318*^9, 3.866278493966505*^9}, {3.866278580024693*^9, 
   3.8662785830122213`*^9}, {3.866278895153315*^9, 3.866278898232675*^9}, {
   3.866280230366321*^9, 3.86628024016776*^9}, 3.866280351079256*^9, {
   3.866280499461529*^9, 3.8662805080447283`*^9}, {3.866280639515723*^9, 
   3.8662806449211483`*^9}, {3.866280754797947*^9, 3.86628075810079*^9}, {
   3.866280876373425*^9, 3.866280889329287*^9}, 3.866281009490582*^9, {
   3.8662811039106913`*^9, 3.866281107962268*^9}, {3.866281186723476*^9, 
   3.866281191533492*^9}, {3.8662812575988626`*^9, 3.866281268830084*^9}, {
   3.8662813166116953`*^9, 3.866281325765922*^9}, {3.866282044987713*^9, 
   3.866282048676916*^9}, {3.866282148870701*^9, 3.866282152685348*^9}, {
   3.86628313823394*^9, 3.8662831431981792`*^9}, {3.866283203895447*^9, 
   3.8662832148382063`*^9}, {3.8662832951824627`*^9, 
   3.8662833056304398`*^9}, {3.866283478244402*^9, 3.866283487341878*^9}, {
   3.8662841436542883`*^9, 3.86628415025281*^9}, {3.866284940968055*^9, 
   3.866284945101494*^9}, {3.866285029031362*^9, 3.866285034053158*^9}, {
   3.866285238231142*^9, 3.8662852400450497`*^9}, {3.8662854784494677`*^9, 
   3.866285480030343*^9}, {3.8662855684494333`*^9, 3.866285589220209*^9}, {
   3.866285661897065*^9, 3.866285665049341*^9}, {3.866286012525502*^9, 
   3.866286023701212*^9}, {3.866286183975936*^9, 3.866286197019022*^9}, {
   3.866286343624745*^9, 3.8662863761838703`*^9}, {3.86628647476213*^9, 
   3.866286478513227*^9}, {3.866286583730136*^9, 3.866286589629998*^9}, {
   3.8662866316154537`*^9, 3.866286632298744*^9}, {3.866286684611227*^9, 
   3.866286694033737*^9}, {3.866286815683847*^9, 3.866286826001635*^9}, {
   3.8662869515842*^9, 3.866286957090143*^9}, {3.866287432190014*^9, 
   3.866287433732437*^9}, {3.8662875714309177`*^9, 3.866287575508819*^9}, {
   3.866287972431319*^9, 3.866287979390542*^9}, {3.8662881211610413`*^9, 
   3.866288128734665*^9}, {3.866301184432645*^9, 3.866301189032214*^9}, {
   3.866301252666163*^9, 3.866301255952261*^9}, {3.866301376402754*^9, 
   3.866301391652487*^9}, {3.866301466042976*^9, 3.866301469288639*^9}, {
   3.866301630395039*^9, 3.866301653060717*^9}, {3.866301748836125*^9, 
   3.866301755312545*^9}, {3.86630188485115*^9, 3.866301888560711*^9}, {
   3.866302280747377*^9, 3.8663022952887983`*^9}, {3.866302405795878*^9, 
   3.866302419001148*^9}, {3.866302495340143*^9, 3.866302504605687*^9}, {
   3.866350591374894*^9, 3.8663505951022243`*^9}, {3.866351142159863*^9, 
   3.866351179558625*^9}, {3.8663515938249702`*^9, 3.866351597311022*^9}, {
   3.8663516429930353`*^9, 3.866351646919097*^9}, {3.8663540899964314`*^9, 
   3.866354091250739*^9}, 3.866354227060774*^9, {3.866354342347616*^9, 
   3.866354366019519*^9}, {3.866354536533381*^9, 3.866354542835105*^9}, {
   3.866354615988611*^9, 3.866354616498942*^9}, {3.866354747316181*^9, 
   3.866354747986311*^9}, {3.866354820971937*^9, 3.866354830674176*^9}, {
   3.866354985259542*^9, 3.866355003354249*^9}, {3.866355243555305*^9, 
   3.866355280233426*^9}, {3.866355363275181*^9, 3.8663553649290257`*^9}, {
   3.866355508482728*^9, 3.8663555086333237`*^9}, {3.866355904531114*^9, 
   3.8663559105053043`*^9}, {3.866355992402801*^9, 3.866356013229351*^9}, {
   3.866356256538742*^9, 3.866356257041319*^9}, {3.866356472449071*^9, 
   3.866356473280033*^9}, {3.8663565818412313`*^9, 3.866356588441074*^9}, {
   3.866356990748909*^9, 3.866356994266841*^9}, {3.8663571204214773`*^9, 
   3.866357120574224*^9}, {3.8663572027579412`*^9, 3.8663572078996153`*^9}, {
   3.866357620436617*^9, 3.866357634688436*^9}, {3.866357667446629*^9, 
   3.866357681140574*^9}, {3.8663583040873337`*^9, 3.866358308549032*^9}, {
   3.866358702488315*^9, 3.866358710660177*^9}, {3.866358792502235*^9, 
   3.866358792643732*^9}, {3.8663588650968037`*^9, 3.866358870370079*^9}, {
   3.8663590601050797`*^9, 3.866359061311141*^9}, {3.866359100825281*^9, 
   3.8663591032317047`*^9}, {3.866360392667655*^9, 3.866360402393593*^9}, {
   3.866360446451545*^9, 3.866360454122822*^9}, {3.866360518763679*^9, 
   3.866360523813664*^9}, {3.8663605658118258`*^9, 3.866360586933572*^9}, {
   3.866360874844895*^9, 3.866360875286996*^9}, {3.8663609358459*^9, 
   3.866360946523975*^9}, {3.8663629695673723`*^9, 3.8663629719826107`*^9}, {
   3.8663639844553833`*^9, 3.8663639851026163`*^9}, {3.866364664263899*^9, 
   3.866364667805708*^9}, {3.8663647416864157`*^9, 3.866364751498241*^9}, {
   3.8663648173209887`*^9, 3.8663648239090853`*^9}, {3.866364861552744*^9, 
   3.866364866359233*^9}, {3.866364911593669*^9, 3.866364912091476*^9}, {
   3.8663650443606586`*^9, 3.8663650452161922`*^9}, {3.866365512692107*^9, 
   3.866365515810193*^9}, 3.866365740980801*^9, {3.866366124781304*^9, 
   3.866366128103511*^9}, {3.86636615827591*^9, 3.866366161795991*^9}, 
   3.8663675572465467`*^9, {3.8663679823247623`*^9, 3.8663679840072737`*^9}, {
   3.8663685724947968`*^9, 3.866368575523563*^9}, {3.866368617885765*^9, 
   3.866368630439355*^9}, {3.8663688420628223`*^9, 3.866368846739706*^9}, {
   3.866368921365861*^9, 3.866368935403892*^9}, {3.866368992805874*^9, 
   3.8663689939334173`*^9}, {3.8663690430938*^9, 3.8663690474648046`*^9}, {
   3.866369083709838*^9, 3.8663691118719187`*^9}, {3.866369202398569*^9, 
   3.866369214195849*^9}, {3.866369334334588*^9, 3.866369336388123*^9}, {
   3.866369454951181*^9, 3.8663694569323397`*^9}, {3.866369515406219*^9, 
   3.866369518628167*^9}, {3.8663703695855513`*^9, 3.8663703750077*^9}, {
   3.8663705385538683`*^9, 3.866370541048525*^9}, {3.866370586394085*^9, 
   3.866370607876096*^9}, {3.8663707547717*^9, 3.866370757696903*^9}, {
   3.866370926163419*^9, 3.866370929489147*^9}, {3.866371042659484*^9, 
   3.8663710475373373`*^9}, {3.866371595734161*^9, 3.866371595814637*^9}, {
   3.866371630486404*^9, 3.866371630623527*^9}, {3.866371683122916*^9, 
   3.866371701147089*^9}, {3.866371789324903*^9, 3.866371822547234*^9}, {
   3.8663718525974607`*^9, 3.8663718606429367`*^9}, {3.866371974165319*^9, 
   3.866371979075355*^9}, {3.866372122293806*^9, 3.8663721296757917`*^9}, {
   3.866372551518608*^9, 3.866372561132722*^9}, {3.866372627211433*^9, 
   3.866372636080841*^9}, {3.8663728112322397`*^9, 3.866372812994047*^9}, {
   3.866372895895451*^9, 3.866372901477323*^9}, {3.8664377149946833`*^9, 
   3.8664377176580143`*^9}, {3.86643884019552*^9, 3.86643884333634*^9}, {
   3.866438919186672*^9, 3.866438921864346*^9}, {3.8664391767222757`*^9, 
   3.866439182016387*^9}, {3.866439413057221*^9, 3.8664394237656918`*^9}, {
   3.866440165425671*^9, 3.8664401663535337`*^9}, {3.8664414544278717`*^9, 
   3.866441455406114*^9}, {3.8664415241527863`*^9, 3.866441526297073*^9}, {
   3.866441636299324*^9, 3.866441637325185*^9}, {3.8664421743093033`*^9, 
   3.866442174534107*^9}, {3.866444116919817*^9, 3.866444119674713*^9}, {
   3.86644604617083*^9, 3.866446049128669*^9}, {3.866512861360115*^9, 
   3.866512866295472*^9}, {3.866512916479863*^9, 3.866512918447736*^9}, {
   3.866634565957718*^9, 3.866634566999825*^9}, {3.86680026940904*^9, 
   3.866800269792528*^9}, {3.8675831417592773`*^9, 3.867583145913877*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"2799844a-7684-4eb7-88cb-2eb8a3232481"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -15.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"2\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {223.0000014737193, 103.49999999999997`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.5, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Target\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Target\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Target"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Target\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Target"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25},
                     {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {12.75, 
                    17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "NeuralLogicNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"MAJORITY" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{200, 25}]|>,
                     "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {200, 25}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200, 
                    25}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {200, 25}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200, 25},
                     NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200, 
                    25}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Sort" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[Sort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Function", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> Sort, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 200, 
                    "$InputShape" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200, 25},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200, 25},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200, 
                    25}, NeuralNetworks`RealT]|>|>, 
                    "Medians" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 13}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200, 25},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`RealT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {200}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "MAJORITY", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MAJORITY", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"MAJORITY" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{8, 200}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{8, 200}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8, 200}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8, 
                    200}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {8, 200}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8, 
                    200}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`RealT], "Weights" -> 
                    NeuralNetworks`TensorT[{8, 200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8, 
                    200}, NeuralNetworks`RealT]|>|>, 
                    "Sort" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[Sort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Function", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> Sort, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 8, 
                    "$InputShape" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8, 
                    200}, NeuralNetworks`RealT]|>|>, 
                    "Medians" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 101}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "MAJORITY", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MAJORITY", "Outputs", "Output"]}|>, 
                    "3" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{2, 
                    4}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Harden" -> <|"Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 0.9, 0.1]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_304eb102_44db_4557_94b7_5f27d5a30a70", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
f6dRpuvmV2u57dNuQ1dtMz5ftX2nvmr7qztfJ4cZ2kIjDqpOqpMc0621lEyq
RiR2AYnuhsSdA/Wd31e6xQsqrO8IjanzESVPgZLrqQ5eLbRYGim5eD46Pn2E
RiL5GtouoTNIHHR5fDGWOp7keovFLdVyFdNymOsN8OO+RRKTbbZmmu00krUX
i06ZIMHoxyatz0AXbcuE+Ondzxdt57EPllmmGFcT7LOmx2e9KptRoVstvPLZ
zH2STZPXp6lPvWZRF1JzqHHVWqXzhlJcENPEn6+yeqqPrgayL5ZZUia3C1Wn
XkEFNGYx4gMM1jkw/wnQNUPXNSM/X6mdiV9RZQHvzixi6eUwd2ej65rCfVzO
tq1ROjnUXcDx2ZdSl/gicoVe6nlC2c9gHtM+ofKI7F9fvSu1LJ5cYUh9qOy+
A902FWXnsbSpFDKG0XWVB15Ed9G+9ZZJ6AjsQEJE0OjfzWq6eF+6jT68VP8p
oplGbKs3tn1CBwFp+9HOvN+TFaQnG3rz0gfLj+O/ZAb23mqUFTbKy1sd8RMJ
HfanOheGb16i4f4prNYlKP4LDXeHyoGCdM5WwUrSkcO919FpNb+jtmP2Jl9z
xu51X0/PXLWCdCS890Z6w8PR+5CHOhUiubSYZjyB1dp3+advYcjweuIIG76L
eK7tTjfvPAcvOcp4BhRiS3Pg9nDz7fS6kKLlpCeNbTdaV09gNdom1t7VdxKn
y2OXyssXKH85FqUPJIXJy6cK0GG4wI6CxvqFMt4DFQeHm9Dxk9c/oNFzu3gT
0TyxtbbdvBtEKb6bZ0/MHdfFqyWOIyw97bHZpNx1p4H1i4KR+hvpJw7bEDvv
bfkjnQm66NebfZUd8afR79HnDdEwNUDClmMwSvPtLvznh3PNu7p509nKX5UW
bFTYdfPoxEmRDetCgSa2T9vtRgugKXdDvUv0Ai3ix8iq5qQIz8f/YCmFjlVu
aE8UnYCNrV+NGAsCWU9Rird5CJ0x3YMkhs4g/4B+DE/YgI6CvRgtpVS59MMU
mCN2g1z6ZAZiYBJAi0lpMl68jDedTBxUGnBSoPNdS0FLlnbcTOcsR4Xm/HS/
jagwcD3db5MAEDhVcz19fdqWUYxRI2kE+pla4xS2e7mGe/7J+sSuuclTSC5B
B9DO+7zDHS5BR/DSFaDUCae0w+GULCn827Eb62FyaSvaL59/0l88RoFqC7t4
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
vzPhvwxESdZodSL8xv8BmFXiUg==
                    "]]|>, "orcInstance" -> 74060560, "orcModuleId" -> 
                    45486816, "targetMachineId" -> 59467888|>, 
                    140508714280784, 140508714280640, 140508714280720, 
                    140508714274816, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_4685e86c_e4d9_4175_855f_e4d41586bba8", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
okZh4d8BuWu/4w==
                    "]]|>, "orcInstance" -> 45572352, "orcModuleId" -> 
                    59926832, "targetMachineId" -> 74078448|>, 
                    140508714267168, 140508714266768, 140508714266848, 
                    140508714266624, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {2, 4}, 
                    "$Batched" -> False, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "730c8216217acdff", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>|>, 
                    "SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                    "SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                    "Error" -> <|"Type" -> "CrossEntropyLoss", 
                    "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 2, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT], 
                    "Target" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Outputs", "Loss"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Target" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.866604385531515*^9, 3.866604752320993*^9, 3.86660485170772*^9, 
   3.8666049165654373`*^9, 3.8666049650282393`*^9, 3.866605045496359*^9, {
   3.866605087083253*^9, 3.866605103860919*^9}, {3.8666051697048388`*^9, 
   3.866605182334133*^9}, 3.866605324607296*^9, 3.8666053743162518`*^9, 
   3.866613822746578*^9, 3.866613934203129*^9, 3.866625674155504*^9, 
   3.866625715079267*^9, 3.866625752494906*^9, 3.866625887178625*^9, 
   3.8666259363839493`*^9, 3.866626046404351*^9, 3.866626088088612*^9, {
   3.866634558081018*^9, 3.8666345677114687`*^9}, 3.866634708596148*^9, 
   3.866634851921915*^9, 3.8666349107311773`*^9, 3.866800271472727*^9, 
   3.866802647448588*^9, 3.866862630429627*^9, 3.866863023262228*^9, 
   3.866863927813119*^9, 3.867583164957588*^9, 3.867583267374192*^9, 
   3.867583362103986*^9, 3.8675909755646267`*^9, 3.867671173714522*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"e35a0ca4-67c3-4424-b16f-e689798bb2fd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866604099593103*^9, 
  3.866604099793066*^9}},ExpressionUUID->"ad8f60ad-b03c-4795-b29f-\
2120bea29aab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainedNet", ",", "resultsObject"}], "}"}], "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"softNet", ",", "trainData", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TrainedNet\>\"", ",", "\"\<ResultsObject\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"testData", ",", 
          RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "20000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866262230733412*^9, 3.866262232700974*^9}, {
   3.866262747191399*^9, 3.866262755095587*^9}, {3.866263687522623*^9, 
   3.866263691522341*^9}, {3.866272907421722*^9, 3.866272908705574*^9}, {
   3.866274679974001*^9, 3.866274683777981*^9}, {3.866275126894273*^9, 
   3.866275130882132*^9}, {3.866275621030303*^9, 3.86627562449095*^9}, {
   3.866275800963348*^9, 3.866275804851942*^9}, {3.866278286918571*^9, 
   3.866278290408846*^9}, {3.866279939718389*^9, 3.8662799438283052`*^9}, {
   3.8662825835076027`*^9, 3.866282587086446*^9}, {3.8662848978232517`*^9, 
   3.8662849013340178`*^9}, {3.866301199025255*^9, 3.866301208705173*^9}, {
   3.866302091405136*^9, 3.866302093072084*^9}, {3.8663022330606956`*^9, 
   3.8663022743807373`*^9}, {3.866303190918262*^9, 3.8663031961042967`*^9}, {
   3.8663508996403513`*^9, 3.866350903983953*^9}, {3.8663558607588453`*^9, 
   3.866355860917651*^9}, {3.86637013313169*^9, 3.866370138430928*^9}, {
   3.866370237003203*^9, 3.866370239455555*^9}, {3.8663703291644793`*^9, 
   3.866370333111907*^9}, {3.866370363265703*^9, 3.866370363711856*^9}, {
   3.8663720431119947`*^9, 3.866372048852154*^9}, {3.866372163198892*^9, 
   3.8663721862104397`*^9}, 3.8663723957836103`*^9, {3.866372460806899*^9, 
   3.866372466981298*^9}, {3.8663728465397882`*^9, 3.866372846690668*^9}, {
   3.866439863015705*^9, 3.866439889076521*^9}, {3.866444399919945*^9, 
   3.866444403398275*^9}, 3.866445596437694*^9, 3.866445994629862*^9, {
   3.866446077093233*^9, 3.8664460772227592`*^9}, {3.866514058957122*^9, 
   3.866514061965129*^9}, {3.866514093672724*^9, 3.8665140946276417`*^9}, 
   3.866514530731886*^9, {3.866514784096607*^9, 3.866514784235477*^9}, {
   3.8665148543229303`*^9, 3.86651485485518*^9}, {3.866517197949828*^9, 
   3.866517203967832*^9}, 3.866517357579501*^9, 3.8665174374755917`*^9, 
   3.8665175119230967`*^9, {3.866517590284361*^9, 3.866517620168564*^9}, 
   3.8665176619240017`*^9, {3.8665179325026484`*^9, 3.8665179399815683`*^9}, {
   3.866518111910069*^9, 3.866518112233807*^9}, {3.866518521945266*^9, 
   3.866518522115803*^9}, {3.866518571201038*^9, 3.866518588328702*^9}, {
   3.866518646862028*^9, 3.866518650143523*^9}, 3.866518704027602*^9, {
   3.866519202548511*^9, 3.8665192068871107`*^9}, {3.866552934111923*^9, 
   3.866552991359269*^9}, {3.866553502473754*^9, 3.8665535030716467`*^9}, {
   3.866554417382031*^9, 3.866554420050095*^9}, {3.866554652086327*^9, 
   3.8665546522545357`*^9}, 3.866604776742971*^9, {3.86680027773044*^9, 
   3.866800278113852*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"5ce8ebfa-b558-499e-a012-4d55894a0d04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedSoftNet", "=", 
  RowBox[{"NetExtract", "[", 
   RowBox[{"trainedNet", ",", "\"\<NeuralLogicNet\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866262883598037*^9, 3.866262913813736*^9}, {
  3.866800388275832*^9, 3.866800388780817*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"b170e72e-0c32-4303-b9fb-00b577c2bacc"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 25\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "MAJORITY" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{200, 25}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {200, 25}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {200, 25}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT], 
                    "Weights" -> NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Sort" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Map[Sort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Sort, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> 200, "$InputShape" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`RealT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`RealT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Medians" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 13}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`RealT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`RealT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {200}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "MAJORITY", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MAJORITY", "Outputs", "Output"]}|>, 
                    "2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "MAJORITY" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{8, 200}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {8, 200}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {8, 200}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8, 200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT], 
                    "Weights" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Sort" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Map[Sort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Sort, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> 8, "$InputShape" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8, 200}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8, 200}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Medians" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 101}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8, 200}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "MAJORITY", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MAJORITY", "Outputs", "Output"]}|>, 
                    "3" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{2, 4}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 25\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "1", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 200\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "1", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ReshapeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.866604444065995*^9, 3.866604825257682*^9, 3.866604891009988*^9, 
   3.866604946387684*^9, 3.8666050262184153`*^9, 3.8666050785043297`*^9, 
   3.866605125883642*^9, 3.866605305208755*^9, 3.8666053506104107`*^9, 
   3.866605402815572*^9, 3.8666139117587347`*^9, 3.866613968840701*^9, 
   3.866625704725067*^9, 3.866625739869501*^9, 3.866625776351536*^9, 
   3.866625908542205*^9, 3.866625954933941*^9, 3.866626069327134*^9, 
   3.866626118723287*^9, 3.866634633753524*^9, 3.8666348346758213`*^9, 
   3.866634880920323*^9, 3.866635024288516*^9, {3.866800377101527*^9, 
   3.8668003895056067`*^9}, 3.866802672634994*^9, 3.866862759681157*^9, 
   3.866863134091525*^9, 3.866863952315647*^9, 3.867589276039692*^9, 
   3.867671664534728*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"00573e1c-b4f7-4510-aad5-e9e45ed36756"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.866800415776203*^9, 
  3.86680041674398*^9}},ExpressionUUID->"b675450a-34c8-422e-899e-\
e8ac46fc9f8e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"resultsObject", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"softPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainedSoftNet", "[", 
         RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardenedPredictionTargetPairs", "=", 
   RowBox[{"Harden", "[", "softPredictionTargetPairs", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"RandomSample", "[", 
       RowBox[{"hardenedPredictionTargetPairs", ",", "5"}], "]"}], ",", "1"}],
      "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"True", "->", 
     RowBox[{"Style", "[", 
      RowBox[{"True", ",", "Red"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.861598551906061*^9, 3.8615985567851887`*^9}, {
   3.863178625879333*^9, 3.8631786268708572`*^9}, {3.863240306853362*^9, 
   3.863240307588504*^9}, {3.8647943299915457`*^9, 3.864794330447215*^9}, {
   3.864794373237455*^9, 3.864794410229562*^9}, {3.864825813950893*^9, 
   3.8648258236291018`*^9}, {3.86505446234156*^9, 3.865054476285439*^9}, {
   3.86505502598845*^9, 3.865055037244231*^9}, {3.8650600546900873`*^9, 
   3.8650600574960833`*^9}, {3.865421281430146*^9, 3.865421283958905*^9}, {
   3.866604469348693*^9, 3.866604469491571*^9}, {3.866604715196765*^9, 
   3.8666047309003077`*^9}, {3.8668003939552097`*^9, 3.86680039453754*^9}, {
   3.866863741581986*^9, 3.866863750762281*^9}, 3.866865427474077*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"17d6edff-ccbc-4c33-ae6f-0bcb97945f31"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.1544268376491964`"}], ",", 
   RowBox[{"\<\"ErrorRate\"\>", "\[Rule]", "0.0165`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.866604740014987*^9, 3.866604827512426*^9, 3.866604892766753*^9, 
   3.866604948159389*^9, 3.866605027608502*^9, 3.8666050797060127`*^9, 
   3.8666051270238*^9, 3.866605306478503*^9, 3.866605351838655*^9, 
   3.866605404161014*^9, 3.866613913674348*^9, 3.8666139705107*^9, 
   3.8666257065730343`*^9, 3.86662574134376*^9, 3.8666257777013702`*^9, 
   3.866625909825324*^9, 3.866625956361196*^9, 3.866626070645979*^9, 
   3.866626120217812*^9, {3.866634635480035*^9, 3.8666346577282267`*^9}, 
   3.866634835967009*^9, 3.8666348822118883`*^9, 3.866635025677926*^9, 
   3.866800397397952*^9, 3.866802676908917*^9, 3.866862761074505*^9, 
   3.866863136267887*^9, 3.866863751771923*^9, 3.866863953699317*^9, 
   3.867589280643219*^9, 3.867671666206935*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"eaa96b1e-56f2-4d3d-953f-3a263da851c9"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 98.325%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "2008"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "1925"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "61"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "6"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866604740014987*^9, 3.866604827512426*^9, 3.866604892766753*^9, 
   3.866604948159389*^9, 3.866605027608502*^9, 3.8666050797060127`*^9, 
   3.8666051270238*^9, 3.866605306478503*^9, 3.866605351838655*^9, 
   3.866605404161014*^9, 3.866613913674348*^9, 3.8666139705107*^9, 
   3.8666257065730343`*^9, 3.86662574134376*^9, 3.8666257777013702`*^9, 
   3.866625909825324*^9, 3.866625956361196*^9, 3.866626070645979*^9, 
   3.866626120217812*^9, {3.866634635480035*^9, 3.8666346577282267`*^9}, 
   3.866634835967009*^9, 3.8666348822118883`*^9, 3.866635025677926*^9, 
   3.866800397397952*^9, 3.866802676908917*^9, 3.866862761074505*^9, 
   3.866863136267887*^9, 3.866863751771923*^9, 3.866863953699317*^9, 
   3.867589280643219*^9, 3.867671671406417*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"503f04a3-57f6-4d3c-a403-85db7d5c0ff2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.866800415776203*^9, 
  3.8668004242321167`*^9}},ExpressionUUID->"fe3385d8-1e0f-4395-9df9-\
244ad13d435b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedSoftNet"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hnf", "[", 
         RowBox[{"Harden", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.86680194442417*^9, 3.866801959585536*^9}, 
   3.8668020564125566`*^9, 3.8668021880135727`*^9, 3.86680224094079*^9, {
   3.866862414056994*^9, 3.866862435758893*^9}, 3.8668631732132587`*^9, 
   3.866863454099498*^9, {3.866863887767027*^9, 3.866863891596203*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"c923db83-6a37-4dff-b538-3d1c876e6342"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 98.325%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "2008"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "1925"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "61"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "6"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.866863904017839*^9, 3.866863961760541*^9, 
  3.8675892984722157`*^9, 3.86767169281933*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"65c0e448-2fc9-4e3c-88af-008c93ced575"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpaceSaving", "[", "trainedSoftNet", "]"}]], "Input",
 CellChangeTimes->{{3.8668642342489862`*^9, 3.8668642483212557`*^9}, {
  3.866864301980486*^9, 3.866864302505608*^9}, {3.866864406655108*^9, 
  3.86686453684363*^9}, {3.866864775311109*^9, 3.866864778850369*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"0d96031a-fb3e-4195-9bbc-f328b3fc8e6f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Soft net size = 26.4 kilobytes\"\>"},
    {"\<\"Hard net size = 0.825 kilobytes\"\>"},
    {"\<\"Saving factor = 32.\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866864249947411*^9, 3.8668643028534403`*^9, 3.866864414235868*^9, 
   3.866864445660204*^9, {3.866864494244638*^9, 3.866864537301672*^9}, 
   3.866864595971245*^9, 3.866864779447701*^9, 3.867590966091876*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"8b4d64a2-335d-456d-a7f6-3942dfa50eca"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Learn MNIST", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.865071137544158*^9, 
  3.865071139735918*^9}},ExpressionUUID->"ab35440a-cabc-4736-a5ac-\
e07454ebd2a0"],

Cell[CellGroupData[{

Cell["Generate training data", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 
  3.864793759486944*^9}},ExpressionUUID->"7a765571-11e0-47e7-bd2b-\
e5df28d2018f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ConvertBinaryStringToList", "[", "s_String", "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"\"\<{\>\"", "<>", 
    RowBox[{"StringInsert", "[", 
     RowBox[{"s", ",", "\"\<,\>\"", ",", 
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"StringLength", "[", "s", "]"}], "]"}], ",", "1"}], "]"}]}], 
     "]"}], "<>", "\"\<}\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConvertBinaryStringToImageData", "[", 
   RowBox[{"s_String", ",", 
    RowBox[{"{", 
     RowBox[{"width_", ",", "height_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{
    RowBox[{"ConvertBinaryStringToList", "[", "s", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"width", ",", "height"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MNISTExample", "[", "example_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Soften", "/@", 
     RowBox[{"ConvertBinaryStringToList", "[", 
      RowBox[{"First", "[", "example", "]"}], "]"}]}], ")"}], "->", 
   RowBox[{"Last", "[", "example", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MNISTImageExample", "[", 
   RowBox[{"example_", ",", "w_", ",", "h_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{"ConvertBinaryStringToImageData", "[", 
      RowBox[{
       RowBox[{"First", "[", "example", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"w", ",", "h"}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}], "->", 
   RowBox[{"Last", "[", "example", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TargetClass", "[", 
   RowBox[{"class_", ",", "numClasses_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "==", 
       RowBox[{
        RowBox[{"ToExpression", "[", "class", "]"}], "+", "1"}]}], ",", "1", 
      ",", "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "numClasses"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.777544428958893*^9, 3.777544449223729*^9}, {
  3.785053289286406*^9, 3.7850533015825367`*^9}, {3.865071356234124*^9, 
  3.865071368364665*^9}, {3.865072537508193*^9, 3.865072583145698*^9}, {
  3.8650727653223124`*^9, 3.865072769389474*^9}, {3.865072855048724*^9, 
  3.865072873389448*^9}, {3.865074216205205*^9, 3.865074217943268*^9}, {
  3.8650742607422447`*^9, 3.865074263919525*^9}, {3.865074303282633*^9, 
  3.865074304334848*^9}, {3.8655763816838627`*^9, 3.86557638296766*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"32fda3b9-b853-499b-9d93-f6cc5b2d03d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"first2Digits", "=", "12665"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"first4Digits", "=", "24754"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"StringSplit", "/@", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NotebookDirectory", "[", "]"}], ",", 
            "\"\<data/mnist_data.csv\>\""}], "}"}], "]"}], "]"}], ",", 
        "first4Digits"}], "]"}]}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numClasses", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Last", "/@", "data"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "#", "]"}], "->", 
       RowBox[{"TargetClass", "[", 
        RowBox[{
         RowBox[{"Last", "[", "#", "]"}], ",", "numClasses"}], "]"}]}], "&"}],
      ",", "data"}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7775425649316273`*^9, 3.7775427188349257`*^9}, 
   3.777542765885343*^9, {3.777542891883361*^9, 3.777542895266905*^9}, {
   3.777548901853368*^9, 3.777548904429871*^9}, 3.777948863055695*^9, {
   3.785053289286778*^9, 3.785053301583352*^9}, {3.8004618114961*^9, 
   3.8004618132862787`*^9}, {3.865071380522399*^9, 3.865071389330105*^9}, {
   3.865071506398736*^9, 3.86507150965482*^9}, {3.865072153294796*^9, 
   3.865072153439651*^9}, {3.8650725203995028`*^9, 3.8650725250999613`*^9}, {
   3.865072598133906*^9, 3.8650726430451927`*^9}, {3.8650730651631327`*^9, 
   3.865073065309772*^9}, {3.8650737788630743`*^9, 3.8650737799185247`*^9}, {
   3.8650741657549047`*^9, 3.865074192750668*^9}, {3.865084557601783*^9, 
   3.865084557727841*^9}, {3.865096614528236*^9, 3.865096614722213*^9}, {
   3.865096960213298*^9, 3.865096961035049*^9}, {3.8654249749431143`*^9, 
   3.865424975283492*^9}, {3.865425652554762*^9, 3.865425654875148*^9}, {
   3.8655942181851254`*^9, 3.865594218683255*^9}, {3.865603687795599*^9, 
   3.8656036911095867`*^9}, {3.865654143595076*^9, 3.865654143741383*^9}, {
   3.8656591261724367`*^9, 3.865659126260923*^9}, {3.86586673745885*^9, 
   3.865866737630937*^9}, {3.865868704726523*^9, 3.865868705092907*^9}, {
   3.865935589729813*^9, 3.8659355902888536`*^9}, {3.8659425359146223`*^9, 
   3.865942536047833*^9}, {3.8660004673198977`*^9, 3.866000467920465*^9}, {
   3.866008550651922*^9, 3.866008550802231*^9}, {3.8662143357376127`*^9, 
   3.8662143358729973`*^9}, {3.866214933669497*^9, 3.866214933766831*^9}, {
   3.866550101779276*^9, 3.866550102242258*^9}, {3.8665523509986134`*^9, 
   3.866552351965906*^9}, {3.866552870119151*^9, 3.866552872331809*^9}, {
   3.866553040839672*^9, 3.8665530794623127`*^9}, {3.866553478936655*^9, 
   3.866553479983959*^9}, {3.8665536320416937`*^9, 3.866553632487995*^9}, {
   3.8666350940570993`*^9, 3.866635094215591*^9}, {3.866635327817191*^9, 
   3.8666353279906816`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e694fd5c-31a2-4c80-9a3a-3cbb8af0f0d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MNISTImageExample", "[", 
    RowBox[{"#", ",", "8", ",", "8"}], "]"}], "&"}], "/@", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"data", ",", "8"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.777543319132126*^9, 3.7775433399263563`*^9}, {
  3.777543441494869*^9, 3.7775434634803457`*^9}, {3.777543498428781*^9, 
  3.777543511470965*^9}, {3.777543585019107*^9, 3.7775436179526777`*^9}, {
  3.77754392590884*^9, 3.777543943146496*^9}, {3.777544227856449*^9, 
  3.777544239080214*^9}, {3.777544492370078*^9, 3.777544497694388*^9}, {
  3.7775489467068253`*^9, 3.777548973388241*^9}, {3.777948786010269*^9, 
  3.777948796326861*^9}, {3.785053289286827*^9, 3.78505330158349*^9}, {
  3.865071727267377*^9, 3.865071727490307*^9}, {3.865072163300022*^9, 
  3.865072163779492*^9}, {3.8650737878134604`*^9, 3.865073795253149*^9}, {
  3.865424992846648*^9, 3.865424993398445*^9}, {3.8654256604637814`*^9, 
  3.865425660711246*^9}, {3.866552364829324*^9, 3.8665523991802883`*^9}, {
  3.866553053990242*^9, 3.866553085837536*^9}, {3.866553486542989*^9, 
  3.866553487982315*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"ec0b1266-533d-40d4-a949-ccce78250c06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 1., 0., 1., 0., 0., 1.}, {1., 1., 0., 0., 
        1., 0., 0., 1.}, {1., 1., 0., 1., 1., 0., 1., 1.}, {1., 0., 1., 1., 
        0., 1., 1., 1.}, {1., 0., 0., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 0., 
        1., 0., 1., 1.}, {1., 1., 0., 1., 1., 0., 1., 1.}, {1., 1., 0., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 0., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 0., 
        1., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 0., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 0., 0., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 1., 1., 0., 0., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 0., 0., 1., 1., 1.}, {1., 1., 0., 0., 
        1., 1., 1., 1.}, {1., 1., 0., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 0., 
        1., 1., 1., 1.}, {1., 1., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 0., 1., 1., 0., 1., 1.}, {1., 1., 0., 1., 
        1., 1., 0., 1.}, {1., 1., 0., 1., 1., 0., 1., 1.}, {1., 1., 0., 1., 
        1., 0., 1., 1.}, {1., 1., 0., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], "}"}]], "Output",\

 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.865071516233152*^9, 3.865071727764624*^9, {3.865072157992421*^9, 
   3.865072164263248*^9}, 3.8650726482204933`*^9, {3.8650728081429157`*^9, 
   3.865072815412401*^9}, {3.8650728584132767`*^9, 3.8650728763860283`*^9}, 
   3.865073067508193*^9, {3.865073789904008*^9, 3.865073795522964*^9}, {
   3.865074175245178*^9, 3.8650742213114853`*^9}, 3.8650742663256474`*^9, 
   3.8650743064252872`*^9, 3.865075757486204*^9, 3.865080599940412*^9, 
   3.865083621171164*^9, {3.865084563801412*^9, 3.865084592428769*^9}, 
   3.8650856590126333`*^9, 3.8650875182866573`*^9, 3.865091000291559*^9, 
   3.865093056070513*^9, 3.865094694162876*^9, 3.865096615969627*^9, 
   3.86509696259997*^9, 3.865139954249607*^9, 3.865141786671627*^9, 
   3.8651521367013702`*^9, 3.865423552909775*^9, {3.865424979404682*^9, 
   3.8654249938473787`*^9}, {3.865425656479721*^9, 3.8654256609377003`*^9}, 
   3.8654809208707523`*^9, 3.865482033395006*^9, 3.8655011685646477`*^9, {
   3.865576369155878*^9, 3.8655763849362507`*^9}, 3.8655934591865187`*^9, 
   3.865594225086277*^9, 3.865603693195478*^9, 3.865654145596838*^9, 
   3.8656591284289303`*^9, 3.865663486762136*^9, {3.865675843854004*^9, 
   3.8656758480254383`*^9}, 3.865680692292922*^9, 3.865785373725032*^9, 
   3.865838237420817*^9, 3.8658644284650097`*^9, 3.865866739205634*^9, 
   3.865868706936183*^9, 3.86593559197605*^9, 3.8659425376483192`*^9, 
   3.866000471570891*^9, 3.8660023671723824`*^9, 3.866008552558271*^9, 
   3.866083736145451*^9, 3.866209093677637*^9, 3.866209596724132*^9, 
   3.866214336990232*^9, 3.866214934859021*^9, 3.866257446329878*^9, 
   3.866258666676694*^9, 3.866285701938628*^9, 3.866300727645417*^9, 
   3.866350581558517*^9, 3.8663715089115543`*^9, 3.8664377020714197`*^9, 
   3.866512491986065*^9, 3.866527204842803*^9, 3.866550105097583*^9, {
   3.866552357229663*^9, 3.866552399674362*^9}, 3.8665527340777407`*^9, 
   3.866552874933894*^9, {3.866553049548827*^9, 3.866553086238255*^9}, {
   3.8665534827091827`*^9, 3.866553488434558*^9}, 3.866553534951789*^9, 
   3.866553633744459*^9, 3.866600459846939*^9, 3.866602523014666*^9, 
   3.866614026941433*^9, 3.8666262010362787`*^9, 3.866635097265691*^9, 
   3.8666353295523643`*^9, 3.86671287784385*^9, 3.8668648189771833`*^9, 
   3.86686557723407*^9, 3.867159524610252*^9, 3.867322063035668*^9, 
   3.8673789484877462`*^9, 3.867470655008312*^9, 3.867479462918984*^9, 
   3.867565378519354*^9, 3.867591080109098*^9, 3.8676400269193563`*^9, 
   3.867653432365038*^9, 3.867669760039253*^9, 3.86773415064207*^9, 
   3.867811745519134*^9, 3.867820389693028*^9, 3.867838001660368*^9, 
   3.867841895496252*^9, 3.8678469507400503`*^9, 3.867847677521079*^9, 
   3.8678503868424177`*^9, 3.8678904849913807`*^9, 3.867890555843211*^9, 
   3.867893435896879*^9, 3.8678959723069487`*^9, 3.867896205315556*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"0cd33ffa-9a13-4832-9e9d-3fe54cf243d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{"MNISTExample", "/@", "data"}], ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.8", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8650715619235697`*^9, 3.865071567650784*^9}, {
  3.8650716393413363`*^9, 3.865071641123829*^9}, {3.865075763152564*^9, 
  3.865075763445953*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"5f23d7f5-27d3-4f48-9a93-1389f19dc351"]
}, Closed]],

Cell[CellGroupData[{

Cell["Standard neural net", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602720354347*^9, 
  3.866602722250537*^9}, {3.866867763326234*^9, 
  3.866867766054191*^9}},ExpressionUUID->"fc68a4bd-9bf9-485f-9eed-\
cf7b8ff25567"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConvertDataToClasses", "[", "data_", "]"}], ":=", 
  RowBox[{"MapAt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "]"}], "]"}], "-", "1"}], "&"}], ",",
     "data", ",", 
    RowBox[{"{", 
     RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8668693365321074`*^9, 3.8668693867886343`*^9}, {
  3.8668694253582287`*^9, 3.8668694957654448`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"afc9d31b-db6d-45ca-8b6b-e25b97a5ac3c"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602724930586*^9, 
  3.866602725762454*^9}},ExpressionUUID->"9502650c-75ff-4479-bca2-\
f7b8b0c4641d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", "numClasses"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NetChain", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
        "300", ",", "LogisticSigmoid", ",", "\[IndentingNewLine]", 
         "classificationLayerSize", ",", "LogisticSigmoid", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<Output\>\"", "->", 
        RowBox[{"NetDecoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Class\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<0\>\"", ",", "\"\<1\>\"", ",", "\"\<2\>\"", ",", 
             "\"\<3\>\""}], "}"}]}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8668677843113413`*^9, 3.866867810879756*^9}, {
  3.866867866054343*^9, 3.866867918755149*^9}, {3.866867993454722*^9, 
  3.86686799965574*^9}, {3.8668681258788567`*^9, 3.86686812619947*^9}, {
  3.8668689240969467`*^9, 3.866868981929222*^9}, {3.866869073179029*^9, 
  3.8668690742445583`*^9}, {3.866869111667173*^9, 3.8668691123403177`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"5fefb9b9-6e54-460e-b544-a43d033404b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866180932479144*^9, 3.866180933335601*^9}, {
  3.866260506971014*^9, 3.8662605102109118`*^9}, {3.866262223194878*^9, 
  3.866262223474766*^9}, {3.8666027494425793`*^9, 
  3.866602750730301*^9}},ExpressionUUID->"d41cd2db-8088-4737-b918-\
a082c6448deb"],

Cell[BoxData[
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", 
     RowBox[{"ConvertDataToClasses", "[", "trainData", "]"}], ",", "All", ",",
      "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ConvertDataToClasses", "[", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"testData", ",", 
           RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "2000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866262230733412*^9, 3.866262232700974*^9}, {
   3.866262747191399*^9, 3.866262755095587*^9}, {3.866263687522623*^9, 
   3.866263691522341*^9}, {3.866272907421722*^9, 3.866272908705574*^9}, {
   3.866274679974001*^9, 3.866274683777981*^9}, {3.866275126894273*^9, 
   3.866275130882132*^9}, {3.866275621030303*^9, 3.86627562449095*^9}, {
   3.866275800963348*^9, 3.866275804851942*^9}, {3.866278286918571*^9, 
   3.866278290408846*^9}, {3.866279939718389*^9, 3.8662799438283052`*^9}, {
   3.8662825835076027`*^9, 3.866282587086446*^9}, {3.8662848978232517`*^9, 
   3.8662849013340178`*^9}, {3.866301199025255*^9, 3.866301208705173*^9}, {
   3.866302091405136*^9, 3.866302093072084*^9}, {3.8663022330606956`*^9, 
   3.8663022743807373`*^9}, {3.866303190918262*^9, 3.8663031961042967`*^9}, {
   3.8663508996403513`*^9, 3.866350903983953*^9}, {3.8663558607588453`*^9, 
   3.866355860917651*^9}, {3.86637013313169*^9, 3.866370138430928*^9}, {
   3.866370237003203*^9, 3.866370239455555*^9}, {3.8663703291644793`*^9, 
   3.866370333111907*^9}, {3.866370363265703*^9, 3.866370363711856*^9}, {
   3.8663720431119947`*^9, 3.866372048852154*^9}, {3.866372163198892*^9, 
   3.8663721862104397`*^9}, 3.8663723957836103`*^9, {3.866372460806899*^9, 
   3.866372466981298*^9}, {3.8663728465397882`*^9, 3.866372846690668*^9}, {
   3.866439863015705*^9, 3.866439889076521*^9}, {3.866444399919945*^9, 
   3.866444403398275*^9}, 3.866445596437694*^9, 3.866445994629862*^9, {
   3.866446077093233*^9, 3.8664460772227592`*^9}, {3.866514058957122*^9, 
   3.866514061965129*^9}, {3.866514093672724*^9, 3.8665140946276417`*^9}, 
   3.866514530731886*^9, {3.866514784096607*^9, 3.866514784235477*^9}, {
   3.8665148543229303`*^9, 3.86651485485518*^9}, {3.866517197949828*^9, 
   3.866517203967832*^9}, 3.866517357579501*^9, 3.8665174374755917`*^9, 
   3.8665175119230967`*^9, {3.866517590284361*^9, 3.866517620168564*^9}, 
   3.8665176619240017`*^9, {3.8665179325026484`*^9, 3.8665179399815683`*^9}, {
   3.866518111910069*^9, 3.866518112233807*^9}, {3.866518521945266*^9, 
   3.866518522115803*^9}, {3.866518571201038*^9, 3.866518588328702*^9}, {
   3.866518646862028*^9, 3.866518650143523*^9}, 3.866518704027602*^9, {
   3.866519202548511*^9, 3.8665192068871107`*^9}, {3.866552934111923*^9, 
   3.866552991359269*^9}, {3.866553502473754*^9, 3.8665535030716467`*^9}, {
   3.866554417382031*^9, 3.866554420050095*^9}, {3.866554652086327*^9, 
   3.8665546522545357`*^9}, {3.86686620714637*^9, 3.866866208536282*^9}, {
   3.8668680582887163`*^9, 3.866868068787518*^9}, {3.8668684157382507`*^9, 
   3.8668684211762457`*^9}, {3.8668695026973*^9, 3.866869525750093*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"5e8aefb1-dfc7-4620-8212-9b7f8316e5ef"]
<<<<<<< HEAD
=======
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.865509544459216*^9, 3.865509545362651*^9}, {3.8668654702612267`*^9, 
  3.866865471244494*^9}, {3.866868302798292*^9, 
  3.866868303806368*^9}},ExpressionUUID->"7822fb59-1347-4e85-b721-\
29a9f368ef8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{
   RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
   RowBox[{"ConvertDataToClasses", "[", "testData", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866868805817885*^9, 3.866868848976694*^9}, {
  3.866869633679126*^9, 3.8668696380935183`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"e96a481e-3ba1-4201-9c24-39f96d06cf2b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classifier method"], 
                  TextCell["Classifier method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "Net",ExpressionUUID->"6409438e-2773-4385-84d6-0940b1dcfe37"],
               TextCell["Net"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Number of test examples"], 
                  TextCell["Number of test examples"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "19803"},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Accuracy"], 
                  TextCell["Accuracy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"94.11", "0.17"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   94.1120032318335688615`3., 0.1672829822354427176`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                   "\"Accuracy if predicting the commonest class\"", 
                   LabelStyle -> "TextStyling"], 
                  Annotation[#, "Accuracy if predicting the commonest class", 
                   "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"27.14", "0.32"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   27.1423521688633044846`3., 0.3160143365167839558`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Geometric mean of probabilities"], 
                  TextCell["Geometric mean of probabilities"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.448480991700299314`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0006461679909793849`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.4471886557183405442`3.",
                   "\", \"", "0.4497733276822580839`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.4471886557183405442`3., 
                  ", ", 0.4497733276822580839`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Mean cross entropy"], 
                  TextCell["Mean cross entropy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.801888980320557998`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0014407918716204948`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.7990073965773170084`3.",
                   "\", \"", "0.8047705640637989877`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.7990073965773170084`3., 
                  ", ", 0.8047705640637989877`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"2.59`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"144.`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}], "examples per millisecond", 
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              ItemBox[
               GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQ+4Cawt240Hf2i9Z9TNOpe2t/+6DVZZ7tL+3/v70e
Plvprf2uJdMOlr98YW8g6m92SPyOveqc6/J979/Yc+vvyzHjemE/c7rxq1Ur
b9hf5vq5pXHBW/v1D6rTzWfct1f85S1xyS7PXlTNsite/539pJOPIqa/e2PP
vqSmb4rjC/uF5QlhbmVA9ae23lIzfmV/9PAZPXe1h/Zsd1Sd9mq+s7+WXX9z
Yvs9+wr+AqEdmen2y9ZrRzH7vLX32qi6sWTyS/v+mG9+p3jv2zOAwQec9MMq
kXXuD29B+QwMkYLTK7O43tkzsjRnfUh6Y/9sWp1v6LVn9j4V7itd57y1P7D+
yIvdh17Zz37YVbx/9iN7NqnJCqs2ANVf0rnaWH3X/t23vbPZNiXYTzwzd6JE
zTt7tQmJ+xoF3tkfD/zPsNb4tb1OV6CW6LO39h0t+zWW3nxt/+fYZ0eLwqf2
Dm7WN18deGvvGnSNwdT3tb1CwPmZb5mf2AMAQMS0/w==
                 "], {{0, 0}, {4, 4}}, {0, 1}],
                Epilog->{{
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4540", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4540", "\" examples of \"", "0", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.975504941985389`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.9608465608465608`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9681202686853609`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4540, " examples of ", 0, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.975504941985389}], 
                    Row[{"Recall = ", 0.9608465608465608}], 
                    Row[{"FScore = ", 0.9681202686853609}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "1", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 1, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["66", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "66", "\" examples of \"", "2", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.014181349376880103`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.013690105787181083`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{66, " examples of ", 2, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.014181349376880103`}], 
                    Row[{"Row fraction = ", 0.013690105787181083`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["48", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "48", "\" examples of \"", "3", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.010313708637730984`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.009832036050798854`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{48, " examples of ", 3, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.010313708637730984`}], 
                    Row[{"Row fraction = ", 0.009832036050798854}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["23", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "23", "\" examples of \"", "0", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.004163649529326575`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.004867724867724868`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{23, " examples of ", 0, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.004163649529326575}], 
                    Row[{"Row fraction = ", 0.004867724867724868}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["5210", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5210", "\" examples of \"", "1", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.943157132512672`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9693023255813954`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9560510138544822`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5210, " examples of ", 1, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.943157132512672}], 
                    Row[{"Recall = ", 0.9693023255813954}], 
                    Row[{"FScore = ", 0.9560510138544822}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["109", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "109", "\" examples of \"", "2", "\" misclassified as \"",
                     "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.019732078204199855`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.022609417133374818`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{109, " examples of ", 2, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.019732078204199855`}], 
                    Row[{"Row fraction = ", 0.022609417133374818`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["182", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "182", "\" examples of \"", "3", "\" misclassified as \"",
                     "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.03294713975380159`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.03727980335927898`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{182, " examples of ", 3, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.03294713975380159}], 
                    Row[{"Row fraction = ", 0.03727980335927898}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["76", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "76", "\" examples of \"", "0", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01560254567850544`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.016084656084656083`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{76, " examples of ", 0, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.01560254567850544}], 
                    Row[{"Row fraction = ", 0.016084656084656083`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["74", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "74", "\" examples of \"", "1", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01519195237117635`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.013767441860465116`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{74, " examples of ", 1, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.01519195237117635}], 
                    Row[{"Row fraction = ", 0.013767441860465116`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4478", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4478", "\" examples of \"", "2", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9193184151098337`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9288529350757104`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9240610813041684`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4478, " examples of ", 2, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9193184151098337}], 
                    Row[{"Recall = ", 0.9288529350757104}], 
                    Row[{"FScore = ", 0.9240610813041684}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["243", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "243", "\" examples of \"", "3", "\" misclassified as \"",
                     "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0498870868404845`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.049774682507169196`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{243, " examples of ", 3, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.0498870868404845}], 
                    Row[{"Row fraction = ", 0.049774682507169196`}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["86", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "86", "\" examples of \"", "0", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01809002944888515`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0182010582010582`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{86, " examples of ", 0, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.01809002944888515}], 
                    Row[{"Row fraction = ", 0.0182010582010582}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["91", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "91", "\" examples of \"", "1", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.019141775347076145`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.016930232558139535`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{91, " examples of ", 1, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.019141775347076145`}], 
                    Row[{"Row fraction = ", 0.016930232558139535`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["168", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "168", "\" examples of \"", "2", "\" misclassified as \"",
                     "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0353386621792175`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.03484754200373367`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{168, " examples of ", 2, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.0353386621792175}], 
                    Row[{"Row fraction = ", 0.03484754200373367}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4409", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4409", "\" examples of \"", "3", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9274295330248212`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.903113478082753`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9151100041511001`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4409, " examples of ", 3, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9274295330248212}], 
                    Row[{"Recall = ", 0.903113478082753}], 
                    Row[{"FScore = ", 0.9151100041511001}]}], "Tooltip"]& ]}, 
                  
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4725", "\" example\"", "\"s\"", "\" of class \"", "0"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9608465608465608`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4725, " example", "s", " of class ", 0}], 
                    Row[{"Recall = ", 0.9608465608465608}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5375", "\" example\"", "\"s\"", "\" of class \"", "1"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9693023255813954`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5375, " example", "s", " of class ", 1}], 
                    Row[{"Recall = ", 0.9693023255813954}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4821", "\" example\"", "\"s\"", "\" of class \"", "2"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9288529350757104`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4821, " example", "s", " of class ", 2}], 
                    Row[{"Recall = ", 0.9288529350757104}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4882", "\" example\"", "\"s\"", "\" of class \"", "3"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.903113478082753`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4882, " example", "s", " of class ", 3}], 
                    Row[{"Recall = ", 0.903113478082753}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4654", "\" example\"", "\"s\"", "\" classified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.975504941985389`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4654, " example", "s", " classified as ", 0}], 
                    Row[{"Precision = ", 0.975504941985389}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5524", "\" example\"", "\"s\"", "\" classified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.943157132512672`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5524, " example", "s", " classified as ", 1}], 
                    Row[{"Precision = ", 0.943157132512672}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4871", "\" example\"", "\"s\"", "\" classified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9193184151098337`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4871, " example", "s", " classified as ", 2}], 
                    Row[{"Precision = ", 0.9193184151098337}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4754", "\" example\"", "\"s\"", "\" classified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9274295330248212`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4754, " example", "s", " classified as ", 3}], 
                    Row[{"Precision = ", 0.9274295330248212}]}], 
                    "Tooltip"]& ]},
                Frame->True,
                FrameLabel->{
                  FormBox["\"predicted class\"", TraditionalForm], 
                  FormBox["\"actual class\"", TraditionalForm]},
                FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {
                    2.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {
                    1.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {
                    0.5, 
                    FormBox[
                    RotationBox["3", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["4725", TraditionalForm]}, {2.5, 
                    FormBox["5375", TraditionalForm]}, {1.5, 
                    FormBox["4821", TraditionalForm]}, {0.5, 
                    FormBox["4882", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["4654", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["5524", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["4871", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["4754", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["3", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                FrameTicksStyle->13,
                GridLinesStyle->Directive[
                  GrayLevel[0.5, 0.4]],
                ImageSize->212.4,
                
                Method->{
                 "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                  Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                PlotRangePadding->None],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{{3.866868827326494*^9, 3.866868851119316*^9}, {
   3.866869626721004*^9, 3.8668696415126762`*^9}, 3.8675912169533*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"4a27835d-ece8-46cb-bb4e-df3922dc4fd0"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hard neural logic", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602720354347*^9, 
  3.866602722250537*^9}},ExpressionUUID->"5330bb32-e656-4b8b-bb36-\
16ab02f0840f"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602724930586*^9, 
  3.866602725762454*^9}},ExpressionUUID->"9ccf4bd6-05a1-49f1-915f-\
95679eedaa4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", "trainData", "]"}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.866870343416011*^9, 3.8668703445197*^9}, {
  3.8676599016367483`*^9, 3.867659904995343*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"ce6f0f7f-95ec-4012-ad4e-67899225afe1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"1024", "*", "numClasses"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{"inputSize", ",", "50"}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{"50", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralPortLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866512854091155*^9, 3.8665128815568047`*^9}, {
   3.866513103300004*^9, 3.866513116326098*^9}, {3.8665133340990458`*^9, 
   3.8665133419773703`*^9}, {3.86651391128594*^9, 3.866513915466413*^9}, {
   3.866514318655335*^9, 3.866514323501399*^9}, {3.866514602855854*^9, 
   3.866514605749691*^9}, {3.86651468027989*^9, 3.8665147385101433`*^9}, {
   3.8665168378259563`*^9, 3.866516840683816*^9}, {3.866516968713831*^9, 
   3.866516971903157*^9}, {3.8665173610656767`*^9, 3.866517372695388*^9}, 
   3.866517444884035*^9, {3.86651878744969*^9, 3.8665188117507257`*^9}, {
   3.866518954624714*^9, 3.866518969573318*^9}, {3.866520101802957*^9, 
   3.866520108575643*^9}, {3.866520188881999*^9, 3.8665202157280684`*^9}, {
   3.866520364293333*^9, 3.866520392296053*^9}, {3.86652044871375*^9, 
   3.8665204631835423`*^9}, {3.8665219880508347`*^9, 3.866522005928316*^9}, {
   3.8665272161026173`*^9, 3.8665272312695007`*^9}, {3.866527801201952*^9, 
   3.866527883631137*^9}, {3.866528045329198*^9, 3.8665280486071043`*^9}, {
   3.866528154113455*^9, 3.8665281741152687`*^9}, {3.866528447153947*^9, 
   3.866528447260316*^9}, {3.866528670002123*^9, 3.86652867583491*^9}, {
   3.86652876246611*^9, 3.86652876256351*^9}, {3.866528813858374*^9, 
   3.866528848079921*^9}, {3.866530033731058*^9, 3.866530050034823*^9}, {
   3.866532603007605*^9, 3.8665326199562283`*^9}, {3.8665328331522837`*^9, 
   3.866532845529175*^9}, {3.866532894976413*^9, 3.866532895812646*^9}, {
   3.8665329705120907`*^9, 3.866532996865466*^9}, {3.866533798129952*^9, 
   3.866533798585582*^9}, {3.866542948856092*^9, 3.866542956003662*^9}, {
   3.866543312214932*^9, 3.8665433126315613`*^9}, {3.866545711295557*^9, 
   3.866545711720436*^9}, {3.866546071686404*^9, 3.866546081040039*^9}, {
   3.866547900239717*^9, 3.8665479093644657`*^9}, {3.866549693552167*^9, 
   3.866549704088811*^9}, {3.866550126984569*^9, 3.8665501393456163`*^9}, {
   3.866551310563048*^9, 3.866551316716016*^9}, {3.866552552251585*^9, 
   3.866552552469812*^9}, {3.866552612077286*^9, 3.866552621902178*^9}, {
   3.86655297295109*^9, 3.8665530085584908`*^9}, {3.866553815227034*^9, 
   3.866553831744128*^9}, {3.866554274483659*^9, 3.8665542884172983`*^9}, {
   3.866554409228067*^9, 3.866554412577661*^9}, {3.866554466780363*^9, 
   3.866554467185257*^9}, {3.866554546724543*^9, 3.866554547081894*^9}, {
   3.866554637927086*^9, 3.866554643213908*^9}, {3.8665551202789803`*^9, 
   3.866555125450521*^9}, {3.866555219318622*^9, 3.8665552411393957`*^9}, {
   3.866555370545534*^9, 3.866555374243248*^9}, {3.866600476190877*^9, 
   3.866600520811289*^9}, {3.866600851629229*^9, 3.8666008545843487`*^9}, {
   3.866601173213505*^9, 3.866601184697352*^9}, {3.866602823213896*^9, 
   3.866602823651602*^9}, {3.866624063636963*^9, 3.866624070070056*^9}, {
   3.866864848820673*^9, 3.8668649018442097`*^9}, 3.8668649498986273`*^9, {
   3.866870158165018*^9, 3.8668701585199003`*^9}, {3.866870313913095*^9, 
   3.866870347432589*^9}, {3.86687070668148*^9, 3.866870709305764*^9}, {
   3.866874324915924*^9, 3.866874327763575*^9}, {3.866874459504965*^9, 
   3.866874459651349*^9}, {3.86688629545262*^9, 3.8668862958798847`*^9}, {
   3.866886781155374*^9, 3.8668867817674427`*^9}, {3.866887024065243*^9, 
   3.866887024335256*^9}, {3.866887176651325*^9, 3.866887183367484*^9}, {
   3.8668872857079782`*^9, 3.866887288446698*^9}, {3.8672933502433777`*^9, 
   3.867293351194455*^9}, {3.8672943201526012`*^9, 3.867294320574452*^9}, {
   3.8673072679566917`*^9, 3.86730727548538*^9}, {3.8673117146946087`*^9, 
   3.86731171694258*^9}, {3.867312640857286*^9, 3.8673126485630198`*^9}, {
   3.867483132216476*^9, 3.867483137068089*^9}, {3.867484558937159*^9, 
   3.867484565125327*^9}, {3.867484885034177*^9, 3.8674848960292263`*^9}, {
   3.8674857810280046`*^9, 3.867485785790262*^9}, {3.867485972308717*^9, 
   3.8674859777590923`*^9}, {3.867575634248128*^9, 3.867575669182214*^9}, 
   3.867592743700955*^9, {3.867593550197529*^9, 3.8675935538692703`*^9}, {
   3.867593719866111*^9, 3.8675937252614183`*^9}, {3.867593837857523*^9, 
   3.867593838180921*^9}, {3.867593997313245*^9, 3.867594007445169*^9}, {
   3.867594183313306*^9, 3.867594191053112*^9}, {3.867594279329269*^9, 
   3.867594279525052*^9}, {3.867594436544726*^9, 3.867594441717057*^9}, {
   3.867594539418096*^9, 3.8675945421729393`*^9}, {3.8675946505292997`*^9, 
   3.8675946515410852`*^9}, {3.867594823818615*^9, 3.867594825101057*^9}, {
   3.867595056465706*^9, 3.867595057069421*^9}, {3.8675951255616198`*^9, 
   3.86759515143506*^9}, {3.867595560572082*^9, 3.867595574085411*^9}, {
   3.867595795195505*^9, 3.867595804189353*^9}, {3.867820900250691*^9, 
   3.8678209054083347`*^9}, {3.8678213948752117`*^9, 
   3.8678213953528347`*^9}, {3.8678241310875*^9, 3.867824155627552*^9}, {
   3.8678359011608477`*^9, 3.867835906741913*^9}, {3.867835991351974*^9, 
   3.867835993033587*^9}, {3.867836130935794*^9, 3.8678361328821583`*^9}, {
   3.8678362401794147`*^9, 3.867836242602487*^9}, {3.867836307448196*^9, 
   3.867836313353601*^9}, {3.86783647125273*^9, 3.867836473650206*^9}, {
   3.867836534947302*^9, 3.86783654330317*^9}, {3.867836648129442*^9, 
   3.8678366544118233`*^9}, {3.867836897818256*^9, 3.8678369025722857`*^9}, {
   3.867837022233658*^9, 3.867837033901739*^9}, {3.867837623887574*^9, 
   3.867837627813425*^9}, {3.86783787807589*^9, 3.867837896261313*^9}, {
   3.8678382960747147`*^9, 3.8678383098582077`*^9}, {3.867838463835903*^9, 
   3.867838469455121*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"feba2f53-f4f5-43e6-a86d-fb7cc5e96658"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"12", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"inputSize", ",", "200"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"200", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralPortLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866614043740147*^9, 3.866614059419475*^9}, {
   3.866614190829136*^9, 3.8666141968514433`*^9}, {3.866614273950245*^9, 
   3.866614278499329*^9}, {3.866614530778089*^9, 3.866614549428873*^9}, {
   3.866614803501232*^9, 3.866614803899014*^9}, {3.866615155141581*^9, 
   3.8666151742512083`*^9}, {3.866615336990378*^9, 3.8666153564905977`*^9}, {
   3.8666155953979273`*^9, 3.8666156011151123`*^9}, {3.866615669316122*^9, 
   3.866615680124647*^9}, {3.866615967248592*^9, 3.866615999692507*^9}, {
   3.86661706753056*^9, 3.8666171261627617`*^9}, {3.8666205700552588`*^9, 
   3.866620577491592*^9}, 3.86662330258639*^9, {3.8666237456239367`*^9, 
   3.866623752562409*^9}, 3.866623873531086*^9, {3.866623962136072*^9, 
   3.866623962541971*^9}, {3.866623999422729*^9, 3.866624020958702*^9}, 
   3.8666245872835913`*^9, {3.866625081754253*^9, 3.866625088886717*^9}, {
   3.8666253816059103`*^9, 3.866625381671921*^9}, {3.8666256340644712`*^9, 
   3.8666256351363153`*^9}, {3.86662623703862*^9, 3.8666262383268423`*^9}, {
   3.866626438031022*^9, 3.86662645240309*^9}, {3.866626685496241*^9, 
   3.866626685771852*^9}, {3.866864856428698*^9, 3.866864907580008*^9}, 
   3.866864955388526*^9, {3.8668703352646313`*^9, 3.866870336336831*^9}, {
   3.866874358883934*^9, 3.866874401155965*^9}, {3.866888199574621*^9, 
   3.866888199629108*^9}, {3.866888529255218*^9, 3.866888535050028*^9}, {
   3.86688878140559*^9, 3.8668887831258*^9}, {3.86689046499454*^9, 
   3.866890466044656*^9}, {3.866890758593011*^9, 3.866890763532761*^9}, {
   3.86689131588319*^9, 3.86689132212932*^9}, {3.866893076112526*^9, 
   3.866893077169388*^9}, {3.866897916842669*^9, 3.8668979227268543`*^9}, {
   3.867074152423325*^9, 3.86707415278448*^9}, {3.867075456545642*^9, 
   3.8670754567497683`*^9}, {3.867235871119939*^9, 3.867235872174719*^9}, {
   3.867237801291904*^9, 3.8672378023206873`*^9}, {3.867292790064324*^9, 
   3.867292790691334*^9}, {3.867293135786272*^9, 3.867293136090776*^9}, {
   3.867293221118145*^9, 3.8672932273708363`*^9}, {3.867306682735231*^9, 
   3.8673066832640533`*^9}, {3.867307446999085*^9, 3.867307452304888*^9}, {
   3.86731058493076*^9, 3.8673105916035833`*^9}, {3.867311149181422*^9, 
   3.867311155116807*^9}, {3.8673122341172657`*^9, 3.8673122356649857`*^9}, {
   3.8673123826362886`*^9, 3.867312382934656*^9}, {3.867333094419078*^9, 
   3.867333103730966*^9}, {3.867333886123332*^9, 3.867333891724444*^9}, {
   3.867406148675064*^9, 3.867406152721349*^9}, {3.8674198137634077`*^9, 
   3.867419814726452*^9}, {3.867470668480517*^9, 3.8674706693357773`*^9}, {
   3.867480325311369*^9, 3.8674803339747763`*^9}, {3.867482682782688*^9, 
   3.8674826875693483`*^9}, {3.867595267320661*^9, 3.867595271317068*^9}, {
   3.867595363788767*^9, 3.867595370589553*^9}, {3.8675954114278584`*^9, 
   3.867595418973572*^9}, {3.867595554720611*^9, 
   3.867595557192067*^9}},ExpressionUUID->"923f7933-891f-49a3-bbf5-\
d8f8183fe2d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"portSize", ",", "classificationLayerSize"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"portSize", "=", "900"}], ";", "\[IndentingNewLine]", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"portSize", "*", "numClasses"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"HardNeuralChain", "[", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HardNeuralNAND", "[", 
          RowBox[{"inputSize", ",", "classificationLayerSize"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"HardDropoutLayer", "[", "0.5", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"HardNeuralPortLayer", "[", 
          RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.867841916987248*^9, 3.8678421071281843`*^9}, {
   3.867842389163254*^9, 3.8678424104725847`*^9}, {3.867842604635694*^9, 
   3.867842606084375*^9}, {3.8678427700989523`*^9, 3.8678427715606728`*^9}, {
   3.867843707138914*^9, 3.867843754464377*^9}, 3.867843942708643*^9, {
   3.867843987859889*^9, 3.867843994528171*^9}, {3.867847590981337*^9, 
   3.8678476427453136`*^9}, {3.867847796754768*^9, 3.867847806505651*^9}, {
   3.867848727229472*^9, 3.867848753066246*^9}, {3.8678489087021*^9, 
   3.867848922743598*^9}, {3.867848985918405*^9, 3.867848988579921*^9}, {
   3.867850397128324*^9, 3.867850399228125*^9}, {3.867850871210086*^9, 
   3.867851125253394*^9}, {3.867852647604347*^9, 3.867852661157853*^9}, {
   3.8678904974623013`*^9, 3.867890507541542*^9}, {3.867892066351469*^9, 
   3.867892091410841*^9}, {3.867892395303556*^9, 3.867892412925453*^9}, {
   3.8678925469176607`*^9, 3.8678926534696503`*^9}, {3.867893447753015*^9, 
   3.8678934523329153`*^9}, {3.867893759343811*^9, 3.867893768350878*^9}, {
   3.867894321410741*^9, 3.867894327640942*^9}, {3.867894966595901*^9, 
   3.8678949667723093`*^9}, {3.8678959832744093`*^9, 3.867895984764944*^9}, {
   3.867896217305914*^9, 3.867896217634267*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"a805bd2a-cef0-4df4-b838-7efd7718ed29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"softNet", "=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<NeuralLogicNet\>\"", "->", "net"}], ",", 
       RowBox[{"\"\<Loss\>\"", "->", 
        RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<NeuralLogicNet\>\"", "->", "\"\<Loss\>\""}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866020485648757*^9, 3.866020486758964*^9}, {
   3.8660206133758917`*^9, 3.86602061576938*^9}, {3.866021594138579*^9, 
   3.866021622648958*^9}, {3.86602221641733*^9, 3.866022259472351*^9}, {
   3.86602506519114*^9, 3.8660250652828293`*^9}, {3.866027283063545*^9, 
   3.866027305459503*^9}, {3.866027571359556*^9, 3.866027577807056*^9}, {
   3.866028577017147*^9, 3.866028577337102*^9}, {3.866028739939226*^9, 
   3.866028740417481*^9}, {3.866038386270308*^9, 3.866038393509417*^9}, {
   3.866038426793558*^9, 3.866038432549663*^9}, {3.866038541734429*^9, 
   3.866038552581696*^9}, {3.8660399839336977`*^9, 3.8660400476873417`*^9}, {
   3.866040086377454*^9, 3.866040113183221*^9}, {3.8660842202209263`*^9, 
   3.8660842234441147`*^9}, {3.866084729086014*^9, 3.8660847389004602`*^9}, {
   3.866084883181377*^9, 3.866084891034108*^9}, {3.866087944385981*^9, 
   3.866087946377273*^9}, {3.8660898129249763`*^9, 3.866089819116226*^9}, {
   3.8660918927590847`*^9, 3.866091896174137*^9}, {3.866118640249077*^9, 
   3.8661186553525763`*^9}, {3.8661697941751633`*^9, 3.86616982143332*^9}, {
   3.8661700477905827`*^9, 3.866170062053422*^9}, {3.866170430900312*^9, 
   3.866170441150339*^9}, {3.866171085971992*^9, 3.866171092538931*^9}, {
   3.8661713117235622`*^9, 3.866171323794742*^9}, {3.866172075114151*^9, 
   3.866172086385466*^9}, {3.8661726453612757`*^9, 3.8661726565682907`*^9}, {
   3.866172963402001*^9, 3.866172967303824*^9}, {3.866175492855685*^9, 
   3.86617549327916*^9}, {3.8661755786344223`*^9, 3.866175597119087*^9}, {
   3.866176135095639*^9, 3.866176139335493*^9}, {3.866176563216754*^9, 
   3.866176567303925*^9}, {3.866177234452429*^9, 3.866177240033128*^9}, {
   3.866177471626033*^9, 3.866177471849081*^9}, {3.8661781260498943`*^9, 
   3.866178174045168*^9}, {3.866179499382938*^9, 3.866179520538422*^9}, {
   3.866180308892374*^9, 3.866180328231532*^9}, {3.866180620692492*^9, 
   3.866180620811393*^9}, {3.866180727174838*^9, 3.866180728856566*^9}, {
   3.8661809278929253`*^9, 3.866180930764296*^9}, {3.866181239813146*^9, 
   3.866181242692215*^9}, {3.866184773364808*^9, 3.866184773468157*^9}, {
   3.866184929896516*^9, 3.866184931032365*^9}, {3.866185363169696*^9, 
   3.866185363420731*^9}, {3.866185838820908*^9, 3.866185842136413*^9}, {
   3.8661861874248247`*^9, 3.866186188480125*^9}, {3.86618706378515*^9, 
   3.866187066984132*^9}, {3.866209107928833*^9, 3.866209126148491*^9}, {
   3.866209156593391*^9, 3.8662091576123867`*^9}, {3.866209702848567*^9, 
   3.866209710039878*^9}, {3.866209813177039*^9, 3.866209834123746*^9}, {
   3.86621053449234*^9, 3.866210540769287*^9}, {3.866210581043235*^9, 
   3.8662105868693542`*^9}, {3.866210622339385*^9, 3.866210627545692*^9}, {
   3.866210657739574*^9, 3.8662106609137363`*^9}, {3.866210756731784*^9, 
   3.866210768609764*^9}, {3.866211193549685*^9, 3.8662112016988564`*^9}, {
   3.866211352173271*^9, 3.866211355378903*^9}, {3.8662114673335752`*^9, 
   3.866211471635058*^9}, {3.8662116682945633`*^9, 3.86621167888715*^9}, 
   3.8662117763988447`*^9, {3.866211833182128*^9, 3.8662118352832003`*^9}, {
   3.86621193783076*^9, 3.866211943219183*^9}, {3.866214069618958*^9, 
   3.866214085207219*^9}, {3.86621414917101*^9, 3.866214201293022*^9}, {
   3.866214582928615*^9, 3.866214586096209*^9}, {3.8662146462687683`*^9, 
   3.8662146535499763`*^9}, {3.866214940556902*^9, 3.866214945432839*^9}, {
   3.86625367959163*^9, 3.86625368544868*^9}, {3.8662538129344873`*^9, 
   3.866253817785205*^9}, {3.866254549496963*^9, 3.866254555093663*^9}, {
   3.8662546252320347`*^9, 3.866254645248086*^9}, {3.866254759667647*^9, 
   3.8662547607426033`*^9}, {3.866254889744342*^9, 3.8662548909149446`*^9}, {
   3.866254921233653*^9, 3.866254922151456*^9}, {3.866255111823483*^9, 
   3.866255112738577*^9}, 3.8662574558616056`*^9, {3.866257625671372*^9, 
   3.8662576360908813`*^9}, {3.866257668990629*^9, 3.866257673154139*^9}, {
   3.866258160607082*^9, 3.866258163488317*^9}, {3.866258216054822*^9, 
   3.866258216152341*^9}, {3.866258465946023*^9, 3.8662584660890408`*^9}, {
   3.8662587584666643`*^9, 3.866258758714335*^9}, {3.8662591656591253`*^9, 
   3.866259171110828*^9}, {3.8662595439403343`*^9, 3.866259575288472*^9}, {
   3.866260163911601*^9, 3.866260184078418*^9}, {3.86626215222803*^9, 
   3.8662621832516203`*^9}, {3.866263109109415*^9, 3.86626311329671*^9}, {
   3.8662634113702927`*^9, 3.866263445027198*^9}, {3.8662637295611134`*^9, 
   3.8662637341766987`*^9}, {3.8662638454628477`*^9, 3.86626384912811*^9}, {
   3.866264629557499*^9, 3.866264632526574*^9}, {3.866264756302319*^9, 
   3.866264756571878*^9}, {3.86626485570925*^9, 3.8662648604861727`*^9}, {
   3.866264906589533*^9, 3.866264909654014*^9}, {3.8662650173821917`*^9, 
   3.866265024103039*^9}, {3.866267932128647*^9, 3.866267936947571*^9}, {
   3.866272289890004*^9, 3.866272326071719*^9}, 3.866272498086396*^9, {
   3.866272605318948*^9, 3.8662726100556726`*^9}, {3.866272697696899*^9, 
   3.8662727061238422`*^9}, {3.866272804197109*^9, 3.866272807076984*^9}, {
   3.866272890576043*^9, 3.8662729018249826`*^9}, {3.866273061136441*^9, 
   3.866273079881092*^9}, {3.8662739928242073`*^9, 3.866274026656089*^9}, {
   3.866274121640194*^9, 3.86627415310497*^9}, {3.8662742538084593`*^9, 
   3.866274260924819*^9}, {3.86627447707015*^9, 3.866274491178595*^9}, {
   3.866274954835182*^9, 3.866274972215249*^9}, {3.8662751949711027`*^9, 
   3.866275214973873*^9}, {3.866275317133552*^9, 3.866275326157571*^9}, {
   3.866276341927771*^9, 3.866276342361364*^9}, {3.866276444445874*^9, 
   3.866276444758065*^9}, 3.866276574032675*^9, {3.8662774805759163`*^9, 
   3.866277486441833*^9}, {3.866277730486899*^9, 3.866277745606361*^9}, {
   3.866277812901185*^9, 3.8662778241863747`*^9}, {3.866277923447342*^9, 
   3.866277942127078*^9}, {3.866278044847097*^9, 3.866278070211129*^9}, {
   3.866278491367318*^9, 3.866278493966505*^9}, {3.866278580024693*^9, 
   3.8662785830122213`*^9}, {3.866278895153315*^9, 3.866278898232675*^9}, {
   3.866280230366321*^9, 3.86628024016776*^9}, 3.866280351079256*^9, {
   3.866280499461529*^9, 3.8662805080447283`*^9}, {3.866280639515723*^9, 
   3.8662806449211483`*^9}, {3.866280754797947*^9, 3.86628075810079*^9}, {
   3.866280876373425*^9, 3.866280889329287*^9}, 3.866281009490582*^9, {
   3.8662811039106913`*^9, 3.866281107962268*^9}, {3.866281186723476*^9, 
   3.866281191533492*^9}, {3.8662812575988626`*^9, 3.866281268830084*^9}, {
   3.8662813166116953`*^9, 3.866281325765922*^9}, {3.866282044987713*^9, 
   3.866282048676916*^9}, {3.866282148870701*^9, 3.866282152685348*^9}, {
   3.86628313823394*^9, 3.8662831431981792`*^9}, {3.866283203895447*^9, 
   3.8662832148382063`*^9}, {3.8662832951824627`*^9, 
   3.8662833056304398`*^9}, {3.866283478244402*^9, 3.866283487341878*^9}, {
   3.8662841436542883`*^9, 3.86628415025281*^9}, {3.866284940968055*^9, 
   3.866284945101494*^9}, {3.866285029031362*^9, 3.866285034053158*^9}, {
   3.866285238231142*^9, 3.8662852400450497`*^9}, {3.8662854784494677`*^9, 
   3.866285480030343*^9}, {3.8662855684494333`*^9, 3.866285589220209*^9}, {
   3.866285661897065*^9, 3.866285665049341*^9}, {3.866286012525502*^9, 
   3.866286023701212*^9}, {3.866286183975936*^9, 3.866286197019022*^9}, {
   3.866286343624745*^9, 3.8662863761838703`*^9}, {3.86628647476213*^9, 
   3.866286478513227*^9}, {3.866286583730136*^9, 3.866286589629998*^9}, {
   3.8662866316154537`*^9, 3.866286632298744*^9}, {3.866286684611227*^9, 
   3.866286694033737*^9}, {3.866286815683847*^9, 3.866286826001635*^9}, {
   3.8662869515842*^9, 3.866286957090143*^9}, {3.866287432190014*^9, 
   3.866287433732437*^9}, {3.8662875714309177`*^9, 3.866287575508819*^9}, {
   3.866287972431319*^9, 3.866287979390542*^9}, {3.8662881211610413`*^9, 
   3.866288128734665*^9}, {3.866301184432645*^9, 3.866301189032214*^9}, {
   3.866301252666163*^9, 3.866301255952261*^9}, {3.866301376402754*^9, 
   3.866301391652487*^9}, {3.866301466042976*^9, 3.866301469288639*^9}, {
   3.866301630395039*^9, 3.866301653060717*^9}, {3.866301748836125*^9, 
   3.866301755312545*^9}, {3.86630188485115*^9, 3.866301888560711*^9}, {
   3.866302280747377*^9, 3.8663022952887983`*^9}, {3.866302405795878*^9, 
   3.866302419001148*^9}, {3.866302495340143*^9, 3.866302504605687*^9}, {
   3.866350591374894*^9, 3.8663505951022243`*^9}, {3.866351142159863*^9, 
   3.866351179558625*^9}, {3.8663515938249702`*^9, 3.866351597311022*^9}, {
   3.8663516429930353`*^9, 3.866351646919097*^9}, {3.8663540899964314`*^9, 
   3.866354091250739*^9}, 3.866354227060774*^9, {3.866354342347616*^9, 
   3.866354366019519*^9}, {3.866354536533381*^9, 3.866354542835105*^9}, {
   3.866354615988611*^9, 3.866354616498942*^9}, {3.866354747316181*^9, 
   3.866354747986311*^9}, {3.866354820971937*^9, 3.866354830674176*^9}, {
   3.866354985259542*^9, 3.866355003354249*^9}, {3.866355243555305*^9, 
   3.866355280233426*^9}, {3.866355363275181*^9, 3.8663553649290257`*^9}, {
   3.866355508482728*^9, 3.8663555086333237`*^9}, {3.866355904531114*^9, 
   3.8663559105053043`*^9}, {3.866355992402801*^9, 3.866356013229351*^9}, {
   3.866356256538742*^9, 3.866356257041319*^9}, {3.866356472449071*^9, 
   3.866356473280033*^9}, {3.8663565818412313`*^9, 3.866356588441074*^9}, {
   3.866356990748909*^9, 3.866356994266841*^9}, {3.8663571204214773`*^9, 
   3.866357120574224*^9}, {3.8663572027579412`*^9, 3.8663572078996153`*^9}, {
   3.866357620436617*^9, 3.866357634688436*^9}, {3.866357667446629*^9, 
   3.866357681140574*^9}, {3.8663583040873337`*^9, 3.866358308549032*^9}, {
   3.866358702488315*^9, 3.866358710660177*^9}, {3.866358792502235*^9, 
   3.866358792643732*^9}, {3.8663588650968037`*^9, 3.866358870370079*^9}, {
   3.8663590601050797`*^9, 3.866359061311141*^9}, {3.866359100825281*^9, 
   3.8663591032317047`*^9}, {3.866360392667655*^9, 3.866360402393593*^9}, {
   3.866360446451545*^9, 3.866360454122822*^9}, {3.866360518763679*^9, 
   3.866360523813664*^9}, {3.8663605658118258`*^9, 3.866360586933572*^9}, {
   3.866360874844895*^9, 3.866360875286996*^9}, {3.8663609358459*^9, 
   3.866360946523975*^9}, {3.8663629695673723`*^9, 3.8663629719826107`*^9}, {
   3.8663639844553833`*^9, 3.8663639851026163`*^9}, {3.866364664263899*^9, 
   3.866364667805708*^9}, {3.8663647416864157`*^9, 3.866364751498241*^9}, {
   3.8663648173209887`*^9, 3.8663648239090853`*^9}, {3.866364861552744*^9, 
   3.866364866359233*^9}, {3.866364911593669*^9, 3.866364912091476*^9}, {
   3.8663650443606586`*^9, 3.8663650452161922`*^9}, {3.866365512692107*^9, 
   3.866365515810193*^9}, 3.866365740980801*^9, {3.866366124781304*^9, 
   3.866366128103511*^9}, {3.86636615827591*^9, 3.866366161795991*^9}, 
   3.8663675572465467`*^9, {3.8663679823247623`*^9, 3.8663679840072737`*^9}, {
   3.8663685724947968`*^9, 3.866368575523563*^9}, {3.866368617885765*^9, 
   3.866368630439355*^9}, {3.8663688420628223`*^9, 3.866368846739706*^9}, {
   3.866368921365861*^9, 3.866368935403892*^9}, {3.866368992805874*^9, 
   3.8663689939334173`*^9}, {3.8663690430938*^9, 3.8663690474648046`*^9}, {
   3.866369083709838*^9, 3.8663691118719187`*^9}, {3.866369202398569*^9, 
   3.866369214195849*^9}, {3.866369334334588*^9, 3.866369336388123*^9}, {
   3.866369454951181*^9, 3.8663694569323397`*^9}, {3.866369515406219*^9, 
   3.866369518628167*^9}, {3.8663703695855513`*^9, 3.8663703750077*^9}, {
   3.8663705385538683`*^9, 3.866370541048525*^9}, {3.866370586394085*^9, 
   3.866370607876096*^9}, {3.8663707547717*^9, 3.866370757696903*^9}, {
   3.866370926163419*^9, 3.866370929489147*^9}, {3.866371042659484*^9, 
   3.8663710475373373`*^9}, {3.866371595734161*^9, 3.866371595814637*^9}, {
   3.866371630486404*^9, 3.866371630623527*^9}, {3.866371683122916*^9, 
   3.866371701147089*^9}, {3.866371789324903*^9, 3.866371822547234*^9}, {
   3.8663718525974607`*^9, 3.8663718606429367`*^9}, {3.866371974165319*^9, 
   3.866371979075355*^9}, {3.866372122293806*^9, 3.8663721296757917`*^9}, {
   3.866372551518608*^9, 3.866372561132722*^9}, {3.866372627211433*^9, 
   3.866372636080841*^9}, {3.8663728112322397`*^9, 3.866372812994047*^9}, {
   3.866372895895451*^9, 3.866372901477323*^9}, {3.8664377149946833`*^9, 
   3.8664377176580143`*^9}, {3.86643884019552*^9, 3.86643884333634*^9}, {
   3.866438919186672*^9, 3.866438921864346*^9}, {3.8664391767222757`*^9, 
   3.866439182016387*^9}, {3.866439413057221*^9, 3.8664394237656918`*^9}, {
   3.866440165425671*^9, 3.8664401663535337`*^9}, {3.8664414544278717`*^9, 
   3.866441455406114*^9}, {3.8664415241527863`*^9, 3.866441526297073*^9}, {
   3.866441636299324*^9, 3.866441637325185*^9}, {3.8664421743093033`*^9, 
   3.866442174534107*^9}, {3.866444116919817*^9, 3.866444119674713*^9}, {
   3.86644604617083*^9, 3.866446049128669*^9}, {3.866512861360115*^9, 
   3.866512866295472*^9}, {3.866512916479863*^9, 3.866512918447736*^9}, {
   3.866623312753614*^9, 3.866623319710231*^9}, 3.866624582319717*^9, {
   3.8668662017322693`*^9, 3.866866202166645*^9}, {3.866885151993841*^9, 
   3.866885152627983*^9}, {3.866886303360961*^9, 3.866886303494787*^9}, {
   3.866886784793562*^9, 3.866886785078327*^9}, {3.866887027953611*^9, 
   3.8668870285346737`*^9}, {3.866887196544759*^9, 3.8668871969509068`*^9}, {
   3.866887908638279*^9, 3.866887908768166*^9}, {3.866888202133163*^9, 
   3.8668882026401367`*^9}, {3.8668885411386957`*^9, 3.86688854148912*^9}, {
   3.866890470117792*^9, 3.866890470852077*^9}, {3.866890765878002*^9, 
   3.866890766260087*^9}, {3.86689132463979*^9, 3.8668913249890223`*^9}, {
   3.86689308168353*^9, 3.866893082217802*^9}, {3.866897888912188*^9, 
   3.8668978892625017`*^9}, {3.866898733832912*^9, 3.866898734749516*^9}, 
   3.8668994402579*^9, {3.866899773765663*^9, 3.866899774274312*^9}, {
   3.866952833901763*^9, 3.8669528351406612`*^9}, {3.866964109943631*^9, 
   3.866964110413616*^9}, {3.866966147880842*^9, 3.8669661483346167`*^9}, {
   3.866988245985949*^9, 3.866988246358993*^9}, {3.867074156194147*^9, 
   3.867074156647444*^9}, {3.867075460518784*^9, 3.867075460872748*^9}, {
   3.867130579976453*^9, 3.867130581878731*^9}, {3.867132238858082*^9, 
   3.86713226222477*^9}, {3.867132321058169*^9, 3.8671324110815372`*^9}, 
   3.86714816879574*^9, {3.867151174390662*^9, 3.867151175718362*^9}, {
   3.8671601859854937`*^9, 3.867160187248486*^9}, {3.867160271865155*^9, 
   3.867160273391037*^9}, {3.867206142108213*^9, 3.867206144010398*^9}, {
   3.867207661638524*^9, 3.8672076639716473`*^9}, {3.867225680992249*^9, 
   3.8672257375848494`*^9}, {3.867226575060524*^9, 3.8672265762181053`*^9}, {
   3.8672269605171947`*^9, 3.867226962147046*^9}, {3.8672272705896187`*^9, 
   3.867227297795145*^9}, {3.867227343085717*^9, 3.86722734351553*^9}, {
   3.86722737998987*^9, 3.867227380393511*^9}, {3.867227510606731*^9, 
   3.867227510759487*^9}, 3.8672275413257437`*^9, 3.867227636478323*^9, {
   3.867228148534873*^9, 3.86722815017175*^9}, {3.867235212746784*^9, 
   3.867235218959901*^9}, {3.867243061589653*^9, 3.867243089467525*^9}, {
   3.867243408789299*^9, 3.867243408892873*^9}, {3.8672443465611343`*^9, 
   3.867244347575115*^9}, {3.8672923794879313`*^9, 3.867292407247943*^9}, {
   3.867292793997984*^9, 3.867292794523506*^9}, {3.86729313056518*^9, 
   3.867293140483102*^9}, {3.8672932303810797`*^9, 3.867293230776718*^9}, {
   3.867294324594297*^9, 3.867294325174638*^9}, {3.867305927312809*^9, 
   3.867305927710868*^9}, {3.86730636106628*^9, 3.8673063615676527`*^9}, {
   3.86730727912813*^9, 3.867307279760503*^9}, {3.867307456280364*^9, 
   3.867307456624774*^9}, {3.867310934782545*^9, 3.867310935612999*^9}, {
   3.8673111612986937`*^9, 3.867311161302167*^9}, {3.8673117249217653`*^9, 
   3.867311725398467*^9}, {3.867312239359359*^9, 3.867312239717518*^9}, {
   3.867323044875226*^9, 3.867323050610677*^9}, {3.867331098943338*^9, 
   3.867331099090743*^9}, {3.86733389853468*^9, 3.867333898684703*^9}, {
   3.867399559935915*^9, 3.867399625423558*^9}, {3.867400091162709*^9, 
   3.867400112677143*^9}, {3.8674004611694317`*^9, 3.867400470751096*^9}, {
   3.8674039612129593`*^9, 3.867403961339106*^9}, {3.867404343391862*^9, 
   3.867404343493106*^9}, {3.867405223938087*^9, 3.8674052257279587`*^9}, {
   3.867406890830207*^9, 3.867406890979588*^9}, {3.867406928334382*^9, 
   3.867406928732006*^9}, 3.8674069690859013`*^9, 3.867407132280343*^9, 
   3.867407699751111*^9, {3.86740910335982*^9, 3.867409103533945*^9}, {
   3.86741451546389*^9, 3.867414544246604*^9}, {3.86741480776128*^9, 
   3.867414823759447*^9}, {3.8674150640103292`*^9, 3.867415067532441*^9}, {
   3.8674192410881844`*^9, 3.8674192414142323`*^9}, {3.867419337601428*^9, 
   3.867419338006322*^9}, {3.8674197151133127`*^9, 3.867419716366417*^9}, {
   3.86741980437457*^9, 3.8674198055585403`*^9}, {3.867420964777163*^9, 
   3.867420970276672*^9}, {3.867565400727728*^9, 3.867565402598975*^9}, 
   3.86757574945562*^9, {3.867583108618186*^9, 3.867583119673476*^9}, {
   3.867592825935584*^9, 3.8675928280210953`*^9}, {3.867593509898299*^9, 
   3.867593511045754*^9}, 3.867593572982695*^9, 3.8678363212387533`*^9, 
   3.867892665101438*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"ff705697-08c0-41db-8a85-131ecdba22d6"],

Cell[CellGroupData[{

Cell[BoxData["softNet"], "Input",
 CellChangeTimes->{{3.867852667460257*^9, 3.8678526698877697`*^9}, {
  3.867892670381201*^9, 3.8678926712427197`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"1b570bfa-2a4d-48ef-b659-d88693679ac4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -15.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"300\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]300\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]300\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]300\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]300\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {223.0000014737193, 103.49999999999997`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.5, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Target\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Target\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Target"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Target\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Target"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25},
                     {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {12.75, 
                    17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "NeuralLogicNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"AND" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{1200, 
                    64}]|>, "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{1200, 64}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {1200, 64}|>,
                     "Inputs" -> <||>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1200, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {1200, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1200, 
                    64}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200, 
                    64}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{1200, 64}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200, 
                    64}, NeuralNetworks`AtomT]|>|>, 
                    "Min" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1200, 
                    64}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {1200}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{1200}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1200}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {1200}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {1200}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "AND", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "AND", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.25, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"BinaryMask"}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"BinaryMask" -> 
                    NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Mask" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["BinaryMask"] 
                    Slot["Input"]& ), "Net" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"BinaryMask" -> 
                    NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"BinaryMask" -> 
                    NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Inputs", "BinaryMask"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout", "Outputs", "BinaryMask"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Outputs", "Output"]}|>, 
                    "3" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{4, 
                    300}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 300}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 300}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 300}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Harden" -> <|"Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 0.9, 0.1]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_50a8a813_6f17_4a4f_a0eb_4063f52099c9", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
MCtLi2PHrTTniltoJPtCfyKoT5czEjYeFY7fapbxJlPAkmgMVv2dPGnzmEDJ
BjPBrCrUJdAMdZF86TLEuL/x6JnxYUSXY9Dln42zN4/ZKllnJuAPaDGgj78Z
F9v1HZaLzfOvFUu/E2P7jKgfsGQiNbkomOSRtoa2rmqv//FksrB0fLerXCcj
Y/KtvcASl3k7kpOw3EzUkYO4xKpUc2n64cL5mw13FBngXDq8rlDnoJvXxqMC
g7wAh/09DB1NMjX5o1jJpgn3ycJNBt3JzEXUiSuT5te62kdtvGXG0eFnBGGw
2sT5tQv4pZ+7fw3ZLzOSkT62ngJCisJZLNZRsfjhwiR5RpBFajR0wVhuVcIW
37Z5ZYu0zxntEzjX4rg6q3HtwnEdA7j+frhwwWbDYqFxEjs5kCzkV20tzTQX
bB5TGpBpziomkVLH9sFsjElcMZviCu8vRrm5uW06GmBcZsaxspgCqZiW+5E1
5Cjuc0DsMwKtwREbUCP2uztZ71iQR2osQUs5aYHtxODv1iRFc2uhiwsVurzA
u3DYqi7TvcjjjgX50+MZOxDn3Uy6XSl6HzIm+6bG6Lyu1L1Tgnskp+bU8VNa
rTybtd30QN/3g74H6OEGbUFWObFji7vNs5mwxgTPI3Dt8NHNtvKJLKycG4Ke
ZZVzxX+GQOjOydb+D98I4nnnpZJvyu8L7kmcOiImZgtvsbkpRiTrei4Voh5f
p5fwS6WUhK1h5hOyqf9UaZVsKC37FvmlKobaLx1U+6UY3d4yS9f59a7gl85w
k3T+jJ461eUtm2vQhqD/ZiP3l8VTub9Vp6iB1o/SdeTENLUwzY7lME2/YDt0
6UVdQvEu3V+6nKZutn5UqDPMiinxH/I4hDCRjlHnHMfUmJzVvfSnZcmCFDfC
Q+oMnNn7UAoekvLCTeyPTUEestlNgDXwYzaTp+iDJwom45EIIThFPdvv1Cjr
R1zdSUTG2gsIXiw2yqYOg38OvbT4GJr91pfZT6hnv6Jb/6el6+ITxOxk3YEz
1x8aluumlKKkh/HVpO8ubcVdG09ievw/mUWWpMUxJYXmkX/gmMSoMfGfqk5q
LlNFwCrdGQQmGdSErdn/ACZTIeMOrx1zAmHSpsak+JQak1xd6UNLiuctN0DZ
+P3ik3iS9gXli2rAu7onHlqWeJYqGQYof3x4qFz3kps98yo2fRcsINbxp6sj
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
2mFJv0xJfvvQcCu4pFjcOUEAewarrJ8MlMuL3Q0KSBJujLaUj86BZXjM9AZG
NOEbpfkQUd+gdd6n9eDtP+AlUbVzVAWho815+R1Dfk0gz99GLV9joNuj0aEB
GLQXz5Q/Q95zEGfV7lOgIWinuCUP1oQniXy7US4N1TUex2q4VXH6O9sR23uv
eONSr7UE/PHdUELJowHbhjmp2dW94426vlob9q9M5jpk7y30Ubu3cZ288zPx
DFkk493kYIQ/l9kP94AzKhvlFqsLYBmQjzvtG2HgtDOicPNrBZVQLq7yYTF9
EBe7HSS870Y7jBvgn41VBpM3VNMHS3PC7ORgdhNQqR+MbTXKXVLa87t4fXhb
+25wlJjS4Tl6w4K93vP/K37dwOPXc8Icc8GACVOOl/Em7bW2KDaakfyL5+7o
H6b/8p8fouW/Rwbs3p08o8Tzl+hjyRs9f9kekBy92KlcvHWulDbt77VXo4dk
8aa5z8XSrbRzt3aevPmx4PxuU8dXWDB6H5PfLhu62lnvfsC++Texx9XdjYnm
xe57SpfTT2hK/znVKCo9H2t67e6vZPM7d4NP9x3uSZZuFnx7u+ajkaK/0f29
L/c3scXN6JfuB/hQYjzorHMPs+WaHydN6z35JlR+9V29+yV7f2Jg9z1tDynn
3nEnnCuM3S2TFdzfaWrVIzlHPjvvarCp1SrSNm6K1F+6+TPvLOv4uyui0kzK
RQnLPMns+Ls0qcvW8xP6D9fpbEWz/1wjOzUc/Wicx3RucfzE/sOtOhHnk7em
v+rquS1LbCijf68pjbpTI2pjULhnDdPJNbKh84nDfexW/fTp3IfyvP7T0u7D
x2+KSu00EI13z4vOvdluarUoCVBZ9xiQkmEXyGfvPNhu+lt/nfv7YKBQtv0l
YB9BYH9LvuexrOBKpOm1BoS98c3tpo77vxON3/QSG8O+cY99pK5LcbyPbaQN
+D0Mvt3P7kGYPgx16meXjM+kuUgZ+7aeX2CueeZYxEv38gXiCQwzc87ZY8NS
i5TNf4SbXrsvPkc2PyHbbnrtHRr/xM3dprkPCGl217/pGII3VnKcbzUgR+u5
A0uSIs3fK7aYR23wPyNVyBX6LP1AdGV4+EdsvIli++lb6b+9gTF+x4focq55
N/w43DS3EEMKUdiz++aH01dFbbssgFdJjyM3XFDUuf9t0n84milGzN7zILZ+
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
/O9M+C8DUZI1Up0Iv/F/APY+4m8=
                    "]]|>, "orcInstance" -> 95148352, "orcModuleId" -> 
                    95298928, "targetMachineId" -> 67579456|>, 
                    139802690926416, 139802690926272, 139802690926352, 
                    139802690920448, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_2d692511_6427_420b_bdc4_fb521ea30e8c", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
n6JGYeHfAWGKv88=
                    "]]|>, "orcInstance" -> 95876736, "orcModuleId" -> 
                    70770576, "targetMachineId" -> 94368688|>, 
                    139802690912800, 139802690912400, 139802690912480, 
                    139802690912256, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", 
                    "$InputShape" -> {4, 300}, "$Batched" -> False, 
                    "$CompileBatchedWrapper" -> False, "$MXOpName" -> 
                    "3d482f8cebba5068", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 300}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 300}, 
                    NeuralNetworks`RealT]|>|>, 
                    "SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 300}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Error" -> <|"Type" -> "CrossEntropyLoss", 
                    "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 4, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 4]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "Target" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Outputs", "Loss"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.86785267138628*^9, 3.867890517081892*^9, 
  3.867892360169606*^9, 3.867892431703993*^9, 3.867892671650535*^9, 
  3.8678934753848133`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"4b1329bb-b6f2-40ff-86a0-d77fc7ee37f4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866180932479144*^9, 3.866180933335601*^9}, {
  3.866260506971014*^9, 3.8662605102109118`*^9}, {3.866262223194878*^9, 
  3.866262223474766*^9}, {3.8666027494425793`*^9, 3.866602750730301*^9}, {
  3.867466626541892*^9, 
  3.8674666272946873`*^9}},ExpressionUUID->"22d0189b-d6a7-44ad-b35a-\
70f7e8d0dd81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
    "softNet", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"testData", ",", 
          RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "4000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866262230733412*^9, 3.866262232700974*^9}, {
   3.866262747191399*^9, 3.866262755095587*^9}, {3.866263687522623*^9, 
   3.866263691522341*^9}, {3.866272907421722*^9, 3.866272908705574*^9}, {
   3.866274679974001*^9, 3.866274683777981*^9}, {3.866275126894273*^9, 
   3.866275130882132*^9}, {3.866275621030303*^9, 3.86627562449095*^9}, {
   3.866275800963348*^9, 3.866275804851942*^9}, {3.866278286918571*^9, 
   3.866278290408846*^9}, {3.866279939718389*^9, 3.8662799438283052`*^9}, {
   3.8662825835076027`*^9, 3.866282587086446*^9}, {3.8662848978232517`*^9, 
   3.8662849013340178`*^9}, {3.866301199025255*^9, 3.866301208705173*^9}, {
   3.866302091405136*^9, 3.866302093072084*^9}, {3.8663022330606956`*^9, 
   3.8663022743807373`*^9}, {3.866303190918262*^9, 3.8663031961042967`*^9}, {
   3.8663508996403513`*^9, 3.866350903983953*^9}, {3.8663558607588453`*^9, 
   3.866355860917651*^9}, {3.86637013313169*^9, 3.866370138430928*^9}, {
   3.866370237003203*^9, 3.866370239455555*^9}, {3.8663703291644793`*^9, 
   3.866370333111907*^9}, {3.866370363265703*^9, 3.866370363711856*^9}, {
   3.8663720431119947`*^9, 3.866372048852154*^9}, {3.866372163198892*^9, 
   3.8663721862104397`*^9}, 3.8663723957836103`*^9, {3.866372460806899*^9, 
   3.866372466981298*^9}, {3.8663728465397882`*^9, 3.866372846690668*^9}, {
   3.866439863015705*^9, 3.866439889076521*^9}, {3.866444399919945*^9, 
   3.866444403398275*^9}, 3.866445596437694*^9, 3.866445994629862*^9, {
   3.866446077093233*^9, 3.8664460772227592`*^9}, {3.866514058957122*^9, 
   3.866514061965129*^9}, {3.866514093672724*^9, 3.8665140946276417`*^9}, 
   3.866514530731886*^9, {3.866514784096607*^9, 3.866514784235477*^9}, {
   3.8665148543229303`*^9, 3.86651485485518*^9}, {3.866517197949828*^9, 
   3.866517203967832*^9}, 3.866517357579501*^9, 3.8665174374755917`*^9, 
   3.8665175119230967`*^9, {3.866517590284361*^9, 3.866517620168564*^9}, 
   3.8665176619240017`*^9, {3.8665179325026484`*^9, 3.8665179399815683`*^9}, {
   3.866518111910069*^9, 3.866518112233807*^9}, {3.866518521945266*^9, 
   3.866518522115803*^9}, {3.866518571201038*^9, 3.866518588328702*^9}, {
   3.866518646862028*^9, 3.866518650143523*^9}, 3.866518704027602*^9, {
   3.866519202548511*^9, 3.8665192068871107`*^9}, {3.866552934111923*^9, 
   3.866552991359269*^9}, {3.866553502473754*^9, 3.8665535030716467`*^9}, {
   3.866554417382031*^9, 3.866554420050095*^9}, {3.866554652086327*^9, 
   3.8665546522545357`*^9}, {3.86686620714637*^9, 3.866866208536282*^9}, {
   3.867131586949819*^9, 3.867131591208543*^9}, 3.867131663043725*^9, {
   3.867131881962668*^9, 3.8671318821029243`*^9}, {3.8671435395321627`*^9, 
   3.867143571356976*^9}, {3.867225758112248*^9, 3.867225764016302*^9}, {
   3.867225848543758*^9, 3.8672258697127447`*^9}, {3.8672259658939657`*^9, 
   3.8672259915292263`*^9}, {3.867226086215555*^9, 3.867226089976021*^9}, {
   3.8672261350253763`*^9, 3.867226203033741*^9}, {3.86722632250366*^9, 
   3.867226427456987*^9}, 3.867235234814995*^9, {3.86724310526048*^9, 
   3.867243107700055*^9}, 3.867292442863179*^9, {3.867379673640683*^9, 
   3.867379676973427*^9}, {3.867380356810781*^9, 3.867380356962483*^9}, {
   3.867399722631425*^9, 3.8673997262314672`*^9}, {3.867400074607986*^9, 
   3.867400084799662*^9}, {3.867400479559969*^9, 3.867400481738756*^9}, {
   3.867421063533587*^9, 3.867421064997341*^9}, {3.86759144532999*^9, 
   3.867591460699141*^9}, {3.867591774794105*^9, 3.8675917749695683`*^9}, {
   3.867593041039818*^9, 3.867593056406097*^9}, {3.867593515276932*^9, 
   3.86759352350137*^9}, {3.867593591941313*^9, 3.8675936595732317`*^9}, {
   3.867593831714517*^9, 3.867593831997171*^9}, {3.867595065092896*^9, 
   3.867595065243403*^9}, {3.867835916244355*^9, 3.867835918646139*^9}, 
   3.8678360557124443`*^9, 3.8678367200528717`*^9, {3.867837646912689*^9, 
   3.867837647063219*^9}, {3.867837717652178*^9, 3.8678377654535313`*^9}, {
   3.867837872184032*^9, 3.867837872308552*^9}, {3.8678379432341213`*^9, 
   3.867837967053742*^9}, {3.867838016209628*^9, 3.867838016385528*^9}, {
   3.867850413687476*^9, 3.867850413839301*^9}, {3.867852822453457*^9, 
   3.867852822881569*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"fbdac8c7-4549-4743-864d-e467d909f319"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedSoftNet", "=", 
  RowBox[{"NetExtract", "[", 
   RowBox[{
    RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
    "\"\<NeuralLogicNet\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866262883598037*^9, 3.866262913813736*^9}, {
  3.866865528144919*^9, 3.866865528678174*^9}, {3.8675914730807447`*^9, 
  3.8675914876778097`*^9}, {3.867594997374662*^9, 3.8675949984056892`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"c3a89cf2-7844-4806-bca2-4513232e25d6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]900\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "AND" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{3600, 64}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {3600, 64}|>,
                     "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {3600, 64}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Weights" -> NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Min" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {3600}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{3600}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {3600}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {3600}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {3600}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "AND", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "AND", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"BinaryMask"}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "BinaryMask" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Mask" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["BinaryMask"] Slot["Input"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Times], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"BinaryMask" -> 
                    NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "BinaryMask" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Inputs", "BinaryMask"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout", "Outputs", "BinaryMask"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Outputs", "Output"]}|>, 
                    "3" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 900}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 900}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 900}, 
                    NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3600\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3600\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ReshapeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]900\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]900\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8662628854701767`*^9, 3.86626291478244*^9}, 
   3.866263333811677*^9, 3.866263626951891*^9, 3.866275759059902*^9, 
   3.866278860640707*^9, 3.866279610307885*^9, 3.866283089053381*^9, 
   3.8662840988640747`*^9, 3.866301846366849*^9, 3.8663540211677637`*^9, 
   3.8663541757248697`*^9, 3.866354285702705*^9, 3.866354708948234*^9, 
   3.86635480352043*^9, 3.866354946410275*^9, 3.866355129778678*^9, 
   3.866355344404036*^9, 3.8663554109601917`*^9, 3.866355601157222*^9, 
   3.86635584447652*^9, 3.866357046548826*^9, 3.86635827058148*^9, 
   3.8663603567232637`*^9, 3.8663629451402597`*^9, 3.866363945271487*^9, 
   3.866365130852272*^9, 3.866366035676786*^9, 3.866368355050816*^9, 
   3.8663699230437717`*^9, 3.866371572266882*^9, 3.866438770864565*^9, 
   3.86643896077918*^9, 3.8664391415025454`*^9, 3.866439242730338*^9, 
   3.86643934064322*^9, 3.866439448330102*^9, 3.866440229932144*^9, 
   3.8664404742813272`*^9, 3.8664405592015047`*^9, 3.8664414085277576`*^9, 
   3.8664414792281923`*^9, 3.866441619893333*^9, 3.866441689406056*^9, 
   3.8664417857252293`*^9, 3.866441899861754*^9, 3.866442041711031*^9, 
   3.8664421438082438`*^9, 3.86644220577691*^9, 3.866442923332512*^9, 
   3.866443105210555*^9, 3.866443215017268*^9, 3.866443324261043*^9, 
   3.866443392091382*^9, 3.866443463860209*^9, 3.866443916112817*^9, 
   3.866443978954742*^9, 3.8664440999870872`*^9, 3.866444384668812*^9, 
   3.8664455526363*^9, 3.8664459767216597`*^9, 3.8664460963830557`*^9, 
   3.866446198128482*^9, 3.866446371505559*^9, 3.8664466173131857`*^9, 
   3.866446726857621*^9, 3.866446949046866*^9, 3.866447055125682*^9, 
   3.8665132494825897`*^9, 3.866513528458088*^9, 3.866513862467455*^9, 
   3.866514588270062*^9, 3.8665196537633457`*^9, 3.866521033301351*^9, 
   3.866524695734989*^9, 3.8665277373817797`*^9, 3.866528003896955*^9, 
   3.866529999675105*^9, 3.866532541000852*^9, 3.8665328100689297`*^9, 
   3.866542863935906*^9, 3.86654363350113*^9, 3.866545845362557*^9, 
   3.866546635196596*^9, 3.866547880940085*^9, 3.866549439453635*^9, 
   3.8665500175016737`*^9, 3.8665510002342978`*^9, 3.866553594781185*^9, 
   3.8665537613351927`*^9, 3.866554194193324*^9, 3.8665543759376163`*^9, 
   3.8665557900087967`*^9, 3.866600803446225*^9, 3.86660110824417*^9, 
   3.8666014083894787`*^9, 3.8666032722125683`*^9, 3.866603646506237*^9, 
   3.866603924967039*^9, 3.866614149217051*^9, 3.866614517604972*^9, 
   3.8666150772760963`*^9, 3.866615910520022*^9, 3.866617005433221*^9, 
   3.866620518171906*^9, 3.86662136387157*^9, 3.866621931729815*^9, 
   3.86662265578474*^9, 3.866623643819304*^9, 3.866623929846479*^9, 
   3.8666243138661947`*^9, 3.866625027852901*^9, 3.866625329973116*^9, 
   3.8666263955294523`*^9, 3.866626636440639*^9, 3.8666301937443323`*^9, 
   3.866635284071369*^9, 3.8666379464893007`*^9, 3.866865267141653*^9, 
   3.8668659776585407`*^9, 3.8668665360607643`*^9, 3.8668674552454987`*^9, 
   3.866874124396035*^9, 3.86687497460295*^9, 3.8668969132601852`*^9, 
   3.866898071418168*^9, 3.866898609243305*^9, 3.866899135802105*^9, 
   3.866900146525358*^9, 3.866900346483822*^9, 3.86690075029182*^9, 
   3.866942200550881*^9, 3.8669434691033688`*^9, 3.8669440568455133`*^9, 
   3.866944409151135*^9, 3.866946623331648*^9, 3.866950472530398*^9, 
   3.8669509935934668`*^9, 3.866951548335429*^9, 3.866952511511688*^9, 
   3.866953356553648*^9, 3.8669542721524076`*^9, 3.866955408462162*^9, 
   3.866955759821617*^9, 3.866956215314837*^9, 3.866956489039291*^9, 
   3.866957050192541*^9, 3.8669574385039263`*^9, 3.8669581345274153`*^9, 
   3.866958404615336*^9, 3.866958748148402*^9, 3.8669592708283167`*^9, 
   3.866960524376287*^9, 3.866960648062818*^9, 3.866964482955254*^9, 
   3.866965870107953*^9, 3.8669665698327627`*^9, 3.866966912796961*^9, 
   3.866967234979121*^9, 3.8669675446415567`*^9, 3.8669681544987707`*^9, 
   3.8669687474689293`*^9, 3.866969471312014*^9, 3.866975997689666*^9, 
   3.86697784559586*^9, 3.866988474220516*^9, 3.867070541267486*^9, 
   3.867071141063098*^9, 3.867071512821946*^9, 3.867072495499333*^9, 
   3.867072807623479*^9, 3.867073708828951*^9, 3.867074044368046*^9, 
   3.8670743576774607`*^9, 3.867074511128997*^9, 3.867074885972481*^9, 
   3.867075384159924*^9, 3.867075666872263*^9, 3.8670759595572643`*^9, 
   3.867130703473978*^9, 3.8671325789590693`*^9, 3.867142055908609*^9, 
   3.867142222402884*^9, 3.86714258728478*^9, 3.8671430669219217`*^9, 
   3.8671432468665457`*^9, 3.867144668168933*^9, 3.867145744115079*^9, 
   3.86714627085634*^9, 3.8671501033240128`*^9, 3.86715087699004*^9, 
   3.867152069829074*^9, 3.867152733883814*^9, 3.86715325574749*^9, 
   3.867159760259474*^9, 3.867161045989644*^9, 3.867161593031602*^9, 
   3.867162093302425*^9, 3.867162545278716*^9, 3.867162929672419*^9, 
   3.8671631215691357`*^9, 3.8671635752851887`*^9, 3.867163736166375*^9, 
   3.867164020783208*^9, 3.8671642536302013`*^9, 3.867164730673498*^9, 
   3.86720897018189*^9, 3.867209543944471*^9, 3.867210754863386*^9, 
   3.867213186296348*^9, 3.867213987741856*^9, 3.867214842121695*^9, 
   3.867215183394917*^9, 3.867216239673912*^9, 3.867216550433502*^9, 
   3.86721673027888*^9, 3.867217090260976*^9, 3.867217943020084*^9, 
   3.867219362485512*^9, 3.86721988612037*^9, 3.867220752092207*^9, 
   3.867224123145873*^9, 3.8672245028341417`*^9, 3.867224893030838*^9, 
   3.867225253221676*^9, 3.867226899220113*^9, 3.867227193709606*^9, 
   3.867227850496901*^9, 3.8672282892724247`*^9, 3.867235574360211*^9, 
   3.867235802347309*^9, 3.86723620735044*^9, 3.867236645705991*^9, 
   3.867237664538694*^9, 3.8672382521528063`*^9, 3.867238903085815*^9, 
   3.867239250507195*^9, 3.8672396236514893`*^9, 3.867239883283255*^9, 
   3.8672402566845303`*^9, 3.8672416694881287`*^9, 3.867241919213375*^9, 
   3.8672433504474154`*^9, 3.867243745229207*^9, 3.867244112883206*^9, 
   3.8672444029692574`*^9, 3.867244627217216*^9, 3.867292663020062*^9, 
   3.867293070341237*^9, 3.867293578277958*^9, 3.867293942874217*^9, 
   3.867294254384894*^9, 3.867294581837659*^9, 3.8672951611778097`*^9, 
   3.867295683005228*^9, 3.867304246515335*^9, 3.867304762852366*^9, 
   3.867305406975029*^9, 3.867305771133658*^9, 3.8673062724983683`*^9, 
   3.867306606408617*^9, 3.867307169408957*^9, 3.867307380094698*^9, 
   3.8673104061289043`*^9, 3.867311088972395*^9, 3.867311638861496*^9, 
   3.8673118554485693`*^9, 3.867312160097467*^9, 3.8673135117500153`*^9, 
   3.867314146997654*^9, 3.867314434514402*^9, 3.8673181359732227`*^9, 
   3.867318455978945*^9, 3.867318746946628*^9, 3.867319245380412*^9, 
   3.867319558308886*^9, 3.867321199984851*^9, 3.867321463552224*^9, 
   3.8673233735844727`*^9, 3.867323787084449*^9, 3.8673241725604258`*^9, 
   3.867329659517404*^9, 3.867329976854364*^9, 3.8673307791571836`*^9, 
   3.8673310481814213`*^9, 3.8673312110003557`*^9, 3.867331396102231*^9, 
   3.867331840615056*^9, 3.8673327651571198`*^9, 3.867333807483214*^9, 
   3.867334267485148*^9, 3.867379551509262*^9, 3.867379706118277*^9, 
   3.867380208989422*^9, 3.867380441625167*^9, 3.8673807366328*^9, 
   3.867381302682927*^9, 3.867381745571897*^9, 3.86738205042131*^9, 
   3.867382491688291*^9, 3.8673830913584557`*^9, 3.8673834757586*^9, 
   3.8673843358910027`*^9, 3.8673847159639587`*^9, 3.867385052790865*^9, 
   3.8673861417047033`*^9, 3.8673864721323223`*^9, 3.867387027954995*^9, 
   3.867387452676517*^9, 3.867387822766666*^9, 3.8673880857180634`*^9, 
   3.867388433783766*^9, 3.8673999983117247`*^9, 3.867400309497061*^9, 
   3.867400765912784*^9, 3.8674042712454023`*^9, 3.867405171660681*^9, 
   3.8674055927740173`*^9, 3.86740679373538*^9, 3.867407616891014*^9, 
   3.867408261660056*^9, 3.867409571049901*^9, 3.867410389073472*^9, 
   3.8674107990115547`*^9, 3.867411931104046*^9, 3.867418477304476*^9, 
   3.8674190261068087`*^9, 3.8674195901094227`*^9, 3.8674207603084717`*^9, 
   3.86742184116043*^9, 3.867464383052712*^9, 3.867465332275449*^9, 
   3.8674692876969976`*^9, 3.867470425821095*^9, 3.867471394303174*^9, 
   3.8674800170308723`*^9, 3.8674821001653957`*^9, 3.867483077270279*^9, 
   3.86748399390837*^9, 3.86748571092913*^9, 3.867485930024376*^9, 
   3.867486406530424*^9, 3.86756560623253*^9, 3.867565882218875*^9, 
   3.867566129295733*^9, 3.867566486408596*^9, 3.867568883178177*^9, 
   3.867569364404112*^9, 3.867576249193199*^9, 3.867577034087057*^9, 
   3.86758006294209*^9, 3.867580361914866*^9, 3.8675813554675922`*^9, 
   3.867591413262083*^9, 3.8675916969228163`*^9, 3.8675921416186953`*^9, 
   3.867592476569607*^9, 3.867593307680511*^9, 3.867594998911373*^9, 
   3.8676382636106043`*^9, 3.8676506346064453`*^9, 3.8676528842179947`*^9, 
   3.867654807175769*^9, 3.867656382543395*^9, 3.8676598275474453`*^9, 
   3.867660583738608*^9, 3.867820776062737*^9, 3.8678213353311234`*^9, 
   3.867823748394882*^9, 3.867831234747699*^9, 3.8678374859678907`*^9, 
   3.8678469174561987`*^9, 3.8678523440620747`*^9, 3.8678968029434433`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"a4210781-b87e-4cd4-baf3-14f1670cfa24"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.865509544459216*^9, 3.865509545362651*^9}, {3.8668654702612267`*^9, 
  3.866865471244494*^9}},ExpressionUUID->"e2a69d6c-fddf-4ce0-9a60-\
6b136e91fb12"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{
    RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
    RowBox[{"ConvertDataToClasses", "[", "testData", "]"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8675912624933243`*^9, 3.8675912645650873`*^9}, {
  3.867591419757333*^9, 3.86759142034127*^9}, {3.867591718010557*^9, 
  3.867591738878278*^9}, {3.8675933493486156`*^9, 3.867593351860548*^9}, {
  3.867595003334629*^9, 3.867595005556345*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"61cf3e56-b150-406f-a005-b09cf3a4f4b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"softPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainedSoftNet", "[", 
         RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardenedPredictionTargetPairs", "=", 
   RowBox[{"Harden", "[", "softPredictionTargetPairs", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8632403336213713`*^9, 3.863240377260723*^9}, 
   3.864794328166184*^9, {3.864794407903618*^9, 3.864794436294898*^9}, {
   3.8650544818297043`*^9, 3.865054482561998*^9}, {3.8650591999549913`*^9, 
   3.865059216538383*^9}, {3.865060098170718*^9, 3.865060117548669*^9}, {
   3.865083374025154*^9, 3.865083380805747*^9}, {3.8650835363762093`*^9, 
   3.865083538071233*^9}, {3.865590907688581*^9, 3.865590907991177*^9}, {
   3.865610944975788*^9, 3.865610947181724*^9}, {3.865655407744947*^9, 
   3.865655408023315*^9}, {3.86626050147324*^9, 3.8662605016737347`*^9}, {
   3.86626089567375*^9, 3.86626089681426*^9}, 3.866260938745146*^9, {
   3.866262482360608*^9, 3.866262529517881*^9}, {3.866262922944813*^9, 
   3.866262923422676*^9}, {3.866368441574706*^9, 3.8663684417477407`*^9}, {
   3.8665196844820623`*^9, 3.8665196894081583`*^9}, {3.86651977579454*^9, 
   3.8665198307447023`*^9}, {3.866543759104864*^9, 3.866543761043337*^9}, {
   3.866543933814775*^9, 3.866543946874074*^9}, {3.866544213286334*^9, 
   3.8665442159066887`*^9}, {3.866544345821237*^9, 3.866544359573098*^9}, {
   3.866544406102911*^9, 3.866544410862302*^9}, {3.8665444631671553`*^9, 
   3.866544554177885*^9}, {3.8665453759492197`*^9, 3.866545380545129*^9}, {
   3.866637950431554*^9, 3.866637951085165*^9}, {3.866865285097145*^9, 
   3.866865285469962*^9}, {3.8668653748813343`*^9, 3.8668653802748404`*^9}, {
   3.866865532978038*^9, 3.866865534495945*^9}, {3.866866544565024*^9, 
   3.866866545127615*^9}, 3.867162578537319*^9, {3.867219455610979*^9, 
   3.867219455860599*^9}, {3.8675912676571007`*^9, 3.86759126780343*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"a637f3cb-d7f7-4492-ad2f-108fbd4b3b99"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 93.9858%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "5167"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "4643"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}], "\[Rule]", "4410"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "4392"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", "213"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", "199"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", "174"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "133"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "\[Rule]", "105"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "100"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", "75"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", "69"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "1"}], "}"}], "\[Rule]", "50"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", "42"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "21"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "10"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->CompressedData["
1:eJwd1Xs4VGkcB3CXlqLtKol23UaKMUItRaWpTFppyK2btrEiyn0kKvO4xKrY
NJUY15AuRBFFKZQoNSJPRKlN5BZaRDXt77vnj/N5nvc95/e87/s9v+do8nzt
3aWl6KKbxSjzLf9Z/1qz9wJmMPnFfrov9NzN6IQavIeaoeSHCsUTkN0ZwY4m
96axmqBSQYjyMXJXnLELNFQ43gJVOk5+gjKSqVox5EuP7btTyDDtzu+Q2+zE
EZEXtf0D4V/TNGNTybYF3H3pmK/2uwxlz671zCCNfV82wrYfa9Znkl5Rbs+h
fqy5BF5n6ppmkS/kIrfB56Ux6TApZJYYjqnO1r2A/SW/3AgLh5sC4QwjjRKY
trPRLpu8p2W1B04NLrLMJeWXswYh+0nxhoukyCTID9al3UmCQ/ODKuGi1BzF
PLL3UasjZJ6wLoQaTfM6r6Be/bzaq+Tc5hvjRVhf30yFNjJfPMcRmlmkREKG
P1cCVyR76rwic+p/nIGD90cqoc1i627Ysm39JByaMFnSTloopXjA0KAXcXBQ
cfs16NTp6jVOSt1qdPhCnsw9NPqNXKdvpvAd8383m8IZ/IZA+PN5+zhod63d
XEJGjThVQckD7pQfpJXDhn+kxP1r89b2r5MmORWtIlhhZ9oKG2YvZ8qQnda2
B+BWG2NzOfKuMC4c/nms+Q7kVseMQc/l7ovkSTfVXavhJ8Hcg3D1FJPj/8uv
LoDrDDoew0f9AvmppFFVSOYvZJm18UeovCxF8CvZ8eZQoTrZbpGrpEHypPnh
UIalexnO4uuwNMmsPd8doOxEvTfU8g5Ogj5v58hqkXtVIothFntsFOrvM+Np
k1NkkuV1yFslM01hT2yLB/Sc3SqEk27pvEXkfp1zMdB5zfFWGLDhzCxdMiNP
IV2PzOZGl0PpZ8xBKDo3zNAn14u52VBs+mgARqzSXsPEPmpPe0GfLYbnoVNd
1y0oWhbcAw3Ew0kG5FCwURnktWh5s8irQbEiqNCwsx72vesbhEuEtQqGeJ7X
Hm5FltfMug7PCjOH4SVbW3UOqVc83Qq2xxv4QkZNQClUZ7lOQF+pAF0b8rBa
uQdMcrUsg4N2TV3Qa+AgYzPyijOxha68U0LYXN1fAC95Ll6yhfzgLDgKLy+0
rIaeV3e8hlK+HlO4yCPKLR8Ku+5+gyHKlRp2pNLN/Z/syW61XfO3YrzstjlM
K5MLhSWNSzPh7VNePg5k7VVOArT/bHbUkXQ3tYiGN16XFEGh+t23UKUnPcGF
fCq1sRSaVCepbcN5N5isgqGl8XYwOLvQEzrHsjOgqtfTudvJlh7Ls5B5M+MZ
TPqg2u9HntHbNAIzFP1+wOABzmp/Uj7HeQdUSzATwPch0rVQPOQmgdNzwhgB
qGObugMGFiTmQp5mdgu82cZgB5KO93P9YXtBRQpc2fFaO4isnLF0M8zSy0+E
NQX3a+HKaTJjkPX5jTKf3J7HY8OnAV+7Q8lff3szIwz9LjvEgSOxypLD5MLC
Kz5HyCo+5wK0DYhfcZR8J7UzAz7QWzYMRb0iYTjOIeLVJLwbN58lIPO9LpdD
UXHvQCQ5nHDdOAr1vWUOwYdWtorR6JsJj0SosNfCJRl5/1T3FMoyHO6IsN4F
4b+nklGlITVwsSNnMpPk32mek4U6H8+rwhjxDQnMKxaHXCDjvnj0wd6V8lXZ
pE2YeweMj/yqkoP3wj7XPMZ3Mry/GxYu3iT3hAzaNWIMIwxPujaQA++uJ0P2
H07jYrLe7sC2RrJoclrzc7Ju5v4JeDNBxG8ilfNN778kE000PkKjsF5GG7nx
e+X6T8i968aWUeQyObZvjLzHrHMZR397b1b7QpY9LmmYIB3czupNklvncfZs
bKT/z5G0vbDC8HQeXDlt+StrMt5VEL2Z1D51TsglbZbIf3Am/61KPH2A/A9Q
XW93
  "],
 CellLabel->"Out[24]=",ExpressionUUID->"7325ebe8-a581-46ef-84f5-586442c1e3ac"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"RandomSample", "[", 
       RowBox[{"hardenedPredictionTargetPairs", ",", "5"}], "]"}], ",", "1"}],
      "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"True", "->", 
     RowBox[{"Style", "[", 
      RowBox[{"True", ",", "Red"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.867383550245969*^9, 3.867383551294194*^9}, 
   3.867896997431472*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"fd20a90c-0e3a-42a1-ac7f-bc712b1b2778"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"First", "/@", "softPredictionTargetPairs"}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867214498029375*^9, 3.867214530414569*^9}, {
  3.867382601200721*^9, 3.867382603134129*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"0bd26ae7-e31b-4a68-b76a-1002446f1f03"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.693], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.693], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {1., 1.267392*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{46.45824315702562, 
           353.36649475830666`}, {-97.07787911292667, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1267392]& ,
        TagBoxNote->"1267392"],
       StyleBox["1267392", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1267392, {}], "Tooltip"]& ]}, {}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.02, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8672145012856503`*^9, 3.86721453103242*^9}, 
   3.867214886673502*^9, 3.8672152540007877`*^9, 3.867216351594112*^9, 
   3.8672165884984837`*^9, 3.867216774551539*^9, 3.867217133104129*^9, 
   3.867217991284543*^9, 3.867219410741493*^9, 3.867219941199617*^9, 
   3.867220804408003*^9, 3.867224167423118*^9, 3.867224953652439*^9, 
   3.867225310024466*^9, 3.8672269464513607`*^9, 3.8672279101112137`*^9, 
   3.867235616907338*^9, 3.86723626603331*^9, 3.867236701548422*^9, 
   3.867237717473666*^9, 3.867238308657311*^9, 3.867239307370199*^9, 
   3.867239677388426*^9, 3.8672399522345467`*^9, 3.8672403054119577`*^9, 
   3.867241727039076*^9, 3.86724339296774*^9, 3.867243812575938*^9, 
   3.867244167981337*^9, 3.867244457449991*^9, 3.86729274240382*^9, 
   3.867293628350546*^9, 3.867293994011964*^9, 3.867294651545733*^9, 
   3.867295760022895*^9, 3.867304327902404*^9, 3.867305469868129*^9, 
   3.8673063345418577`*^9, 3.867307248568591*^9, 3.8673119534948187`*^9, 
   3.8673135773524446`*^9, 3.867318191097289*^9, 3.867323471170349*^9, 
   3.867329702532007*^9, 3.8673300425460663`*^9, {3.8673825758518867`*^9, 
   3.867382603921441*^9}, 3.867383554208437*^9, 3.867386533410076*^9, 
   3.867408323390875*^9, 3.867419651396039*^9, 3.867469394209402*^9, 
   3.86757711535248*^9, 3.867580419259817*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"1a24ac2b-d34b-497b-8ebc-0ded7865b3b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"ExtractWeights", "[", "trainedSoftNet", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866953397932728*^9, 3.866953404315634*^9}, {
  3.866953505684793*^9, 3.866953515956293*^9}, {3.867305490607383*^9, 
  3.867305500732195*^9}, {3.867382609248455*^9, 3.867382611150051*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"4836d32b-7df4-4c05-858e-1e553b9f2099"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
    Opacity[0.]], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
     Opacity[0.]], RectangleBox[{-0.02, 0}, {-0.015, 1.},
      RoundingRadius->0], RectangleBox[{-0.015, 0}, {-0.01, 42.},
      RoundingRadius->0], RectangleBox[{-0.01, 0}, {-0.005, 213.},
      RoundingRadius->0], RectangleBox[{-0.005, 0}, {0., 4328.},
      RoundingRadius->0], RectangleBox[{0., 0}, {0.005, 26904.},
      RoundingRadius->0], RectangleBox[{0.005, 0}, {0.01, 184.},
      RoundingRadius->0], RectangleBox[{0.01, 0}, {0.015, 136.},
      RoundingRadius->0], RectangleBox[{0.015, 0}, {0.02, 108.},
      RoundingRadius->0], RectangleBox[{0.02, 0}, {0.025, 90.},
      RoundingRadius->0], RectangleBox[{0.025, 0}, {0.03, 75.},
      RoundingRadius->0], RectangleBox[{0.03, 0}, {0.035, 102.},
      RoundingRadius->0], RectangleBox[{0.035, 0}, {0.04, 58.},
      RoundingRadius->0], RectangleBox[{0.04, 0}, {0.045, 73.},
      RoundingRadius->0], RectangleBox[{0.045, 0}, {0.05, 94.},
      RoundingRadius->0], RectangleBox[{0.05, 0}, {0.055, 47.},
      RoundingRadius->0], RectangleBox[{0.055, 0}, {0.06, 78.},
      RoundingRadius->0], RectangleBox[{0.06, 0}, {0.065, 58.},
      RoundingRadius->0], RectangleBox[{0.065, 0}, {0.07, 99.},
      RoundingRadius->0], RectangleBox[{0.07, 0}, {0.075, 107.},
      RoundingRadius->0], RectangleBox[{0.075, 0}, {0.08, 85.},
      RoundingRadius->0], RectangleBox[{0.08, 0}, {0.085, 67.},
      RoundingRadius->0], RectangleBox[{0.085, 0}, {0.09, 67.},
      RoundingRadius->0], RectangleBox[{0.09, 0}, {0.095, 74.},
      RoundingRadius->0], RectangleBox[{0.095, 0}, {0.1, 104.},
      RoundingRadius->0], RectangleBox[{0.1, 0}, {0.105, 141.},
      RoundingRadius->0], RectangleBox[{0.105, 0}, {0.11, 124.},
      RoundingRadius->0], RectangleBox[{0.11, 0}, {0.115, 129.},
      RoundingRadius->0], RectangleBox[{0.115, 0}, {0.12, 136.},
      RoundingRadius->0], RectangleBox[{0.12, 0}, {0.125, 106.},
      RoundingRadius->0], RectangleBox[{0.125, 0}, {0.13, 82.},
      RoundingRadius->0], RectangleBox[{0.13, 0}, {0.135, 64.},
      RoundingRadius->0], RectangleBox[{0.135, 0}, {0.14, 87.},
      RoundingRadius->0], RectangleBox[{0.14, 0}, {0.145, 58.},
      RoundingRadius->0], RectangleBox[{0.145, 0}, {0.15, 69.},
      RoundingRadius->0], RectangleBox[{0.15, 0}, {0.155, 64.},
      RoundingRadius->0], RectangleBox[{0.155, 0}, {0.16, 49.},
      RoundingRadius->0], RectangleBox[{0.16, 0}, {0.165, 53.},
      RoundingRadius->0], RectangleBox[{0.165, 0}, {0.17, 81.},
      RoundingRadius->0], RectangleBox[{0.17, 0}, {0.175, 55.},
      RoundingRadius->0], RectangleBox[{0.175, 0}, {0.18, 44.},
      RoundingRadius->0], RectangleBox[{0.18, 0}, {0.185, 57.},
      RoundingRadius->0], RectangleBox[{0.185, 0}, {0.19, 78.},
      RoundingRadius->0], RectangleBox[{0.19, 0}, {0.195, 42.},
      RoundingRadius->0], RectangleBox[{0.195, 0}, {0.2, 61.},
      RoundingRadius->0], RectangleBox[{0.2, 0}, {0.205, 43.},
      RoundingRadius->0], RectangleBox[{0.205, 0}, {0.21, 48.},
      RoundingRadius->0], RectangleBox[{0.21, 0}, {0.215, 34.},
      RoundingRadius->0], RectangleBox[{0.215, 0}, {0.22, 58.},
      RoundingRadius->0], RectangleBox[{0.22, 0}, {0.225, 85.},
      RoundingRadius->0], RectangleBox[{0.225, 0}, {0.23, 44.},
      RoundingRadius->0], RectangleBox[{0.23, 0}, {0.235, 32.},
      RoundingRadius->0], RectangleBox[{0.235, 0}, {0.24, 38.},
      RoundingRadius->0], RectangleBox[{0.24, 0}, {0.245, 37.},
      RoundingRadius->0], RectangleBox[{0.245, 0}, {0.25, 37.},
      RoundingRadius->0], RectangleBox[{0.25, 0}, {0.255, 34.},
      RoundingRadius->0], RectangleBox[{0.255, 0}, {0.26, 19.},
      RoundingRadius->0], RectangleBox[{0.26, 0}, {0.265, 23.},
      RoundingRadius->0], RectangleBox[{0.265, 0}, {0.27, 26.},
      RoundingRadius->0], RectangleBox[{0.27, 0}, {0.275, 31.},
      RoundingRadius->0], RectangleBox[{0.275, 0}, {0.28, 15.},
      RoundingRadius->0], RectangleBox[{0.28, 0}, {0.285, 30.},
      RoundingRadius->0], RectangleBox[{0.285, 0}, {0.29, 43.},
      RoundingRadius->0], RectangleBox[{0.29, 0}, {0.295, 26.},
      RoundingRadius->0], RectangleBox[{0.295, 0}, {0.3, 22.},
      RoundingRadius->0], RectangleBox[{0.3, 0}, {0.305, 34.},
      RoundingRadius->0], RectangleBox[{0.305, 0}, {0.31, 26.},
      RoundingRadius->0], RectangleBox[{0.31, 0}, {0.315, 30.},
      RoundingRadius->0], RectangleBox[{0.315, 0}, {0.32, 25.},
      RoundingRadius->0], RectangleBox[{0.32, 0}, {0.325, 22.},
      RoundingRadius->0], RectangleBox[{0.325, 0}, {0.33, 22.},
      RoundingRadius->0], RectangleBox[{0.33, 0}, {0.335, 21.},
      RoundingRadius->0], RectangleBox[{0.335, 0}, {0.34, 19.},
      RoundingRadius->0], RectangleBox[{0.34, 0}, {0.345, 27.},
      RoundingRadius->0], RectangleBox[{0.345, 0}, {0.35, 27.},
      RoundingRadius->0], RectangleBox[{0.35, 0}, {0.355, 13.},
      RoundingRadius->0], RectangleBox[{0.355, 0}, {0.36, 19.},
      RoundingRadius->0], RectangleBox[{0.36, 0}, {0.365, 23.},
      RoundingRadius->0], RectangleBox[{0.365, 0}, {0.37, 18.},
      RoundingRadius->0], RectangleBox[{0.37, 0}, {0.375, 22.},
      RoundingRadius->0], RectangleBox[{0.375, 0}, {0.38, 24.},
      RoundingRadius->0], RectangleBox[{0.38, 0}, {0.385, 13.},
      RoundingRadius->0], RectangleBox[{0.385, 0}, {0.39, 14.},
      RoundingRadius->0], RectangleBox[{0.39, 0}, {0.395, 18.},
      RoundingRadius->0], RectangleBox[{0.395, 0}, {0.4, 16.},
      RoundingRadius->0], RectangleBox[{0.4, 0}, {0.405, 13.},
      RoundingRadius->0], RectangleBox[{0.405, 0}, {0.41, 20.},
      RoundingRadius->0], RectangleBox[{0.41, 0}, {0.415, 11.},
      RoundingRadius->0], RectangleBox[{0.415, 0}, {0.42, 9.},
      RoundingRadius->0], RectangleBox[{0.42, 0}, {0.425, 12.},
      RoundingRadius->0], RectangleBox[{0.425, 0}, {0.43, 15.},
      RoundingRadius->0], RectangleBox[{0.43, 0}, {0.435, 12.},
      RoundingRadius->0], RectangleBox[{0.435, 0}, {0.44, 16.},
      RoundingRadius->0], RectangleBox[{0.44, 0}, {0.445, 7.},
      RoundingRadius->0], RectangleBox[{0.445, 0}, {0.45, 12.},
      RoundingRadius->0], RectangleBox[{0.45, 0}, {0.455, 15.},
      RoundingRadius->0], RectangleBox[{0.455, 0}, {0.46, 13.},
      RoundingRadius->0], RectangleBox[{0.46, 0}, {0.465, 14.},
      RoundingRadius->0], RectangleBox[{0.465, 0}, {0.47, 16.},
      RoundingRadius->0], RectangleBox[{0.47, 0}, {0.475, 16.},
      RoundingRadius->0], RectangleBox[{0.475, 0}, {0.48, 22.},
      RoundingRadius->0], RectangleBox[{0.48, 0}, {0.485, 28.},
      RoundingRadius->0], RectangleBox[{0.485, 0}, {0.49, 32.},
      RoundingRadius->0], RectangleBox[{0.49, 0}, {0.495, 35.},
      RoundingRadius->0], RectangleBox[{0.495, 0}, {0.5, 91.},
      RoundingRadius->0], RectangleBox[{0.5, 0}, {0.505, 86.},
      RoundingRadius->0], RectangleBox[{0.505, 0}, {0.51, 40.},
      RoundingRadius->0], RectangleBox[{0.51, 0}, {0.515, 9.},
      RoundingRadius->0], RectangleBox[{0.515, 0}, {0.52, 18.},
      RoundingRadius->0], RectangleBox[{0.52, 0}, {0.525, 24.},
      RoundingRadius->0], RectangleBox[{0.525, 0}, {0.53, 17.},
      RoundingRadius->0], RectangleBox[{0.53, 0}, {0.535, 15.},
      RoundingRadius->0], RectangleBox[{0.535, 0}, {0.54, 14.},
      RoundingRadius->0], RectangleBox[{0.54, 0}, {0.545, 12.},
      RoundingRadius->0], RectangleBox[{0.545, 0}, {0.55, 12.},
      RoundingRadius->0], RectangleBox[{0.55, 0}, {0.555, 15.},
      RoundingRadius->0], RectangleBox[{0.555, 0}, {0.56, 13.},
      RoundingRadius->0], RectangleBox[{0.56, 0}, {0.565, 15.},
      RoundingRadius->0], RectangleBox[{0.565, 0}, {0.57, 19.},
      RoundingRadius->0], RectangleBox[{0.57, 0}, {0.575, 26.},
      RoundingRadius->0], RectangleBox[{0.575, 0}, {0.58, 20.},
      RoundingRadius->0], RectangleBox[{0.58, 0}, {0.585, 24.},
      RoundingRadius->0], RectangleBox[{0.585, 0}, {0.59, 23.},
      RoundingRadius->0], RectangleBox[{0.59, 0}, {0.595, 26.},
      RoundingRadius->0], RectangleBox[{0.595, 0}, {0.6, 37.},
      RoundingRadius->0], RectangleBox[{0.6, 0}, {0.605, 23.},
      RoundingRadius->0], RectangleBox[{0.605, 0}, {0.61, 22.},
      RoundingRadius->0], RectangleBox[{0.61, 0}, {0.615, 19.},
      RoundingRadius->0], RectangleBox[{0.615, 0}, {0.62, 25.},
      RoundingRadius->0], RectangleBox[{0.62, 0}, {0.625, 29.},
      RoundingRadius->0], RectangleBox[{0.625, 0}, {0.63, 24.},
      RoundingRadius->0], RectangleBox[{0.63, 0}, {0.635, 41.},
      RoundingRadius->0], RectangleBox[{0.635, 0}, {0.64, 31.},
      RoundingRadius->0], RectangleBox[{0.64, 0}, {0.645, 26.},
      RoundingRadius->0], RectangleBox[{0.645, 0}, {0.65, 42.},
      RoundingRadius->0], RectangleBox[{0.65, 0}, {0.655, 48.},
      RoundingRadius->0], RectangleBox[{0.655, 0}, {0.66, 32.},
      RoundingRadius->0], RectangleBox[{0.66, 0}, {0.665, 23.},
      RoundingRadius->0], RectangleBox[{0.665, 0}, {0.67, 14.},
      RoundingRadius->0], RectangleBox[{0.67, 0}, {0.675, 16.},
      RoundingRadius->0], RectangleBox[{0.675, 0}, {0.68, 15.},
      RoundingRadius->0], RectangleBox[{0.68, 0}, {0.685, 35.},
      RoundingRadius->0], RectangleBox[{0.685, 0}, {0.69, 18.},
      RoundingRadius->0], RectangleBox[{0.69, 0}, {0.695, 20.},
      RoundingRadius->0], RectangleBox[{0.695, 0}, {0.7, 22.},
      RoundingRadius->0], RectangleBox[{0.7, 0}, {0.705, 23.},
      RoundingRadius->0], RectangleBox[{0.705, 0}, {0.71, 16.},
      RoundingRadius->0], RectangleBox[{0.71, 0}, {0.715, 18.},
      RoundingRadius->0], RectangleBox[{0.715, 0}, {0.72, 24.},
      RoundingRadius->0], RectangleBox[{0.72, 0}, {0.725, 11.},
      RoundingRadius->0], RectangleBox[{0.725, 0}, {0.73, 11.},
      RoundingRadius->0], RectangleBox[{0.73, 0}, {0.735, 11.},
      RoundingRadius->0], RectangleBox[{0.735, 0}, {0.74, 26.},
      RoundingRadius->0], RectangleBox[{0.74, 0}, {0.745, 20.},
      RoundingRadius->0], RectangleBox[{0.745, 0}, {0.75, 10.},
      RoundingRadius->0], RectangleBox[{0.75, 0}, {0.755, 9.},
      RoundingRadius->0], RectangleBox[{0.755, 0}, {0.76, 16.},
      RoundingRadius->0], RectangleBox[{0.76, 0}, {0.765, 19.},
      RoundingRadius->0], RectangleBox[{0.765, 0}, {0.77, 12.},
      RoundingRadius->0], RectangleBox[{0.77, 0}, {0.775, 9.},
      RoundingRadius->0], RectangleBox[{0.775, 0}, {0.78, 16.},
      RoundingRadius->0], RectangleBox[{0.78, 0}, {0.785, 15.},
      RoundingRadius->0], RectangleBox[{0.785, 0}, {0.79, 11.},
      RoundingRadius->0], RectangleBox[{0.79, 0}, {0.795, 9.},
      RoundingRadius->0], RectangleBox[{0.795, 0}, {0.8, 12.},
      RoundingRadius->0], RectangleBox[{0.8, 0}, {0.805, 13.},
      RoundingRadius->0], RectangleBox[{0.805, 0}, {0.81, 14.},
      RoundingRadius->0], RectangleBox[{0.81, 0}, {0.815, 9.},
      RoundingRadius->0], RectangleBox[{0.815, 0}, {0.82, 5.},
      RoundingRadius->0], RectangleBox[{0.82, 0}, {0.825, 11.},
      RoundingRadius->0], RectangleBox[{0.825, 0}, {0.83, 10.},
      RoundingRadius->0], RectangleBox[{0.83, 0}, {0.835, 21.},
      RoundingRadius->0], RectangleBox[{0.835, 0}, {0.84, 15.},
      RoundingRadius->0], RectangleBox[{0.84, 0}, {0.845, 11.},
      RoundingRadius->0], RectangleBox[{0.845, 0}, {0.85, 13.},
      RoundingRadius->0], RectangleBox[{0.85, 0}, {0.855, 12.},
      RoundingRadius->0], RectangleBox[{0.855, 0}, {0.86, 7.},
      RoundingRadius->0], RectangleBox[{0.86, 0}, {0.865, 10.},
      RoundingRadius->0], RectangleBox[{0.865, 0}, {0.87, 5.},
      RoundingRadius->0], RectangleBox[{0.87, 0}, {0.875, 10.},
      RoundingRadius->0], RectangleBox[{0.875, 0}, {0.88, 7.},
      RoundingRadius->0], RectangleBox[{0.88, 0}, {0.885, 7.},
      RoundingRadius->0], RectangleBox[{0.885, 0}, {0.89, 7.},
      RoundingRadius->0], RectangleBox[{0.89, 0}, {0.895, 15.},
      RoundingRadius->0], RectangleBox[{0.895, 0}, {0.9, 13.},
      RoundingRadius->0], RectangleBox[{0.9, 0}, {0.905, 12.},
      RoundingRadius->0], RectangleBox[{0.905, 0}, {0.91, 11.},
      RoundingRadius->0], RectangleBox[{0.91, 0}, {0.915, 4.},
      RoundingRadius->0], RectangleBox[{0.915, 0}, {0.92, 6.},
      RoundingRadius->0], RectangleBox[{0.92, 0}, {0.925, 8.},
      RoundingRadius->0], RectangleBox[{0.925, 0}, {0.93, 5.},
      RoundingRadius->0], RectangleBox[{0.93, 0}, {0.935, 6.},
      RoundingRadius->0], RectangleBox[{0.935, 0}, {0.94, 4.},
      RoundingRadius->0], RectangleBox[{0.94, 0}, {0.945, 7.},
      RoundingRadius->0], RectangleBox[{0.945, 0}, {0.95, 7.},
      RoundingRadius->0], RectangleBox[{0.95, 0}, {0.955, 11.},
      RoundingRadius->0], RectangleBox[{0.955, 0}, {0.96, 12.},
      RoundingRadius->0], RectangleBox[{0.96, 0}, {0.965, 6.},
      RoundingRadius->0], RectangleBox[{0.965, 0}, {0.97, 1.},
      RoundingRadius->0], RectangleBox[{0.97, 0}, {0.975, 12.},
      RoundingRadius->0], RectangleBox[{0.975, 0}, {0.98, 7.},
      RoundingRadius->0], RectangleBox[{0.98, 0}, {0.985, 15.},
      RoundingRadius->0], RectangleBox[{0.985, 0}, {0.99, 9.},
      RoundingRadius->0], RectangleBox[{0.99, 0}, {0.995, 11.},
      RoundingRadius->0], RectangleBox[{0.995, 0}, {1., 340.},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.005, 333.},
      RoundingRadius->0], RectangleBox[{1.005, 0}, {1.01, 73.},
      RoundingRadius->0], RectangleBox[{1.01, 0}, {1.015, 17.},
      RoundingRadius->0], RectangleBox[{1.015, 0}, {1.02, 1.},
      RoundingRadius->0], RectangleBox[{1.02, 0}, {1.025, 2.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.0409, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-0.02, 1.025}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.866953405398438*^9, {3.8669535086600723`*^9, 3.8669535168089046`*^9}, 
   3.866954313826535*^9, 3.866955457083973*^9, 3.8669557990421457`*^9, 
   3.866956255330904*^9, 3.8669565304074993`*^9, 3.8669570894272423`*^9, 
   3.8669574773997*^9, 3.866958175242688*^9, 3.866958443749235*^9, 
   3.866959311543325*^9, 3.8669645251454897`*^9, 3.8669666181421423`*^9, 
   3.866967585518009*^9, 3.866968194173625*^9, 3.8669687903644257`*^9, 
   3.8669695121091843`*^9, 3.8669778912310266`*^9, 3.8669885587554703`*^9, 
   3.867071193495838*^9, 3.867072542819018*^9, 3.8670737514774847`*^9, 
   3.867074113470283*^9, 3.8670749610975227`*^9, 3.867143628016296*^9, 
   3.867145791625614*^9, 3.867152781387341*^9, 3.8671625871255836`*^9, 
   3.8671637686717653`*^9, 3.867164072222712*^9, 3.8672056243581*^9, 
   3.867209073037076*^9, 3.867209586902226*^9, 3.867214140415625*^9, 
   3.867214888956481*^9, 3.867215256093277*^9, 3.8672163552337627`*^9, 
   3.867216591914497*^9, 3.867216777130972*^9, 3.867217137334942*^9, 
   3.867217996261094*^9, 3.867219420254675*^9, 3.867219946982617*^9, 
   3.8672208086987123`*^9, 3.867224171790861*^9, 3.8672249784404716`*^9, 
   3.867225313424816*^9, 3.8672269503439093`*^9, 3.86722791201066*^9, 
   3.867235619647745*^9, 3.86723626903706*^9, 3.8672367036959677`*^9, 
   3.867237721080928*^9, 3.867238314503063*^9, 3.8672393107718887`*^9, 
   3.8672396811779137`*^9, 3.867239956582532*^9, 3.867240311914506*^9, 
   3.867241732923114*^9, 3.867244174200135*^9, 3.867244467379243*^9, 
   3.867292748791696*^9, 3.86729364497375*^9, 3.8672939960119658`*^9, 
   3.867294655644163*^9, 3.8672957645747232`*^9, 3.867304330659622*^9, {
   3.8673054790161047`*^9, 3.86730550247573*^9}, 3.86730634147044*^9, 
   3.867307252855768*^9, 3.867311956834914*^9, 3.86731358127571*^9, 
   3.867318195891453*^9, 3.867323472972732*^9, 3.867329704811387*^9, 
   3.867330044539565*^9, 3.867382579023087*^9, 3.867382611694048*^9, 
   3.867383555462047*^9, 3.867386535028846*^9, 3.8674083251931877`*^9, 
   3.867419653691588*^9, 3.867469398241379*^9, 3.8675771496278753`*^9, 
   3.867580423407976*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"99dfdf51-88dd-4fd3-803f-80117029f66d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Subsection",
 CellChangeTimes->{{3.8650593677216454`*^9, 3.865059378776081*^9}, {
  3.866602769035088*^9, 3.866602771891135*^9}, {3.866865474676983*^9, 
  3.866865476493029*^9}},ExpressionUUID->"76d42d52-0573-4522-b5b7-\
498e3dde144e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedSoftNet"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hnf", "[", 
         RowBox[{"Harden", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.86680194442417*^9, 3.866801959585536*^9}, 
   3.8668020564125566`*^9, 3.8668021880135727`*^9, 3.86680224094079*^9, {
   3.866862414056994*^9, 3.866862435758893*^9}, 3.8668631732132587`*^9, 
   3.866863454099498*^9, {3.866863887767027*^9, 3.866863891596203*^9}, {
   3.866866085045*^9, 3.866866085408708*^9}, {3.866866613610317*^9, 
   3.8668666139621067`*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"4ca549a6-f4a8-48b8-bd04-5ba2c91f7834"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 87.2898%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "4931"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}], "\[Rule]", "4304"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "4247"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "3804"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", "423"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "409"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", "357"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "\[Rule]", "299"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "1"}], "}"}], "\[Rule]", "216"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", "210"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "189"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", "173"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", "102"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", "94"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "44"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "1"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866866039305666*^9, 3.866866854019951*^9, 3.866867736201356*^9, {
   3.866874285844576*^9, 3.866874300418912*^9}, 3.866897703750345*^9, 
   3.866950731292025*^9},
 CellLabel->
  "Out[567]=",ExpressionUUID->"0b004cf4-5f55-45d8-b2ff-cf273e58a75f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpaceSaving", "[", "trainedSoftNet", "]"}]], "Input",
 CellChangeTimes->{{3.8668642342489862`*^9, 3.8668642483212557`*^9}, {
  3.866864301980486*^9, 3.866864302505608*^9}, {3.866864406655108*^9, 
  3.86686453684363*^9}, {3.866864775311109*^9, 3.866864778850369*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"d5dbb3ee-e45f-4e95-8066-408558b38cda"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Soft net size = 412.8 kilobytes\"\>"},
    {"\<\"Hard net size = 12.9 kilobytes\"\>"},
    {"\<\"Saving factor = 32.\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866864249947411*^9, 3.8668643028534403`*^9, 3.866864414235868*^9, 
   3.866864445660204*^9, {3.866864494244638*^9, 3.866864537301672*^9}, 
   3.866864595971245*^9, 3.866864779447701*^9, 3.86686686475023*^9, 
   3.8668677412127867`*^9, 3.866897713231059*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"3975e194-8849-4807-a513-f77f2f030651"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Approximate neural logic", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.865071137544158*^9, 3.865071139735918*^9}, {3.866866918133319*^9, 
  3.8668669229746017`*^9}},ExpressionUUID->"3dfd48ae-245d-41a3-9ee6-\
9f48a3126503"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866602632554325*^9, 
  3.8666026346579123`*^9}},ExpressionUUID->"dbaf4b13-bbf1-46b2-a867-\
cbe6ab3057db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"softNet", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NeuralAND", "[", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"First", "[", 
          RowBox[{"First", "[", "trainData", "]"}], "]"}], "]"}], ",", "75"}],
        "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"NeuralNOT", "[", "75", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"NeuralAND", "[", 
       RowBox[{"75", ",", "numClasses"}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866020485648757*^9, 3.866020486758964*^9}, {
   3.8660206133758917`*^9, 3.86602061576938*^9}, {3.866021594138579*^9, 
   3.866021622648958*^9}, {3.86602221641733*^9, 3.866022259472351*^9}, {
   3.86602506519114*^9, 3.8660250652828293`*^9}, {3.866027283063545*^9, 
   3.866027305459503*^9}, {3.866027571359556*^9, 3.866027577807056*^9}, {
   3.866028577017147*^9, 3.866028577337102*^9}, {3.866028739939226*^9, 
   3.866028740417481*^9}, {3.866038386270308*^9, 3.866038393509417*^9}, {
   3.866038426793558*^9, 3.866038432549663*^9}, {3.866038541734429*^9, 
   3.866038552581696*^9}, {3.8660399839336977`*^9, 3.8660400476873417`*^9}, {
   3.866040086377454*^9, 3.866040113183221*^9}, {3.8660842202209263`*^9, 
   3.8660842234441147`*^9}, {3.866084729086014*^9, 3.8660847389004602`*^9}, {
   3.866084883181377*^9, 3.866084891034108*^9}, {3.866087944385981*^9, 
   3.866087946377273*^9}, {3.8660898129249763`*^9, 3.866089819116226*^9}, {
   3.8660918927590847`*^9, 3.866091896174137*^9}, {3.866118640249077*^9, 
   3.8661186553525763`*^9}, {3.8661697941751633`*^9, 3.86616982143332*^9}, {
   3.8661700477905827`*^9, 3.866170062053422*^9}, {3.866170430900312*^9, 
   3.866170441150339*^9}, {3.866171085971992*^9, 3.866171092538931*^9}, {
   3.8661713117235622`*^9, 3.866171323794742*^9}, {3.866172075114151*^9, 
   3.866172086385466*^9}, {3.8661726453612757`*^9, 3.8661726565682907`*^9}, {
   3.866172963402001*^9, 3.866172967303824*^9}, {3.866175492855685*^9, 
   3.86617549327916*^9}, {3.8661755786344223`*^9, 3.866175597119087*^9}, {
   3.866176135095639*^9, 3.866176139335493*^9}, {3.866176563216754*^9, 
   3.866176567303925*^9}, {3.866177234452429*^9, 3.866177240033128*^9}, {
   3.866177471626033*^9, 3.866177471849081*^9}, {3.8661781260498943`*^9, 
   3.866178174045168*^9}, {3.866179499382938*^9, 3.866179520538422*^9}, {
   3.866180308892374*^9, 3.866180328231532*^9}, {3.866180620692492*^9, 
   3.866180620811393*^9}, {3.866180727174838*^9, 3.866180728856566*^9}, {
   3.8661809278929253`*^9, 3.866180930764296*^9}, {3.866181239813146*^9, 
   3.866181242692215*^9}, {3.866184773364808*^9, 3.866184773468157*^9}, {
   3.866184929896516*^9, 3.866184931032365*^9}, {3.866185363169696*^9, 
   3.866185363420731*^9}, {3.866185838820908*^9, 3.866185842136413*^9}, {
   3.8661861874248247`*^9, 3.866186188480125*^9}, {3.86618706378515*^9, 
   3.866187066984132*^9}, {3.866209107928833*^9, 3.866209126148491*^9}, {
   3.866209156593391*^9, 3.8662091576123867`*^9}, {3.866209702848567*^9, 
   3.866209710039878*^9}, {3.866209813177039*^9, 3.866209834123746*^9}, {
   3.86621053449234*^9, 3.866210540769287*^9}, {3.866210581043235*^9, 
   3.8662105868693542`*^9}, {3.866210622339385*^9, 3.866210627545692*^9}, {
   3.866210657739574*^9, 3.8662106609137363`*^9}, {3.866210756731784*^9, 
   3.866210768609764*^9}, {3.866211193549685*^9, 3.8662112016988564`*^9}, {
   3.866211352173271*^9, 3.866211355378903*^9}, {3.8662114673335752`*^9, 
   3.866211471635058*^9}, {3.8662116682945633`*^9, 3.86621167888715*^9}, 
   3.8662117763988447`*^9, {3.866211833182128*^9, 3.8662118352832003`*^9}, {
   3.86621193783076*^9, 3.866211943219183*^9}, {3.866214069618958*^9, 
   3.866214085207219*^9}, {3.86621414917101*^9, 3.866214201293022*^9}, {
   3.866214582928615*^9, 3.866214586096209*^9}, {3.8662146462687683`*^9, 
   3.8662146535499763`*^9}, {3.866214940556902*^9, 3.866214945432839*^9}, {
   3.86625367959163*^9, 3.86625368544868*^9}, {3.8662538129344873`*^9, 
   3.866253817785205*^9}, {3.866254549496963*^9, 3.866254555093663*^9}, {
   3.8662546252320347`*^9, 3.866254645248086*^9}, {3.866254759667647*^9, 
   3.8662547607426033`*^9}, {3.866254889744342*^9, 3.8662548909149446`*^9}, {
   3.866254921233653*^9, 3.866254922151456*^9}, {3.866255111823483*^9, 
   3.866255112738577*^9}, 3.8662574558616056`*^9, {3.866257625671372*^9, 
   3.8662576360908813`*^9}, {3.866257668990629*^9, 3.866257673154139*^9}, {
   3.866258160607082*^9, 3.866258163488317*^9}, {3.866258216054822*^9, 
   3.866258216152341*^9}, {3.866258465946023*^9, 3.8662584660890408`*^9}, {
   3.8662587584666643`*^9, 3.866258758714335*^9}, {3.8662591656591253`*^9, 
   3.866259171110828*^9}, {3.8662595439403343`*^9, 3.866259575288472*^9}, {
   3.866260163911601*^9, 3.866260184078418*^9}, {3.8662605516290283`*^9, 
   3.866260577236061*^9}, {3.8662606098420553`*^9, 3.866260614652358*^9}, {
   3.866300882744391*^9, 3.8663008941270733`*^9}, {3.86630093508057*^9, 
   3.8663009417670527`*^9}, {3.866301043569387*^9, 3.866301050127966*^9}, {
   3.866371515227001*^9, 3.866371521170332*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"282b1129-9bb6-4375-827d-fe1a21de5e52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"softNet", "=", 
   RowBox[{"InitializeNeuralLogicNet", "[", "softNet", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.866209283643862*^9, 3.866209293055928*^9}, {
   3.866210794191074*^9, 3.8662107965361767`*^9}, {3.866211249974576*^9, 
   3.866211280034959*^9}, 3.86625467208576*^9, 3.86625490177337*^9, {
   3.866257939071712*^9, 3.866257940508713*^9}, {3.866257980743169*^9, 
   3.866257982079924*^9}, {3.866258022031268*^9, 3.866258048836591*^9}, {
   3.866258423802837*^9, 3.86625842536515*^9}, {3.866258586682054*^9, 
   3.866258618845252*^9}, 3.866258678879615*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"4dd2a1a1-93c1-4c86-8a53-3799d9a2326a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866180932479144*^9, 3.866180933335601*^9}, {
  3.866260506971014*^9, 3.8662605102109118`*^9}, {3.866602649938393*^9, 
  3.866602651994179*^9}},ExpressionUUID->"79776b36-72e3-45be-ba51-\
f07dffccf849"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainedNet", ",", "resultsObject"}], "}"}], "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"softNet", ",", "trainData", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TrainedNet\>\"", ",", "\"\<ResultsObject\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"testData", ",", 
          RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"LossFunction", "->", 
        RowBox[{"CrossEntropyLossLayer", "[", "\"\<Binary\>\"", "]"}]}], 
       ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", 
      RowBox[{"MeanSquaredLossLayer", "[", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "2000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866300748607238*^9, 3.866300751535038*^9}, {
   3.866300999842635*^9, 3.866301002544681*^9}, {3.866301103249797*^9, 
   3.866301123042173*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"85ad096e-ed5c-44c2-8c3a-979fde4a03c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.865509544459216*^9, 
  3.865509545362651*^9}},ExpressionUUID->"be01f422-1c1f-4ec9-a959-\
bf38e8105582"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resultsObject", "[", "\"\<RoundMeasurements\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.861598551906061*^9, 3.8615985567851887`*^9}, {
  3.863178625879333*^9, 3.8631786268708572`*^9}, {3.863240306853362*^9, 
  3.863240307588504*^9}, {3.8647943299915457`*^9, 3.864794330447215*^9}, {
  3.864794373237455*^9, 3.864794410229562*^9}, {3.864825813950893*^9, 
  3.8648258236291018`*^9}, {3.86505446234156*^9, 3.865054476285439*^9}, {
  3.86505502598845*^9, 3.865055037244231*^9}, {3.8650600546900873`*^9, 
  3.8650600574960833`*^9}, {3.865424330606958*^9, 3.865424333182247*^9}, {
  3.865590864349222*^9, 3.865590866486609*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"1fe03ab7-3007-4e7c-b36b-88dfd49533c2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.08046107638534303`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.861598557141324*^9, 3.86159932496406*^9, 3.861600312823881*^9, 
   3.861601585970324*^9, 3.8616032957846117`*^9, {3.861608298411519*^9, 
   3.8616083183028917`*^9}, 3.8616085550848*^9, 3.861608810672841*^9, 
   3.861609187782413*^9, 3.861609263890033*^9, 3.861609731053445*^9, 
   3.8616099697238693`*^9, 3.861610658991444*^9, 3.861611766631*^9, 
   3.861616124927318*^9, 3.8616192444778347`*^9, 3.861619963378441*^9, 
   3.861620089638427*^9, 3.861620387381283*^9, 3.861622535346579*^9, 
   3.8616277717526608`*^9, 3.861627926557097*^9, 3.861628103911521*^9, 
   3.861628534853827*^9, 3.861628885555339*^9, 3.8616290173633623`*^9, 
   3.861629077343205*^9, 3.861629337131572*^9, 3.8616295320447607`*^9, 
   3.861630777186632*^9, 3.861631836724824*^9, 3.861632278357716*^9, 
   3.8616324340143414`*^9, 3.861632762075611*^9, 3.8616337118826733`*^9, 
   3.8616356725177107`*^9, 3.861635894023178*^9, 3.8616359626206903`*^9, 
   3.861636234152629*^9, 3.8616390467587633`*^9, 3.86163921854004*^9, 
   3.861639277897636*^9, 3.861639791227378*^9, 3.861639992590982*^9, 
   3.861640145823147*^9, 3.861640426707197*^9, 3.861640510279099*^9, 
   3.861640656578981*^9, 3.861676825977009*^9, 3.861679722732286*^9, 
   3.8616896456436462`*^9, 3.8616899540068693`*^9, 3.86169448702297*^9, 
   3.861697070599144*^9, 3.861709301593432*^9, 3.861761971989541*^9, 
   3.861785926291955*^9, 3.863151077609033*^9, 3.8631513568497467`*^9, 
   3.863151398896656*^9, {3.863151467773486*^9, 3.863151492099278*^9}, 
   3.8631517118208027`*^9, 3.863151759467462*^9, 3.86315191478391*^9, 
   3.863156579332025*^9, 3.8631566319872923`*^9, 3.863156726439755*^9, 
   3.863156760983041*^9, 3.863157503104232*^9, 3.86315758919571*^9, 
   3.863157726868866*^9, 3.8631578459034653`*^9, 3.863158024731306*^9, 
   3.863158066216166*^9, 3.863158149578815*^9, 3.8631582880995407`*^9, 
   3.863158383100382*^9, 3.863158562747924*^9, 3.8631624350849257`*^9, 
   3.863162696090391*^9, 3.8631628315798483`*^9, 3.8631631179441347`*^9, 
   3.863163186467744*^9, 3.863163263716269*^9, 3.863163321285037*^9, 
   3.863163433622768*^9, 3.863163575357746*^9, 3.863163656008732*^9, 
   3.863163760169982*^9, 3.863163888235806*^9, 3.863163940717307*^9, 
   3.8631639815485086`*^9, 3.8631640322806664`*^9, 3.8631640779733953`*^9, 
   3.863164153205048*^9, 3.863164248152726*^9, 3.863164376840151*^9, 
   3.863165966925852*^9, 3.863166541634058*^9, 3.8631755217262173`*^9, 
   3.863175567222314*^9, 3.863175803363757*^9, 3.8631759249798527`*^9, 
   3.8631763342580147`*^9, 3.8631763780873013`*^9, 3.863176424817193*^9, 
   3.863176475288206*^9, 3.863176540459158*^9, 3.863176635923481*^9, 
   3.86317668199907*^9, 3.863176784236801*^9, 3.863176890206065*^9, 
   3.863177186951869*^9, 3.863177371425349*^9, 3.863177561813005*^9, 
   3.8631777280287027`*^9, 3.863178465988693*^9, 3.8631786277714043`*^9, 
   3.863179130318796*^9, 3.86317964439256*^9, 3.863179722227026*^9, 
   3.863179895390327*^9, 3.863180417307391*^9, 3.8631891933581057`*^9, 
   3.863195436663931*^9, 3.8632358567559233`*^9, 3.863240307912781*^9, 
   3.863242762083191*^9, 3.863243498020275*^9, 3.8632490984269657`*^9, 
   3.863249153557783*^9, 3.863249800948948*^9, 3.863261113079543*^9, 
   3.863261258571767*^9, 3.863263767952365*^9, 3.863266487752336*^9, 
   3.863268325182302*^9, 3.864794323339487*^9, {3.8647944114753036`*^9, 
   3.864794415160467*^9}, 3.864794798872734*^9, 3.864797237733761*^9, 
   3.864824874279098*^9, 3.864825084390379*^9, 3.8648257903081007`*^9, 
   3.8648258243477163`*^9, 3.864826317452064*^9, 3.864826707415752*^9, 
   3.8648268358911123`*^9, 3.864827667008909*^9, 3.8648277980615273`*^9, 
   3.8648279244198427`*^9, 3.864829394605691*^9, 3.864829843115088*^9, 
   3.864829959358408*^9, 3.864830393511653*^9, 3.864830567569335*^9, 
   3.864830919268218*^9, 3.86483103124896*^9, 3.864872789949876*^9, 
   3.864874331638398*^9, 3.864904587128199*^9, 3.86505496881559*^9, 
   3.865059953128607*^9, 3.8650600598500547`*^9, 3.8650654143932*^9, 
   3.8650656502740097`*^9, 3.865067803178391*^9, 3.865068291966251*^9, 
   3.865069495989231*^9, 3.865070283366563*^9, 3.865083279154043*^9, 
   3.8650839062816553`*^9, 3.865084356636775*^9, 3.865093499302258*^9, 
   3.865097650435338*^9, 3.8651414446602592`*^9, 3.865424333606085*^9, 
   3.865424841445877*^9, 3.865425229735964*^9, 3.865427484983204*^9, 
   3.8655059072779627`*^9, 3.865507093510763*^9, 3.865508240612179*^9, 
   3.865508423230506*^9, 3.865508732322257*^9, 3.865509005381804*^9, 
   3.865509546501918*^9, 3.8655096996579227`*^9, 3.86557721081032*^9, 
   3.8655780390495567`*^9, 3.865590830670417*^9, 3.8655908671336946`*^9, 
   3.865610697897925*^9, 3.865652633905154*^9, 3.865655300641062*^9, 
   3.865788012907119*^9, 3.865788771715988*^9, 3.86583933159483*^9, 
   3.86583978515248*^9, 3.865867641184679*^9, 3.8658685884814367`*^9, 
   3.8658714546625*^9, 3.865911704628196*^9, 3.865947229222362*^9, 
   3.8659961521973543`*^9, 3.866000873158622*^9, 3.8660057911972733`*^9, 
   3.866007274901287*^9, 3.866008420062475*^9, 3.866009699493788*^9, 
   3.866011982651112*^9, 3.866019936674967*^9, 3.866084127515397*^9, 
   3.86608662667826*^9, 3.8660896820607147`*^9, 3.866091248584734*^9, 
   3.866117818933078*^9, 3.86616938042334*^9, 3.866214058580371*^9, 
   3.866214619279559*^9, 3.8662148930932426`*^9, 3.866260227594151*^9, 
   3.86626079823901*^9, 3.866300818687643*^9, 3.866301148219926*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"fb9922be-4d44-44fa-a740-90fd86c255a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"randomTestSample", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"testData", ",", 
     RowBox[{"UpTo", "[", "200", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"softPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainedNet", "[", 
         RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", 
     "randomTestSample"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RandomSample", "[", 
  RowBox[{"softPredictionTargetPairs", ",", "10"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8632403336213713`*^9, 3.863240377260723*^9}, 
   3.864794328166184*^9, {3.864794407903618*^9, 3.864794436294898*^9}, {
   3.8650544818297043`*^9, 3.865054482561998*^9}, {3.8650591999549913`*^9, 
   3.865059216538383*^9}, {3.865060098170718*^9, 3.865060117548669*^9}, {
   3.865083374025154*^9, 3.865083380805747*^9}, {3.8650835363762093`*^9, 
   3.865083538071233*^9}, {3.865590907688581*^9, 3.865590907991177*^9}, {
   3.865610944975788*^9, 3.865610947181724*^9}, {3.865655407744947*^9, 
   3.865655408023315*^9}, {3.86626050147324*^9, 3.8662605016737347`*^9}, {
   3.86626089567375*^9, 3.86626089681426*^9}, 3.866260938745146*^9, {
   3.86626264559334*^9, 3.866262658221209*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"cc7fdd2c-831f-4bbf-9c2a-d697ed7670ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "4.333370270614978`*^-6", ",", "0.08942241966724396`", ",", 
       "0.013936973176896572`", ",", "2.1395244687028026`*^-8"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.4502013325691223`", ",", "0.0009403335279785097`", ",", 
       "0.005835799500346184`", ",", "0.0013396103167906404`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.0038892272859811783`", ",", "0.223232701420784`", ",", 
       "0.01978372037410736`", ",", "0.9444945454597473`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.8551828861236572`", ",", "0.012195744551718235`", ",", 
       "0.005835799500346184`", ",", "0.010951222851872444`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.015116960741579533`", ",", "0.622377872467041`", ",", 
       "1.2192882081762946`*^-7", ",", "0.014329508878290653`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.001976726343855262`", ",", "0.5444900989532471`", ",", 
       "0.013936973176896572`", ",", "0.32814353704452515`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.9999991059303284`", ",", "0.06618120521306992`", ",", 
       "0.058783769607543945`", ",", "0.01963680237531662`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.5465436577796936`", ",", "0.005424152128398418`", ",", 
       "0.040348298847675323`", ",", "0.01734413206577301`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.8466134071350098`", ",", "0.012195744551718235`", ",", 
       "0.01033498253673315`", ",", "0.016395196318626404`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.39558249711990356`", ",", "0.23631271719932556`", ",", 
       "0.03139081969857216`", ",", "0.9062796235084534`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.865083944153455*^9, 3.8650843925870743`*^9, 3.865093531769497*^9, 
   3.865097756341769*^9, 3.865141542376992*^9, 3.865424349715019*^9, 
   3.86542751189223*^9, 3.865505916932631*^9, 3.865508251307014*^9, 
   3.865508433617846*^9, 3.8655090142926064`*^9, 3.865509556017363*^9, 
   3.865509716467205*^9, 3.8655772328758097`*^9, 3.865590884371516*^9, 
   3.8655909461424932`*^9, 3.865610848379921*^9, 3.86561101972335*^9, 
   3.865652662175004*^9, 3.86565533700756*^9, 3.865655432595294*^9, 
   3.865839371310375*^9, 3.865839829589559*^9, 3.865867734412747*^9, 
   3.8658686797777967`*^9, 3.8658715579590683`*^9, 3.8659119433076973`*^9, 
   3.865947389711522*^9, 3.865996464213435*^9, 3.866000902227161*^9, 
   3.866005919373596*^9, 3.866007335306445*^9, 3.866008523003419*^9, 
   3.8660099197969923`*^9, 3.8660122066524353`*^9, 3.866020263301511*^9, 
   3.866084178948759*^9, 3.866086754587434*^9, 3.866089766385713*^9, 
   3.8660915250645237`*^9, 3.866118393832325*^9, 3.8661696699675713`*^9, 
   3.86621463391124*^9, 3.866260254356771*^9, {3.866260882666247*^9, 
   3.8662608976351223`*^9}, 3.866260939218465*^9, 3.866300822457629*^9, 
   3.866301150469366*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"deeafa17-d205-41b4-9334-177d0b32d635"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.865418895304618*^9, 
  3.865418895944718*^9}},ExpressionUUID->"c33fd357-ab86-4dac-a5dc-\
fb8a483872d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"\"\<neural-logic.m\>\"", ",", 
    RowBox[{"Path", "->", 
     RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}], ";"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"de7ef9f2-bf67-4869-9b14-c25b89d18d50"],

Cell[CellGroupData[{

Cell["Counting", "Section",
 CellChangeTimes->{{3.867832936078092*^9, 
  3.867832936917717*^9}},ExpressionUUID->"49d7fd52-7d0e-4eba-9a43-\
3a6532a9b58f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Experimental", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"net", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"32", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Layer1\>\"", "->", 
          RowBox[{
           RowBox[{"HardNeuralNAND", "[", 
            RowBox[{"inputSize", ",", "600"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Layer2\>\"", "->", 
          RowBox[{
           RowBox[{"HardNeuralNAND", "[", 
            RowBox[{"600", ",", "classificationLayerSize"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<ToMatrix\>\"", "->", 
          RowBox[{"ReshapeLayer", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "classificationLayerSize"}], "}"}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Require\>\"", "->", 
          RowBox[{
           RowBox[{"Require", "[", 
            RowBox[{
             RowBox[{"HardNeuralLTEK", "[", 
              RowBox[{"1", ",", "classificationLayerSize", ",", "32"}], "]"}],
              "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<ToVector\>\"", "->", 
          RowBox[{"ReshapeLayer", "[", 
           RowBox[{"{", "classificationLayerSize", "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ClassPredictions\>\"", "->", 
          RowBox[{
           RowBox[{"HardNeuralPortLayer", "[", 
            RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
        "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Layer1\>\"", "->", "\"\<Layer2\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Layer2\>\"", "->", "\"\<ToMatrix\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ToMatrix\>\"", "->", "\"\<Require\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Require\>\"", "->", "\"\<ToVector\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ToVector\>\"", "->", "\"\<ClassPredictions\>\""}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.867668231870791*^9, 3.867668235477289*^9}, {
   3.867668376339018*^9, 3.867668395784988*^9}, {3.867669799325087*^9, 
   3.867669809905347*^9}, {3.8676698456204653`*^9, 3.867669869738494*^9}, {
   3.8676699106411133`*^9, 3.8676699115453577`*^9}, {3.867669948359013*^9, 
   3.867670038801297*^9}, {3.86767030213902*^9, 3.867670318841384*^9}, {
   3.867670454382246*^9, 3.867670454482563*^9}, {3.86773420314202*^9, 
   3.867734379574403*^9}, {3.8677344216150846`*^9, 3.867734490143653*^9}, {
   3.867734621874201*^9, 3.867734623184408*^9}, {3.867734693122128*^9, 
   3.867734695505403*^9}, {3.867734747689705*^9, 3.867734756655624*^9}, {
   3.867734790199747*^9, 3.867734987499298*^9}, {3.8677350208744164`*^9, 
   3.867735125633463*^9}, {3.8677351638336763`*^9, 3.867735204009555*^9}, {
   3.867735317610345*^9, 3.8677353254980707`*^9}, {3.867735393290935*^9, 
   3.867735395305931*^9}, {3.8677354322513533`*^9, 3.867735440153603*^9}, {
   3.8677354886910477`*^9, 3.8677354936178827`*^9}, {3.867735591979089*^9, 
   3.867735601154071*^9}, {3.8677356862821093`*^9, 3.8677356918016987`*^9}, {
   3.8677357634512177`*^9, 3.867735791576468*^9}, {3.867735822699938*^9, 
   3.8677358465307007`*^9}, {3.867736920421318*^9, 3.8677369326207657`*^9}, {
   3.867736973742214*^9, 3.867737045436118*^9}, {3.8677371125088177`*^9, 
   3.867737122764319*^9}, {3.867737176710585*^9, 3.867737247838262*^9}, {
   3.8677378255448503`*^9, 3.867737827355835*^9}, {3.867737907966132*^9, 
   3.867737927804604*^9}, {3.867738001497107*^9, 3.867738007068056*^9}, {
   3.867738831068059*^9, 3.8677388441007833`*^9}, {3.867751900566104*^9, 
   3.867751950846384*^9}, {3.867752035360849*^9, 3.8677520509677753`*^9}, 
   3.8677521643541937`*^9, {3.867752700279015*^9, 3.86775272021528*^9}, {
   3.867752776206182*^9, 3.867752776508008*^9}, {3.867753149109016*^9, 
   3.867753149371195*^9}, {3.8677539432696457`*^9, 3.86775395329886*^9}, {
   3.867754162947703*^9, 3.867754173784737*^9}, {3.867812347833035*^9, 
   3.8678123928175793`*^9}, {3.8678124502232027`*^9, 3.867812460277479*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"373847f0-5ceb-4aea-9bd8-2b9bd00ed101"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Layer1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{0, -15.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"ClassPred..\"", "\"ClassPredictions\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "ClassPredictions", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -13.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Layer2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{0, -15.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ToMatrix\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{0, -13.5}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Require\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -15.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ToVector\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -13.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-6.4499999999999975`, 
                    1.728270858378101*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117852`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"32\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"600\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999997}, {-5.4499999999999975`, 
                    1.4603218880869225`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.679489702911785*^-8}], 
                    InsetBox[
                    FormBox["\"128\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-4.449999999999998, 
                    1.192372917795744*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"128\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"128\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-3.449999999999999, 
                    9.244239475045655*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"128\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 600\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 600\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999999999998, 
                    1.339744851455892*^-7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
1\[Times]128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
1\[Times]128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4499999999999975`, 
                    1.728270858378101*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4499999999999975`, 
                    1.4603218880869225`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117862`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 600\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 600\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.449999999999998, 
                    1.192372917795744*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
1\[Times]128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999999999999, 
                    9.244239475045655*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
1\[Times]128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.999999999999997, 1.875642792038249*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-5.999999999999998, 1.6076938217470707`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Layer1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Layer1", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"ClassPredictions\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ClassPredictions", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{-12.5, -12.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{12.5, 12.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-4.999999999999998, 
                    1.339744851455892*^-7}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-4.999999999999998, 1.339744851455892*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Layer2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Layer2", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-3.9999999999999987`, 1.0717958811647137`*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ToMatrix\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ToMatrix", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-2.999999999999999, 8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Require\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Require", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ToVector\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ToVector", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}, {-4.999999999999998, 
                    1.339744851455892*^-7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 21, 8, 25, 21, 25, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {442.99999999999983`, 48.50000589487735}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.49999557884199, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Layer1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "AND" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{600, 64}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{600, 64}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {600, 64}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{600, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {600, 64}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{600, 64}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{600, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[neurallogic`SoftAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{600, 64}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{600, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Min" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{600, 64}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {600}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{600}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {600}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {600}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {600}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "AND", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "AND", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "Layer2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "AND" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{128, 600}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{128, 600}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {128, 600}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 600}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {128, 600}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 600}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[neurallogic`SoftAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{600}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{128, 600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128, 600}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Min" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128, 600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {128}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {128}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {128}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>|>,
                     "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "AND", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "AND", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "ToMatrix" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 128}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Require" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Requirement" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Count" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 128}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Sort" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[Sort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Function", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> Sort, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 1, 
                    "$InputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 
                    128}, NeuralNetworks`RealT]|>|>, 
                    "DropLast" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[Part[#, 
                    Span[1, 128 - 1]]& , #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Part", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, 127]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{127}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 1, 
                    "$InputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{127}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 127}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 
                    127}, NeuralNetworks`RealT]|>|>, 
                    "PadFalse" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[
                    ArrayPad[#, {{1, 0}}]& , #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{1, 0}}, "Padding" -> 0., "$Rank" -> 
                    1, "$InputSize" -> {127}, "$OutputSize" -> {128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{127}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 1, 
                    "$InputShape" -> NeuralNetworks`TensorT[{127}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1, 127}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1, 127}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 
                    128}, NeuralNetworks`RealT]|>|>, 
                    "CountBooleans" -> <|"Type" -> "Function", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> (MapThread[Min[
                    neurallogic`SoftNOT[#, 0], #2]& , {
                    Slot["Input2"], 
                    Slot["Input1"]}, 2]& ), 
                    "Net" -> <|"Type" -> "NetMapThread", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input2" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "Input1" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Subtract[1, #]& ], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "3" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "4" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Min], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input2"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input1"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"]}|>, "Level" -> 
                    NeuralNetworks`ValidatedParameter[2], 
                    "$InputNames" -> {"Input2", "Input1"}, 
                    "$OutputNames" -> {"Output"}, "$MappedShape" -> {1, 128}, 
                    "$MappedDepth" -> {2, 2}|>, 
                    "Inputs" -> <|"Input2" -> NeuralNetworks`TensorT[{1, 128},
                     NeuralNetworks`RealT], "Input1" -> 
                    NeuralNetworks`TensorT[{1, 128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 
                    128}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input2" -> NeuralNetworks`TensorT[{1, 128},
                     NeuralNetworks`RealT], "Input1" -> 
                    NeuralNetworks`TensorT[{1, 128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 
                    128}, NeuralNetworks`RealT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {1, 128}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 
                    128}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "CountBooleans", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "DropLast", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "PadFalse", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "DropLast", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "CountBooleans", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "PadFalse", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "CountBooleans", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "CountsLTEK" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[Part[#, 
                    Span[128 - 32 + 1, 128]]& , #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[97, 128]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 1, 
                    "$InputShape" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1, 32},
                     NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`RealT]|>|>,
                     "LTEK" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Count", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "CountsLTEK", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Count", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "LTEK", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "CountsLTEK", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "LTEK", "Outputs", "Output"]}|>, 
                    "Require" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Min[
                    Slot["K"], 
                    Slot["Input"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"K" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Require", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Requirement", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Require", "Inputs", "K"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Requirement", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Require", "Outputs", "Output"]}|>, 
                    "ToVector" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{128}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1, 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "ClassPredictions" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 32}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 32}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 32}, NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Layer1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Layer2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Layer1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ToMatrix", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Layer2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Require", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ToMatrix", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ToVector", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Require", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClassPredictions", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ToVector", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClassPredictions", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Layer1"], 
                    NeuralNetworks`NetPath["Nodes", "ClassPredictions"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Layer2"], 
                    NeuralNetworks`NetPath["Nodes", "ToMatrix"], 
                    NeuralNetworks`NetPath["Nodes", "Require"], 
                    NeuralNetworks`NetPath["Nodes", "ToVector"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Layer1"], 
                    NeuralNetworks`NetPath["Nodes", "ClassPredictions"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Layer2"], 
                    NeuralNetworks`NetPath["Nodes", "ToMatrix"], 
                    NeuralNetworks`NetPath["Nodes", "Require"], 
                    NeuralNetworks`NetPath["Nodes", "ToVector"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.867734491193215*^9, 3.867734582702849*^9, 3.867734634186537*^9, 
   3.867734696484378*^9, {3.867734893766058*^9, 3.867734950867197*^9}, 
   3.867734988386032*^9, {3.867735038101159*^9, 3.867735068099225*^9}, {
   3.86773512123952*^9, 3.867735126239088*^9}, {3.867735170535468*^9, 
   3.867735204619039*^9}, 3.867735396401458*^9, {3.867735433733292*^9, 
   3.86773544116956*^9}, {3.867735489564946*^9, 3.867735494315817*^9}, {
   3.8677355705976963`*^9, 3.867735602076317*^9}, {3.8677356872418137`*^9, 
   3.8677357021142797`*^9}, {3.867735824074129*^9, 3.867735847403043*^9}, 
   3.867736933867545*^9, 3.867736975903591*^9, {3.867737027991537*^9, 
   3.867737046374742*^9}, 3.8677371242580214`*^9, 3.867737198594473*^9, 
   3.86773724884512*^9, 3.867737304965281*^9, 3.8677378296276827`*^9, 
   3.8677379327394447`*^9, 3.8677380155396137`*^9, 3.8677388467568293`*^9, {
   3.86775204334146*^9, 3.8677520520106277`*^9}, 3.8677527212566147`*^9, 
   3.86775277759297*^9, 3.867753150494194*^9, 3.867753954495947*^9, {
   3.867754165842208*^9, 3.8677541748510227`*^9}, {3.867812389003484*^9, 
   3.867812393623053*^9}, 3.867812461464444*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"42968dd2-1af4-4dd2-9252-b179f2e1c8a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hnc", "=", 
  RowBox[{
   RowBox[{"HardNeuralCount", "[", "4", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.867663107666901*^9, 3.867663131557822*^9}, {
   3.867664720363844*^9, 3.867664720665646*^9}, {3.867664772691634*^9, 
   3.867664775577198*^9}, 3.867665662125986*^9, {3.8676671159699*^9, 
   3.8676671161228657`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"349b19a0-3962-4873-82b8-94890a3e44e2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"COUNT\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -15.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], 
                    "\[Times]\[DottedSquare]\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], 
                    "\[Times]\[DottedSquare]\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], 
                    "\[Times]\[DottedSquare]\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], 
                    "\[Times]\[DottedSquare]\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999999999997, 2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"COUNT\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["COUNT", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {167.99999999999994`, 48.50000147371934}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.499998526280663`, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "COUNT" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Sort" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Map[Sort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Sort, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1916027391], "$InputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>, 
                    "DropLast" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[Part[#, 
                    Span[1, 4 - 1]]& , #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, 3]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1916027391], "$InputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>, 
                    "PadFalse" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Map[ArrayPad[#, {{1, 0}}]& , #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> {{1, 0}}, "Padding" -> 
                    0., "$Rank" -> 1, "$InputSize" -> {NeuralNetworks`SizeT}, 
                    "$OutputSize" -> {NeuralNetworks`SizeT}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1916027391], "$InputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>, 
                    "CountBooleans" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (MapThread[Min[
                    neurallogic`SoftNOT[#, 0], #2]& , {
                    Slot["Input2"], 
                    Slot["Input1"]}, 2]& ), 
                    "Net" -> <|"Type" -> "NetMapThread", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input2" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "Input1" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Subtract[1, #]& ], "$Dimensions" -> {}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Min], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input2"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input1"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"]}|>, "Level" -> 
                    NeuralNetworks`ValidatedParameter[2], 
                    "$InputNames" -> {"Input2", "Input1"}, 
                    "$OutputNames" -> {"Output"}, "$MappedShape" -> {
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, "$MappedDepth" -> {2, 2}|>, 
                    "Inputs" -> <|"Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT], "Input1" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT], "Input1" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "CountBooleans", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "DropLast", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "PadFalse", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "DropLast", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "CountBooleans", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "PadFalse", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "CountBooleans", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1916027391], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "COUNT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "COUNT", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "COUNT"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "COUNT"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8676631326575603`*^9, 3.867663375088449*^9, 3.8676635149060993`*^9, 
   3.8676638753130713`*^9, {3.8676639486956043`*^9, 3.867663958546216*^9}, 
   3.867664001601513*^9, {3.8676641955401697`*^9, 3.8676642019923897`*^9}, {
   3.867664288986731*^9, 3.867664295392009*^9}, 3.8676643254253263`*^9, 
   3.867664536355157*^9, 3.867664579588758*^9, {3.867664624158762*^9, 
   3.8676646295751457`*^9}, 3.867664721269195*^9, 3.8676647763017187`*^9, 
   3.867664999232329*^9, {3.867665398846342*^9, 3.867665409540415*^9}, {
   3.867665456366901*^9, 3.8676654625351973`*^9}, 3.867665662668949*^9, 
   3.8676660218324738`*^9, {3.8676661249689493`*^9, 3.8676661502815332`*^9}, 
   3.867666514944385*^9, 3.8676667167191763`*^9, 3.867666796991253*^9, {
   3.8676668689544563`*^9, 3.867666890398213*^9}, {3.867667077911818*^9, 
   3.8676671322174387`*^9}, 3.867667187635311*^9, 3.8676672510350037`*^9, 
   3.867667290413372*^9, 3.867667659294734*^9, {3.8676677001938457`*^9, 
   3.8676677256388283`*^9}, 3.8676678988069153`*^9, 3.867732849999475*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"998229bd-8f89-4994-a579-e9da43febb4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hnc", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.2", ",", "0.3", ",", "0.4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.6", ",", "0.4", ",", "0.35", ",", "0.21"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.15", ",", "0.7", ",", "0.8", ",", "0.22"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.75", ",", "0.85", ",", "0.9", ",", "0.001"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8677328621860037`*^9, 3.867732865733202*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"a31fd4b4-2c15-4002-83ec-350a260510da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.03916572034358978`", ",", "0.08317269384860992`", ",", 
     "0.16798162460327148`", ",", "0.31002551317214966`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.08948004245758057`", ",", "0.23147521913051605`", ",", 
     "0.31002551317214966`", ",", "0.6899744868278503`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.05732417479157448`", ",", "0.09621553868055344`", ",", 
     "0.8320183753967285`", ",", "0.16798162460327148`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.018128056079149246`", ",", "0.8807970285415649`", ",", 
     "0.11920291930437088`", ",", "0.05732416361570358`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8677328628734617`*^9, 3.86773286613085*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"2da98d1e-82ec-4eda-a4f4-0841343c270f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hnek", "=", 
  RowBox[{
   RowBox[{"HardNeuralExactlyK", "[", 
    RowBox[{"4", ",", "3"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.867732477284223*^9, 3.8677325033611813`*^9}, {
  3.8677325731157913`*^9, 3.867732625289549*^9}, {3.8677329627563877`*^9, 
  3.867733023738522*^9}, {3.867733069780697*^9, 3.867733069922748*^9}, {
  3.867733121172557*^9, 3.867733121274797*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"1ba97a8f-3dd1-4af0-b442-37c950fb8e3e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" reals\""}, "RowDefault"], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"EXACTLY_K\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -15.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox[
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], 
                    "\[Times]\[DottedSquare]\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" reals\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " reals"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], 
                    "\[Times]\[DottedSquare]\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" reals\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " reals"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999999999997, 2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"EXACTLY_K\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["EXACTLY_K", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {167.99999999999994`, 48.50000147371934}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.499998526280663`, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" reals\""}, "RowDefault"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "EXACTLY_K" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076]}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Count" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"COUNT" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Sort" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[Sort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Function", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> Sort, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1774598076], "$InputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>, 
                    "DropLast" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[Part[#, 
                    Span[1, 4 - 1]]& , #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Part", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, 3]}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1774598076], "$InputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>, 
                    "PadFalse" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[
                    ArrayPad[#, {{1, 0}}]& , #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Padding", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Specification" -> {{1, 0}}, "Padding" -> 0., "$Rank" -> 
                    1, "$InputSize" -> {NeuralNetworks`SizeT}, 
                    "$OutputSize" -> {NeuralNetworks`SizeT}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1774598076], "$InputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>, 
                    "CountBooleans" -> <|"Type" -> "Function", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> (MapThread[Min[
                    neurallogic`SoftNOT[#, 0], #2]& , {
                    Slot["Input2"], 
                    Slot["Input1"]}, 2]& ), 
                    "Net" -> <|"Type" -> "NetMapThread", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input2" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "Input1" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Subtract[1, #]& ], 
                    "$Dimensions" -> {}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "2" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "3" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "4" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Min], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input2"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input1"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", 
                    "Output"]}|>, "Level" -> 
                    NeuralNetworks`ValidatedParameter[2], 
                    "$InputNames" -> {"Input2", "Input1"}, 
                    "$OutputNames" -> {"Output"}, "$MappedShape" -> {
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, "$MappedDepth" -> {2, 2}|>, 
                    "Inputs" -> <|"Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT], "Input1" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT], "Input1" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "CountBooleans", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "DropLast", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "PadFalse", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "DropLast", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "CountBooleans", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "PadFalse", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "CountBooleans", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "COUNT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "COUNT", "Outputs", "Output"]}|>, 
                    "SelectK" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Map[Part[#, 4 - 3 + 1]& , #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{2}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1774598076], "$InputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Count", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SelectK", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Count", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SelectK", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1774598076]}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "EXACTLY_K", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "EXACTLY_K", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "EXACTLY_K"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "EXACTLY_K"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.867732506579611*^9, {3.8677325665650167`*^9, 3.867732595324086*^9}, 
   3.8677326258342457`*^9, 3.867732687835381*^9, {3.867732952693035*^9, 
   3.867733024342575*^9}, 3.867733070461748*^9, 3.867733121837245*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"2ef9b80a-095c-4b12-b256-379d73c2a7b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hnek", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.2", ",", "0.3", ",", "0.4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.6", ",", "0.4", ",", "0.35", ",", "0.21"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.15", ",", "0.7", ",", "0.8", ",", "0.22"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.75", ",", "0.85", ",", "0.9", ",", "0.001"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "0.9", ",", "0.9", ",", "0.6"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.867732615897147*^9, 3.867732616249473*^9}, {
  3.867733007084277*^9, 3.867733018458602*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"b5c02c2d-4f0c-4f1a-927d-e7f10c55aff2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.08317269384860992`", ",", "0.23147521913051605`", ",", 
   "0.09621553868055344`", ",", "0.8807970285415649`", ",", 
   "0.31002548336982727`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.867732648509248*^9, 3.867732749806917*^9, {3.8677329539943047`*^9, 
   3.8677330251107903`*^9}, 3.86773307143382*^9, 3.8677331224494247`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"85d05a9e-ef93-4b7e-8c9e-b3cc0eff4f2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{"0.1", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"0.6", ",", "0.9", ",", "0.001", ",", "0.4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.867733656247738*^9, 3.8677336829398117`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"243703bb-68c3-47c4-b125-e13f983de6e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1`", ",", "0.1`", ",", "0.001`", ",", "0.1`"}], "}"}]], "Output",\

 CellChangeTimes->{3.867733683224182*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"a729d644-3ccf-4bd3-9ffd-0b01d55bd98a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetMapOperator", "[", 
  RowBox[{"PartLayer", "[", 
   RowBox[{"1", ";;", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8676640569837418`*^9, 3.867664056984263*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"23fa8663-96e3-4910-820f-c54566b58e3c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetMapOperator", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014705882352941176`], {
                  RGBColor[0.557, 0.557, 0.557], 
                  RGBColor[0.33, 0.33, 0.33], 
                  Thickness[0.015029411764705883`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.557, 0.557, 0.557], 
                  Thickness[0.015029411764705883`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}},
                    CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.85, 0.85, 0.85], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                   22.23, 18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 
                   7.23}}}]}, {
                  FaceForm[{
                    RGBColor[0.56, 0.56, 0.56], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                   18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {
                   44.25, 18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                   50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                   21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {
                   56.6, 16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17,
                     20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                    53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                    18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 
                    21.83}}, {{53.56, 21.83}, {53.56, 21.13}, {55.04, 
                    21.13}, {56.25, 19.92}, {56.25, 18.44}, {56.25, 16.96}, {
                    55.04, 15.75}, {53.56, 15.75}, {52.08, 15.75}, {50.87, 
                    16.96}, {50.87, 18.44}, {50.87, 19.92}, {52.08, 21.13}, {
                    53.56, 21.13}, {53.56, 21.83}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                   10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                   21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {
                   16.5, 16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27,
                     20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                    13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                    18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                    21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                    "]}]}}, ImageSize -> {40, Automatic}], CacheGraphics -> 
               False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[Times]\[Ellipsis]\
\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" array\""}, "RowDefault"], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014705882352941176`], {
                  RGBColor[0.557, 0.557, 0.557], 
                  RGBColor[0.33, 0.33, 0.33], 
                  Thickness[0.015029411764705883`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.557, 0.557, 0.557], 
                  Thickness[0.015029411764705883`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}},
                    CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.85, 0.85, 0.85], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                   22.23, 18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 
                   7.23}}}]}, {
                  FaceForm[{
                    RGBColor[0.56, 0.56, 0.56], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                   18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {
                   44.25, 18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                   50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                   21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {
                   56.6, 16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17,
                     20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                    53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                    18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 
                    21.83}}, {{53.56, 21.83}, {53.56, 21.13}, {55.04, 
                    21.13}, {56.25, 19.92}, {56.25, 18.44}, {56.25, 16.96}, {
                    55.04, 15.75}, {53.56, 15.75}, {52.08, 15.75}, {50.87, 
                    16.96}, {50.87, 18.44}, {50.87, 19.92}, {52.08, 21.13}, {
                    53.56, 21.13}, {53.56, 21.83}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                   10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                   21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {
                   16.5, 16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27,
                     20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                    13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                    18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                    21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                    "]}]}}, ImageSize -> {40, Automatic}], CacheGraphics -> 
               False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`FormattingLayers`opart, 
                   NeuralNetworks`Private`FormattingLayers`part, 
                   NeuralNetworks`Private`FormattingLayers`selection = Null}, 
                  
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Net\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Net\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Net"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Net\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Net"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox["PartLayer", "SummaryItem"], 
                    Annotation[#, {"Parameters", "Net"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[Times]\[Ellipsis]\
\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" array\""}, "RowDefault"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`FormattingLayers`part = 
                    MouseAnnotation[]], 
                    If[NeuralNetworks`Private`FormattingLayers`opart === 
                    NeuralNetworks`Private`FormattingLayers`part, 
                    NeuralNetworks`Private`FormattingLayers`selection = Null; 
                    NeuralNetworks`Private`FormattingLayers`opart = Null, 
                    NeuralNetworks`Private`FormattingLayers`selection = 
                    NeuralNetworks`Private`FormattingLayers`part; 
                    NeuralNetworks`Private`FormattingLayers`opart = 
                    NeuralNetworks`Private`FormattingLayers`part; Null]; 
                    Null], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterLayer[
                    
                    Lookup[<|{"Parameters", "Net"} -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, -1]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>|>|>, 
                    Key[NeuralNetworks`Private`FormattingLayers`selection], 
                    Null], NeuralNetworks`Private`FormattingLayers`part, \
<||>, {}]}, GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`FormattingLayers`selection}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetMapOperator[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8676641000471783`*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"171d85a3-b965-410b-9f57-4a9daa2a7be5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetMapOperator", "[", 
  RowBox[{"PaddingLayer", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.867664087070558*^9, 3.867664094754965*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"85c4fda1-5bc1-4a9c-b6cc-b0c7f5dbd472"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetMapOperator", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014705882352941176`], {
                  RGBColor[0.557, 0.557, 0.557], 
                  RGBColor[0.33, 0.33, 0.33], 
                  Thickness[0.015029411764705883`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.557, 0.557, 0.557], 
                  Thickness[0.015029411764705883`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}},
                    CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.85, 0.85, 0.85], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                   22.23, 18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 
                   7.23}}}]}, {
                  FaceForm[{
                    RGBColor[0.56, 0.56, 0.56], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                   18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {
                   44.25, 18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                   50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                   21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {
                   56.6, 16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17,
                     20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                    53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                    18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 
                    21.83}}, {{53.56, 21.83}, {53.56, 21.13}, {55.04, 
                    21.13}, {56.25, 19.92}, {56.25, 18.44}, {56.25, 16.96}, {
                    55.04, 15.75}, {53.56, 15.75}, {52.08, 15.75}, {50.87, 
                    16.96}, {50.87, 18.44}, {50.87, 19.92}, {52.08, 21.13}, {
                    53.56, 21.13}, {53.56, 21.83}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                   10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                   21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {
                   16.5, 16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27,
                     20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                    13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                    18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                    21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                    "]}]}}, ImageSize -> {40, Automatic}], CacheGraphics -> 
               False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
               BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014705882352941176`], {
                  RGBColor[0.557, 0.557, 0.557], 
                  RGBColor[0.33, 0.33, 0.33], 
                  Thickness[0.015029411764705883`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.557, 0.557, 0.557], 
                  Thickness[0.015029411764705883`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}},
                    CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.85, 0.85, 0.85], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                   22.23, 18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 
                   7.23}}}]}, {
                  FaceForm[{
                    RGBColor[0.56, 0.56, 0.56], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                   18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {
                   44.25, 18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                   50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                   21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {
                   56.6, 16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17,
                     20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                    53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                    18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 
                    21.83}}, {{53.56, 21.83}, {53.56, 21.13}, {55.04, 
                    21.13}, {56.25, 19.92}, {56.25, 18.44}, {56.25, 16.96}, {
                    55.04, 15.75}, {53.56, 15.75}, {52.08, 15.75}, {50.87, 
                    16.96}, {50.87, 18.44}, {50.87, 19.92}, {52.08, 21.13}, {
                    53.56, 21.13}, {53.56, 21.83}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                   10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                   21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {
                   16.5, 16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27,
                     20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                    13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                    18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                    21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                    "]}]}}, ImageSize -> {40, Automatic}], CacheGraphics -> 
               False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`FormattingLayers`opart, 
                   NeuralNetworks`Private`FormattingLayers`part, 
                   NeuralNetworks`Private`FormattingLayers`selection = Null}, 
                  
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Net\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Net\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Net"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Net\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Net"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    TagBox[
                    TagBox[
                    StyleBox["PaddingLayer", "SummaryItem"], 
                    Annotation[#, {"Parameters", "Net"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, 
                    {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                    18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                    16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 
                    17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25,
                     17.25}, {8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {
                    12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`FormattingLayers`part = 
                    MouseAnnotation[]], 
                    If[NeuralNetworks`Private`FormattingLayers`opart === 
                    NeuralNetworks`Private`FormattingLayers`part, 
                    NeuralNetworks`Private`FormattingLayers`selection = Null; 
                    NeuralNetworks`Private`FormattingLayers`opart = Null, 
                    NeuralNetworks`Private`FormattingLayers`selection = 
                    NeuralNetworks`Private`FormattingLayers`part; 
                    NeuralNetworks`Private`FormattingLayers`opart = 
                    NeuralNetworks`Private`FormattingLayers`part; Null]; 
                    Null], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterLayer[
                    
                    Lookup[<|{"Parameters", "Net"} -> <|
                    "Type" -> "Padding", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> {{0, 1}}, "Padding" -> 0., "$Rank" -> 
                    1, "$InputSize" -> {NeuralNetworks`SizeT}, 
                    "$OutputSize" -> {NeuralNetworks`SizeT}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    Key[NeuralNetworks`Private`FormattingLayers`selection], 
                    Null], NeuralNetworks`Private`FormattingLayers`part, \
<||>, {}]}, GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`FormattingLayers`selection}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetMapOperator[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.867664095437705*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"b8ea779b-3472-452e-bb2a-86b3a54c7755"]
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.865509544459216*^9, 3.865509545362651*^9}, {3.8668654702612267`*^9, 
  3.866865471244494*^9}, {3.866868302798292*^9, 
  3.866868303806368*^9}},ExpressionUUID->"7822fb59-1347-4e85-b721-\
29a9f368ef8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{
   RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
   RowBox[{"ConvertDataToClasses", "[", "testData", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866868805817885*^9, 3.866868848976694*^9}, {
  3.866869633679126*^9, 3.8668696380935183`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"e96a481e-3ba1-4201-9c24-39f96d06cf2b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classifier method"], 
                  TextCell["Classifier method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "Net",ExpressionUUID->"6409438e-2773-4385-84d6-0940b1dcfe37"],
               TextCell["Net"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Number of test examples"], 
                  TextCell["Number of test examples"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "19803"},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Accuracy"], 
                  TextCell["Accuracy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"94.11", "0.17"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   94.1120032318335688615`3., 0.1672829822354427176`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                   "\"Accuracy if predicting the commonest class\"", 
                   LabelStyle -> "TextStyling"], 
                  Annotation[#, "Accuracy if predicting the commonest class", 
                   "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"27.14", "0.32"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   27.1423521688633044846`3., 0.3160143365167839558`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Geometric mean of probabilities"], 
                  TextCell["Geometric mean of probabilities"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.448480991700299314`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0006461679909793849`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.4471886557183405442`3.",
                   "\", \"", "0.4497733276822580839`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.4471886557183405442`3., 
                  ", ", 0.4497733276822580839`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Mean cross entropy"], 
                  TextCell["Mean cross entropy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.801888980320557998`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0014407918716204948`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.7990073965773170084`3.",
                   "\", \"", "0.8047705640637989877`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.7990073965773170084`3., 
                  ", ", 0.8047705640637989877`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"2.59`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"144.`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}], "examples per millisecond", 
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              ItemBox[
               GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQ+4Cawt240Hf2i9Z9TNOpe2t/+6DVZZ7tL+3/v70e
Plvprf2uJdMOlr98YW8g6m92SPyOveqc6/J979/Yc+vvyzHjemE/c7rxq1Ur
b9hf5vq5pXHBW/v1D6rTzWfct1f85S1xyS7PXlTNsite/539pJOPIqa/e2PP
vqSmb4rjC/uF5QlhbmVA9ae23lIzfmV/9PAZPXe1h/Zsd1Sd9mq+s7+WXX9z
Yvs9+wr+AqEdmen2y9ZrRzH7vLX32qi6sWTyS/v+mG9+p3jv2zOAwQec9MMq
kXXuD29B+QwMkYLTK7O43tkzsjRnfUh6Y/9sWp1v6LVn9j4V7itd57y1P7D+
yIvdh17Zz37YVbx/9iN7NqnJCqs2ANVf0rnaWH3X/t23vbPZNiXYTzwzd6JE
zTt7tQmJ+xoF3tkfD/zPsNb4tb1OV6CW6LO39h0t+zWW3nxt/+fYZ0eLwqf2
Dm7WN18deGvvGnSNwdT3tb1CwPmZb5mf2AMAQMS0/w==
                 "], {{0, 0}, {4, 4}}, {0, 1}],
                Epilog->{{
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4540", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4540", "\" examples of \"", "0", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.975504941985389`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.9608465608465608`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9681202686853609`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4540, " examples of ", 0, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.975504941985389}], 
                    Row[{"Recall = ", 0.9608465608465608}], 
                    Row[{"FScore = ", 0.9681202686853609}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "1", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", 1, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["66", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "66", "\" examples of \"", "2", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.014181349376880103`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.013690105787181083`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{66, " examples of ", 2, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.014181349376880103`}], 
                    Row[{"Row fraction = ", 0.013690105787181083`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["48", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "48", "\" examples of \"", "3", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.010313708637730984`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.009832036050798854`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{48, " examples of ", 3, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.010313708637730984`}], 
                    Row[{"Row fraction = ", 0.009832036050798854}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["23", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "23", "\" examples of \"", "0", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.004163649529326575`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.004867724867724868`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{23, " examples of ", 0, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.004163649529326575}], 
                    Row[{"Row fraction = ", 0.004867724867724868}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["5210", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5210", "\" examples of \"", "1", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.943157132512672`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9693023255813954`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9560510138544822`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5210, " examples of ", 1, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.943157132512672}], 
                    Row[{"Recall = ", 0.9693023255813954}], 
                    Row[{"FScore = ", 0.9560510138544822}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["109", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "109", "\" examples of \"", "2", "\" misclassified as \"",
                     "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.019732078204199855`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.022609417133374818`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{109, " examples of ", 2, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.019732078204199855`}], 
                    Row[{"Row fraction = ", 0.022609417133374818`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["182", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "182", "\" examples of \"", "3", "\" misclassified as \"",
                     "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.03294713975380159`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.03727980335927898`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{182, " examples of ", 3, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.03294713975380159}], 
                    Row[{"Row fraction = ", 0.03727980335927898}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["76", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "76", "\" examples of \"", "0", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01560254567850544`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.016084656084656083`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{76, " examples of ", 0, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.01560254567850544}], 
                    Row[{"Row fraction = ", 0.016084656084656083`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["74", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "74", "\" examples of \"", "1", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01519195237117635`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.013767441860465116`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{74, " examples of ", 1, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.01519195237117635}], 
                    Row[{"Row fraction = ", 0.013767441860465116`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4478", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4478", "\" examples of \"", "2", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9193184151098337`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9288529350757104`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9240610813041684`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4478, " examples of ", 2, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9193184151098337}], 
                    Row[{"Recall = ", 0.9288529350757104}], 
                    Row[{"FScore = ", 0.9240610813041684}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["243", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "243", "\" examples of \"", "3", "\" misclassified as \"",
                     "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0498870868404845`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.049774682507169196`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{243, " examples of ", 3, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.0498870868404845}], 
                    Row[{"Row fraction = ", 0.049774682507169196`}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["86", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "86", "\" examples of \"", "0", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01809002944888515`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0182010582010582`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{86, " examples of ", 0, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.01809002944888515}], 
                    Row[{"Row fraction = ", 0.0182010582010582}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["91", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "91", "\" examples of \"", "1", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.019141775347076145`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.016930232558139535`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{91, " examples of ", 1, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.019141775347076145`}], 
                    Row[{"Row fraction = ", 0.016930232558139535`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["168", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "168", "\" examples of \"", "2", "\" misclassified as \"",
                     "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0353386621792175`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.03484754200373367`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{168, " examples of ", 2, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.0353386621792175}], 
                    Row[{"Row fraction = ", 0.03484754200373367}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4409", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4409", "\" examples of \"", "3", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9274295330248212`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.903113478082753`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9151100041511001`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4409, " examples of ", 3, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9274295330248212}], 
                    Row[{"Recall = ", 0.903113478082753}], 
                    Row[{"FScore = ", 0.9151100041511001}]}], "Tooltip"]& ]}, 
                  
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4725", "\" example\"", "\"s\"", "\" of class \"", "0"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9608465608465608`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4725, " example", "s", " of class ", 0}], 
                    Row[{"Recall = ", 0.9608465608465608}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5375", "\" example\"", "\"s\"", "\" of class \"", "1"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9693023255813954`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5375, " example", "s", " of class ", 1}], 
                    Row[{"Recall = ", 0.9693023255813954}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4821", "\" example\"", "\"s\"", "\" of class \"", "2"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9288529350757104`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4821, " example", "s", " of class ", 2}], 
                    Row[{"Recall = ", 0.9288529350757104}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4882", "\" example\"", "\"s\"", "\" of class \"", "3"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.903113478082753`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4882, " example", "s", " of class ", 3}], 
                    Row[{"Recall = ", 0.903113478082753}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4654", "\" example\"", "\"s\"", "\" classified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.975504941985389`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4654, " example", "s", " classified as ", 0}], 
                    Row[{"Precision = ", 0.975504941985389}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5524", "\" example\"", "\"s\"", "\" classified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.943157132512672`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5524, " example", "s", " classified as ", 1}], 
                    Row[{"Precision = ", 0.943157132512672}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4871", "\" example\"", "\"s\"", "\" classified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9193184151098337`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4871, " example", "s", " classified as ", 2}], 
                    Row[{"Precision = ", 0.9193184151098337}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4754", "\" example\"", "\"s\"", "\" classified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9274295330248212`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4754, " example", "s", " classified as ", 3}], 
                    Row[{"Precision = ", 0.9274295330248212}]}], 
                    "Tooltip"]& ]},
                Frame->True,
                FrameLabel->{
                  FormBox["\"predicted class\"", TraditionalForm], 
                  FormBox["\"actual class\"", TraditionalForm]},
                FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {
                    2.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {
                    1.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {
                    0.5, 
                    FormBox[
                    RotationBox["3", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["4725", TraditionalForm]}, {2.5, 
                    FormBox["5375", TraditionalForm]}, {1.5, 
                    FormBox["4821", TraditionalForm]}, {0.5, 
                    FormBox["4882", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["4654", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["5524", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["4871", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["4754", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["3", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                FrameTicksStyle->13,
                GridLinesStyle->Directive[
                  GrayLevel[0.5, 0.4]],
                ImageSize->212.4,
                
                Method->{
                 "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                  Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                PlotRangePadding->None],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{{3.866868827326494*^9, 3.866868851119316*^9}, {
   3.866869626721004*^9, 3.8668696415126762`*^9}, 3.8675912169533*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"4a27835d-ece8-46cb-bb4e-df3922dc4fd0"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hard neural logic", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602720354347*^9, 
  3.866602722250537*^9}},ExpressionUUID->"5330bb32-e656-4b8b-bb36-\
16ab02f0840f"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602724930586*^9, 
  3.866602725762454*^9}},ExpressionUUID->"9ccf4bd6-05a1-49f1-915f-\
95679eedaa4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", "trainData", "]"}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.866870343416011*^9, 3.8668703445197*^9}, {
  3.8676599016367483`*^9, 3.867659904995343*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"ce6f0f7f-95ec-4012-ad4e-67899225afe1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"1024", "*", "numClasses"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{"inputSize", ",", "50"}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{"50", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralPortLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866512854091155*^9, 3.8665128815568047`*^9}, {
   3.866513103300004*^9, 3.866513116326098*^9}, {3.8665133340990458`*^9, 
   3.8665133419773703`*^9}, {3.86651391128594*^9, 3.866513915466413*^9}, {
   3.866514318655335*^9, 3.866514323501399*^9}, {3.866514602855854*^9, 
   3.866514605749691*^9}, {3.86651468027989*^9, 3.8665147385101433`*^9}, {
   3.8665168378259563`*^9, 3.866516840683816*^9}, {3.866516968713831*^9, 
   3.866516971903157*^9}, {3.8665173610656767`*^9, 3.866517372695388*^9}, 
   3.866517444884035*^9, {3.86651878744969*^9, 3.8665188117507257`*^9}, {
   3.866518954624714*^9, 3.866518969573318*^9}, {3.866520101802957*^9, 
   3.866520108575643*^9}, {3.866520188881999*^9, 3.8665202157280684`*^9}, {
   3.866520364293333*^9, 3.866520392296053*^9}, {3.86652044871375*^9, 
   3.8665204631835423`*^9}, {3.8665219880508347`*^9, 3.866522005928316*^9}, {
   3.8665272161026173`*^9, 3.8665272312695007`*^9}, {3.866527801201952*^9, 
   3.866527883631137*^9}, {3.866528045329198*^9, 3.8665280486071043`*^9}, {
   3.866528154113455*^9, 3.8665281741152687`*^9}, {3.866528447153947*^9, 
   3.866528447260316*^9}, {3.866528670002123*^9, 3.86652867583491*^9}, {
   3.86652876246611*^9, 3.86652876256351*^9}, {3.866528813858374*^9, 
   3.866528848079921*^9}, {3.866530033731058*^9, 3.866530050034823*^9}, {
   3.866532603007605*^9, 3.8665326199562283`*^9}, {3.8665328331522837`*^9, 
   3.866532845529175*^9}, {3.866532894976413*^9, 3.866532895812646*^9}, {
   3.8665329705120907`*^9, 3.866532996865466*^9}, {3.866533798129952*^9, 
   3.866533798585582*^9}, {3.866542948856092*^9, 3.866542956003662*^9}, {
   3.866543312214932*^9, 3.8665433126315613`*^9}, {3.866545711295557*^9, 
   3.866545711720436*^9}, {3.866546071686404*^9, 3.866546081040039*^9}, {
   3.866547900239717*^9, 3.8665479093644657`*^9}, {3.866549693552167*^9, 
   3.866549704088811*^9}, {3.866550126984569*^9, 3.8665501393456163`*^9}, {
   3.866551310563048*^9, 3.866551316716016*^9}, {3.866552552251585*^9, 
   3.866552552469812*^9}, {3.866552612077286*^9, 3.866552621902178*^9}, {
   3.86655297295109*^9, 3.8665530085584908`*^9}, {3.866553815227034*^9, 
   3.866553831744128*^9}, {3.866554274483659*^9, 3.8665542884172983`*^9}, {
   3.866554409228067*^9, 3.866554412577661*^9}, {3.866554466780363*^9, 
   3.866554467185257*^9}, {3.866554546724543*^9, 3.866554547081894*^9}, {
   3.866554637927086*^9, 3.866554643213908*^9}, {3.8665551202789803`*^9, 
   3.866555125450521*^9}, {3.866555219318622*^9, 3.8665552411393957`*^9}, {
   3.866555370545534*^9, 3.866555374243248*^9}, {3.866600476190877*^9, 
   3.866600520811289*^9}, {3.866600851629229*^9, 3.8666008545843487`*^9}, {
   3.866601173213505*^9, 3.866601184697352*^9}, {3.866602823213896*^9, 
   3.866602823651602*^9}, {3.866624063636963*^9, 3.866624070070056*^9}, {
   3.866864848820673*^9, 3.8668649018442097`*^9}, 3.8668649498986273`*^9, {
   3.866870158165018*^9, 3.8668701585199003`*^9}, {3.866870313913095*^9, 
   3.866870347432589*^9}, {3.86687070668148*^9, 3.866870709305764*^9}, {
   3.866874324915924*^9, 3.866874327763575*^9}, {3.866874459504965*^9, 
   3.866874459651349*^9}, {3.86688629545262*^9, 3.8668862958798847`*^9}, {
   3.866886781155374*^9, 3.8668867817674427`*^9}, {3.866887024065243*^9, 
   3.866887024335256*^9}, {3.866887176651325*^9, 3.866887183367484*^9}, {
   3.8668872857079782`*^9, 3.866887288446698*^9}, {3.8672933502433777`*^9, 
   3.867293351194455*^9}, {3.8672943201526012`*^9, 3.867294320574452*^9}, {
   3.8673072679566917`*^9, 3.86730727548538*^9}, {3.8673117146946087`*^9, 
   3.86731171694258*^9}, {3.867312640857286*^9, 3.8673126485630198`*^9}, {
   3.867483132216476*^9, 3.867483137068089*^9}, {3.867484558937159*^9, 
   3.867484565125327*^9}, {3.867484885034177*^9, 3.8674848960292263`*^9}, {
   3.8674857810280046`*^9, 3.867485785790262*^9}, {3.867485972308717*^9, 
   3.8674859777590923`*^9}, {3.867575634248128*^9, 3.867575669182214*^9}, 
   3.867592743700955*^9, {3.867593550197529*^9, 3.8675935538692703`*^9}, {
   3.867593719866111*^9, 3.8675937252614183`*^9}, {3.867593837857523*^9, 
   3.867593838180921*^9}, {3.867593997313245*^9, 3.867594007445169*^9}, {
   3.867594183313306*^9, 3.867594191053112*^9}, {3.867594279329269*^9, 
   3.867594279525052*^9}, {3.867594436544726*^9, 3.867594441717057*^9}, {
   3.867594539418096*^9, 3.8675945421729393`*^9}, {3.8675946505292997`*^9, 
   3.8675946515410852`*^9}, {3.867594823818615*^9, 3.867594825101057*^9}, {
   3.867595056465706*^9, 3.867595057069421*^9}, {3.8675951255616198`*^9, 
   3.86759515143506*^9}, {3.867595560572082*^9, 3.867595574085411*^9}, {
   3.867595795195505*^9, 3.867595804189353*^9}, {3.867820900250691*^9, 
   3.8678209054083347`*^9}, {3.8678213948752117`*^9, 
   3.8678213953528347`*^9}, {3.8678241310875*^9, 3.867824155627552*^9}, {
   3.8678359011608477`*^9, 3.867835906741913*^9}, {3.867835991351974*^9, 
   3.867835993033587*^9}, {3.867836130935794*^9, 3.8678361328821583`*^9}, {
   3.8678362401794147`*^9, 3.867836242602487*^9}, {3.867836307448196*^9, 
   3.867836313353601*^9}, {3.86783647125273*^9, 3.867836473650206*^9}, {
   3.867836534947302*^9, 3.86783654330317*^9}, {3.867836648129442*^9, 
   3.8678366544118233`*^9}, {3.867836897818256*^9, 3.8678369025722857`*^9}, {
   3.867837022233658*^9, 3.867837033901739*^9}, {3.867837623887574*^9, 
   3.867837627813425*^9}, {3.86783787807589*^9, 3.867837896261313*^9}, {
   3.8678382960747147`*^9, 3.8678383098582077`*^9}, {3.867838463835903*^9, 
   3.867838469455121*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"feba2f53-f4f5-43e6-a86d-fb7cc5e96658"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"12", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"inputSize", ",", "200"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"200", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralPortLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866614043740147*^9, 3.866614059419475*^9}, {
   3.866614190829136*^9, 3.8666141968514433`*^9}, {3.866614273950245*^9, 
   3.866614278499329*^9}, {3.866614530778089*^9, 3.866614549428873*^9}, {
   3.866614803501232*^9, 3.866614803899014*^9}, {3.866615155141581*^9, 
   3.8666151742512083`*^9}, {3.866615336990378*^9, 3.8666153564905977`*^9}, {
   3.8666155953979273`*^9, 3.8666156011151123`*^9}, {3.866615669316122*^9, 
   3.866615680124647*^9}, {3.866615967248592*^9, 3.866615999692507*^9}, {
   3.86661706753056*^9, 3.8666171261627617`*^9}, {3.8666205700552588`*^9, 
   3.866620577491592*^9}, 3.86662330258639*^9, {3.8666237456239367`*^9, 
   3.866623752562409*^9}, 3.866623873531086*^9, {3.866623962136072*^9, 
   3.866623962541971*^9}, {3.866623999422729*^9, 3.866624020958702*^9}, 
   3.8666245872835913`*^9, {3.866625081754253*^9, 3.866625088886717*^9}, {
   3.8666253816059103`*^9, 3.866625381671921*^9}, {3.8666256340644712`*^9, 
   3.8666256351363153`*^9}, {3.86662623703862*^9, 3.8666262383268423`*^9}, {
   3.866626438031022*^9, 3.86662645240309*^9}, {3.866626685496241*^9, 
   3.866626685771852*^9}, {3.866864856428698*^9, 3.866864907580008*^9}, 
   3.866864955388526*^9, {3.8668703352646313`*^9, 3.866870336336831*^9}, {
   3.866874358883934*^9, 3.866874401155965*^9}, {3.866888199574621*^9, 
   3.866888199629108*^9}, {3.866888529255218*^9, 3.866888535050028*^9}, {
   3.86688878140559*^9, 3.8668887831258*^9}, {3.86689046499454*^9, 
   3.866890466044656*^9}, {3.866890758593011*^9, 3.866890763532761*^9}, {
   3.86689131588319*^9, 3.86689132212932*^9}, {3.866893076112526*^9, 
   3.866893077169388*^9}, {3.866897916842669*^9, 3.8668979227268543`*^9}, {
   3.867074152423325*^9, 3.86707415278448*^9}, {3.867075456545642*^9, 
   3.8670754567497683`*^9}, {3.867235871119939*^9, 3.867235872174719*^9}, {
   3.867237801291904*^9, 3.8672378023206873`*^9}, {3.867292790064324*^9, 
   3.867292790691334*^9}, {3.867293135786272*^9, 3.867293136090776*^9}, {
   3.867293221118145*^9, 3.8672932273708363`*^9}, {3.867306682735231*^9, 
   3.8673066832640533`*^9}, {3.867307446999085*^9, 3.867307452304888*^9}, {
   3.86731058493076*^9, 3.8673105916035833`*^9}, {3.867311149181422*^9, 
   3.867311155116807*^9}, {3.8673122341172657`*^9, 3.8673122356649857`*^9}, {
   3.8673123826362886`*^9, 3.867312382934656*^9}, {3.867333094419078*^9, 
   3.867333103730966*^9}, {3.867333886123332*^9, 3.867333891724444*^9}, {
   3.867406148675064*^9, 3.867406152721349*^9}, {3.8674198137634077`*^9, 
   3.867419814726452*^9}, {3.867470668480517*^9, 3.8674706693357773`*^9}, {
   3.867480325311369*^9, 3.8674803339747763`*^9}, {3.867482682782688*^9, 
   3.8674826875693483`*^9}, {3.867595267320661*^9, 3.867595271317068*^9}, {
   3.867595363788767*^9, 3.867595370589553*^9}, {3.8675954114278584`*^9, 
   3.867595418973572*^9}, {3.867595554720611*^9, 
   3.867595557192067*^9}},ExpressionUUID->"923f7933-891f-49a3-bbf5-\
d8f8183fe2d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"portSize", ",", "classificationLayerSize"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"portSize", "=", "900"}], ";", "\[IndentingNewLine]", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"portSize", "*", "numClasses"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"HardNeuralChain", "[", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HardNeuralNAND", "[", 
          RowBox[{"inputSize", ",", "classificationLayerSize"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"HardDropoutLayer", "[", "0.5", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"HardNeuralPortLayer", "[", 
          RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.867841916987248*^9, 3.8678421071281843`*^9}, {
   3.867842389163254*^9, 3.8678424104725847`*^9}, {3.867842604635694*^9, 
   3.867842606084375*^9}, {3.8678427700989523`*^9, 3.8678427715606728`*^9}, {
   3.867843707138914*^9, 3.867843754464377*^9}, 3.867843942708643*^9, {
   3.867843987859889*^9, 3.867843994528171*^9}, {3.867847590981337*^9, 
   3.8678476427453136`*^9}, {3.867847796754768*^9, 3.867847806505651*^9}, {
   3.867848727229472*^9, 3.867848753066246*^9}, {3.8678489087021*^9, 
   3.867848922743598*^9}, {3.867848985918405*^9, 3.867848988579921*^9}, {
   3.867850397128324*^9, 3.867850399228125*^9}, {3.867850871210086*^9, 
   3.867851125253394*^9}, {3.867852647604347*^9, 3.867852661157853*^9}, {
   3.8678904974623013`*^9, 3.867890507541542*^9}, {3.867892066351469*^9, 
   3.867892091410841*^9}, {3.867892395303556*^9, 3.867892412925453*^9}, {
   3.8678925469176607`*^9, 3.8678926534696503`*^9}, {3.867893447753015*^9, 
   3.8678934523329153`*^9}, {3.867893759343811*^9, 3.867893768350878*^9}, {
   3.867894321410741*^9, 3.867894327640942*^9}, {3.867894966595901*^9, 
   3.8678949667723093`*^9}, {3.8678959832744093`*^9, 3.867895984764944*^9}, {
   3.867896217305914*^9, 3.867896217634267*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"a805bd2a-cef0-4df4-b838-7efd7718ed29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"softNet", "=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<NeuralLogicNet\>\"", "->", "net"}], ",", 
       RowBox[{"\"\<Loss\>\"", "->", 
        RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<NeuralLogicNet\>\"", "->", "\"\<Loss\>\""}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866020485648757*^9, 3.866020486758964*^9}, {
   3.8660206133758917`*^9, 3.86602061576938*^9}, {3.866021594138579*^9, 
   3.866021622648958*^9}, {3.86602221641733*^9, 3.866022259472351*^9}, {
   3.86602506519114*^9, 3.8660250652828293`*^9}, {3.866027283063545*^9, 
   3.866027305459503*^9}, {3.866027571359556*^9, 3.866027577807056*^9}, {
   3.866028577017147*^9, 3.866028577337102*^9}, {3.866028739939226*^9, 
   3.866028740417481*^9}, {3.866038386270308*^9, 3.866038393509417*^9}, {
   3.866038426793558*^9, 3.866038432549663*^9}, {3.866038541734429*^9, 
   3.866038552581696*^9}, {3.8660399839336977`*^9, 3.8660400476873417`*^9}, {
   3.866040086377454*^9, 3.866040113183221*^9}, {3.8660842202209263`*^9, 
   3.8660842234441147`*^9}, {3.866084729086014*^9, 3.8660847389004602`*^9}, {
   3.866084883181377*^9, 3.866084891034108*^9}, {3.866087944385981*^9, 
   3.866087946377273*^9}, {3.8660898129249763`*^9, 3.866089819116226*^9}, {
   3.8660918927590847`*^9, 3.866091896174137*^9}, {3.866118640249077*^9, 
   3.8661186553525763`*^9}, {3.8661697941751633`*^9, 3.86616982143332*^9}, {
   3.8661700477905827`*^9, 3.866170062053422*^9}, {3.866170430900312*^9, 
   3.866170441150339*^9}, {3.866171085971992*^9, 3.866171092538931*^9}, {
   3.8661713117235622`*^9, 3.866171323794742*^9}, {3.866172075114151*^9, 
   3.866172086385466*^9}, {3.8661726453612757`*^9, 3.8661726565682907`*^9}, {
   3.866172963402001*^9, 3.866172967303824*^9}, {3.866175492855685*^9, 
   3.86617549327916*^9}, {3.8661755786344223`*^9, 3.866175597119087*^9}, {
   3.866176135095639*^9, 3.866176139335493*^9}, {3.866176563216754*^9, 
   3.866176567303925*^9}, {3.866177234452429*^9, 3.866177240033128*^9}, {
   3.866177471626033*^9, 3.866177471849081*^9}, {3.8661781260498943`*^9, 
   3.866178174045168*^9}, {3.866179499382938*^9, 3.866179520538422*^9}, {
   3.866180308892374*^9, 3.866180328231532*^9}, {3.866180620692492*^9, 
   3.866180620811393*^9}, {3.866180727174838*^9, 3.866180728856566*^9}, {
   3.8661809278929253`*^9, 3.866180930764296*^9}, {3.866181239813146*^9, 
   3.866181242692215*^9}, {3.866184773364808*^9, 3.866184773468157*^9}, {
   3.866184929896516*^9, 3.866184931032365*^9}, {3.866185363169696*^9, 
   3.866185363420731*^9}, {3.866185838820908*^9, 3.866185842136413*^9}, {
   3.8661861874248247`*^9, 3.866186188480125*^9}, {3.86618706378515*^9, 
   3.866187066984132*^9}, {3.866209107928833*^9, 3.866209126148491*^9}, {
   3.866209156593391*^9, 3.8662091576123867`*^9}, {3.866209702848567*^9, 
   3.866209710039878*^9}, {3.866209813177039*^9, 3.866209834123746*^9}, {
   3.86621053449234*^9, 3.866210540769287*^9}, {3.866210581043235*^9, 
   3.8662105868693542`*^9}, {3.866210622339385*^9, 3.866210627545692*^9}, {
   3.866210657739574*^9, 3.8662106609137363`*^9}, {3.866210756731784*^9, 
   3.866210768609764*^9}, {3.866211193549685*^9, 3.8662112016988564`*^9}, {
   3.866211352173271*^9, 3.866211355378903*^9}, {3.8662114673335752`*^9, 
   3.866211471635058*^9}, {3.8662116682945633`*^9, 3.86621167888715*^9}, 
   3.8662117763988447`*^9, {3.866211833182128*^9, 3.8662118352832003`*^9}, {
   3.86621193783076*^9, 3.866211943219183*^9}, {3.866214069618958*^9, 
   3.866214085207219*^9}, {3.86621414917101*^9, 3.866214201293022*^9}, {
   3.866214582928615*^9, 3.866214586096209*^9}, {3.8662146462687683`*^9, 
   3.8662146535499763`*^9}, {3.866214940556902*^9, 3.866214945432839*^9}, {
   3.86625367959163*^9, 3.86625368544868*^9}, {3.8662538129344873`*^9, 
   3.866253817785205*^9}, {3.866254549496963*^9, 3.866254555093663*^9}, {
   3.8662546252320347`*^9, 3.866254645248086*^9}, {3.866254759667647*^9, 
   3.8662547607426033`*^9}, {3.866254889744342*^9, 3.8662548909149446`*^9}, {
   3.866254921233653*^9, 3.866254922151456*^9}, {3.866255111823483*^9, 
   3.866255112738577*^9}, 3.8662574558616056`*^9, {3.866257625671372*^9, 
   3.8662576360908813`*^9}, {3.866257668990629*^9, 3.866257673154139*^9}, {
   3.866258160607082*^9, 3.866258163488317*^9}, {3.866258216054822*^9, 
   3.866258216152341*^9}, {3.866258465946023*^9, 3.8662584660890408`*^9}, {
   3.8662587584666643`*^9, 3.866258758714335*^9}, {3.8662591656591253`*^9, 
   3.866259171110828*^9}, {3.8662595439403343`*^9, 3.866259575288472*^9}, {
   3.866260163911601*^9, 3.866260184078418*^9}, {3.86626215222803*^9, 
   3.8662621832516203`*^9}, {3.866263109109415*^9, 3.86626311329671*^9}, {
   3.8662634113702927`*^9, 3.866263445027198*^9}, {3.8662637295611134`*^9, 
   3.8662637341766987`*^9}, {3.8662638454628477`*^9, 3.86626384912811*^9}, {
   3.866264629557499*^9, 3.866264632526574*^9}, {3.866264756302319*^9, 
   3.866264756571878*^9}, {3.86626485570925*^9, 3.8662648604861727`*^9}, {
   3.866264906589533*^9, 3.866264909654014*^9}, {3.8662650173821917`*^9, 
   3.866265024103039*^9}, {3.866267932128647*^9, 3.866267936947571*^9}, {
   3.866272289890004*^9, 3.866272326071719*^9}, 3.866272498086396*^9, {
   3.866272605318948*^9, 3.8662726100556726`*^9}, {3.866272697696899*^9, 
   3.8662727061238422`*^9}, {3.866272804197109*^9, 3.866272807076984*^9}, {
   3.866272890576043*^9, 3.8662729018249826`*^9}, {3.866273061136441*^9, 
   3.866273079881092*^9}, {3.8662739928242073`*^9, 3.866274026656089*^9}, {
   3.866274121640194*^9, 3.86627415310497*^9}, {3.8662742538084593`*^9, 
   3.866274260924819*^9}, {3.86627447707015*^9, 3.866274491178595*^9}, {
   3.866274954835182*^9, 3.866274972215249*^9}, {3.8662751949711027`*^9, 
   3.866275214973873*^9}, {3.866275317133552*^9, 3.866275326157571*^9}, {
   3.866276341927771*^9, 3.866276342361364*^9}, {3.866276444445874*^9, 
   3.866276444758065*^9}, 3.866276574032675*^9, {3.8662774805759163`*^9, 
   3.866277486441833*^9}, {3.866277730486899*^9, 3.866277745606361*^9}, {
   3.866277812901185*^9, 3.8662778241863747`*^9}, {3.866277923447342*^9, 
   3.866277942127078*^9}, {3.866278044847097*^9, 3.866278070211129*^9}, {
   3.866278491367318*^9, 3.866278493966505*^9}, {3.866278580024693*^9, 
   3.8662785830122213`*^9}, {3.866278895153315*^9, 3.866278898232675*^9}, {
   3.866280230366321*^9, 3.86628024016776*^9}, 3.866280351079256*^9, {
   3.866280499461529*^9, 3.8662805080447283`*^9}, {3.866280639515723*^9, 
   3.8662806449211483`*^9}, {3.866280754797947*^9, 3.86628075810079*^9}, {
   3.866280876373425*^9, 3.866280889329287*^9}, 3.866281009490582*^9, {
   3.8662811039106913`*^9, 3.866281107962268*^9}, {3.866281186723476*^9, 
   3.866281191533492*^9}, {3.8662812575988626`*^9, 3.866281268830084*^9}, {
   3.8662813166116953`*^9, 3.866281325765922*^9}, {3.866282044987713*^9, 
   3.866282048676916*^9}, {3.866282148870701*^9, 3.866282152685348*^9}, {
   3.86628313823394*^9, 3.8662831431981792`*^9}, {3.866283203895447*^9, 
   3.8662832148382063`*^9}, {3.8662832951824627`*^9, 
   3.8662833056304398`*^9}, {3.866283478244402*^9, 3.866283487341878*^9}, {
   3.8662841436542883`*^9, 3.86628415025281*^9}, {3.866284940968055*^9, 
   3.866284945101494*^9}, {3.866285029031362*^9, 3.866285034053158*^9}, {
   3.866285238231142*^9, 3.8662852400450497`*^9}, {3.8662854784494677`*^9, 
   3.866285480030343*^9}, {3.8662855684494333`*^9, 3.866285589220209*^9}, {
   3.866285661897065*^9, 3.866285665049341*^9}, {3.866286012525502*^9, 
   3.866286023701212*^9}, {3.866286183975936*^9, 3.866286197019022*^9}, {
   3.866286343624745*^9, 3.8662863761838703`*^9}, {3.86628647476213*^9, 
   3.866286478513227*^9}, {3.866286583730136*^9, 3.866286589629998*^9}, {
   3.8662866316154537`*^9, 3.866286632298744*^9}, {3.866286684611227*^9, 
   3.866286694033737*^9}, {3.866286815683847*^9, 3.866286826001635*^9}, {
   3.8662869515842*^9, 3.866286957090143*^9}, {3.866287432190014*^9, 
   3.866287433732437*^9}, {3.8662875714309177`*^9, 3.866287575508819*^9}, {
   3.866287972431319*^9, 3.866287979390542*^9}, {3.8662881211610413`*^9, 
   3.866288128734665*^9}, {3.866301184432645*^9, 3.866301189032214*^9}, {
   3.866301252666163*^9, 3.866301255952261*^9}, {3.866301376402754*^9, 
   3.866301391652487*^9}, {3.866301466042976*^9, 3.866301469288639*^9}, {
   3.866301630395039*^9, 3.866301653060717*^9}, {3.866301748836125*^9, 
   3.866301755312545*^9}, {3.86630188485115*^9, 3.866301888560711*^9}, {
   3.866302280747377*^9, 3.8663022952887983`*^9}, {3.866302405795878*^9, 
   3.866302419001148*^9}, {3.866302495340143*^9, 3.866302504605687*^9}, {
   3.866350591374894*^9, 3.8663505951022243`*^9}, {3.866351142159863*^9, 
   3.866351179558625*^9}, {3.8663515938249702`*^9, 3.866351597311022*^9}, {
   3.8663516429930353`*^9, 3.866351646919097*^9}, {3.8663540899964314`*^9, 
   3.866354091250739*^9}, 3.866354227060774*^9, {3.866354342347616*^9, 
   3.866354366019519*^9}, {3.866354536533381*^9, 3.866354542835105*^9}, {
   3.866354615988611*^9, 3.866354616498942*^9}, {3.866354747316181*^9, 
   3.866354747986311*^9}, {3.866354820971937*^9, 3.866354830674176*^9}, {
   3.866354985259542*^9, 3.866355003354249*^9}, {3.866355243555305*^9, 
   3.866355280233426*^9}, {3.866355363275181*^9, 3.8663553649290257`*^9}, {
   3.866355508482728*^9, 3.8663555086333237`*^9}, {3.866355904531114*^9, 
   3.8663559105053043`*^9}, {3.866355992402801*^9, 3.866356013229351*^9}, {
   3.866356256538742*^9, 3.866356257041319*^9}, {3.866356472449071*^9, 
   3.866356473280033*^9}, {3.8663565818412313`*^9, 3.866356588441074*^9}, {
   3.866356990748909*^9, 3.866356994266841*^9}, {3.8663571204214773`*^9, 
   3.866357120574224*^9}, {3.8663572027579412`*^9, 3.8663572078996153`*^9}, {
   3.866357620436617*^9, 3.866357634688436*^9}, {3.866357667446629*^9, 
   3.866357681140574*^9}, {3.8663583040873337`*^9, 3.866358308549032*^9}, {
   3.866358702488315*^9, 3.866358710660177*^9}, {3.866358792502235*^9, 
   3.866358792643732*^9}, {3.8663588650968037`*^9, 3.866358870370079*^9}, {
   3.8663590601050797`*^9, 3.866359061311141*^9}, {3.866359100825281*^9, 
   3.8663591032317047`*^9}, {3.866360392667655*^9, 3.866360402393593*^9}, {
   3.866360446451545*^9, 3.866360454122822*^9}, {3.866360518763679*^9, 
   3.866360523813664*^9}, {3.8663605658118258`*^9, 3.866360586933572*^9}, {
   3.866360874844895*^9, 3.866360875286996*^9}, {3.8663609358459*^9, 
   3.866360946523975*^9}, {3.8663629695673723`*^9, 3.8663629719826107`*^9}, {
   3.8663639844553833`*^9, 3.8663639851026163`*^9}, {3.866364664263899*^9, 
   3.866364667805708*^9}, {3.8663647416864157`*^9, 3.866364751498241*^9}, {
   3.8663648173209887`*^9, 3.8663648239090853`*^9}, {3.866364861552744*^9, 
   3.866364866359233*^9}, {3.866364911593669*^9, 3.866364912091476*^9}, {
   3.8663650443606586`*^9, 3.8663650452161922`*^9}, {3.866365512692107*^9, 
   3.866365515810193*^9}, 3.866365740980801*^9, {3.866366124781304*^9, 
   3.866366128103511*^9}, {3.86636615827591*^9, 3.866366161795991*^9}, 
   3.8663675572465467`*^9, {3.8663679823247623`*^9, 3.8663679840072737`*^9}, {
   3.8663685724947968`*^9, 3.866368575523563*^9}, {3.866368617885765*^9, 
   3.866368630439355*^9}, {3.8663688420628223`*^9, 3.866368846739706*^9}, {
   3.866368921365861*^9, 3.866368935403892*^9}, {3.866368992805874*^9, 
   3.8663689939334173`*^9}, {3.8663690430938*^9, 3.8663690474648046`*^9}, {
   3.866369083709838*^9, 3.8663691118719187`*^9}, {3.866369202398569*^9, 
   3.866369214195849*^9}, {3.866369334334588*^9, 3.866369336388123*^9}, {
   3.866369454951181*^9, 3.8663694569323397`*^9}, {3.866369515406219*^9, 
   3.866369518628167*^9}, {3.8663703695855513`*^9, 3.8663703750077*^9}, {
   3.8663705385538683`*^9, 3.866370541048525*^9}, {3.866370586394085*^9, 
   3.866370607876096*^9}, {3.8663707547717*^9, 3.866370757696903*^9}, {
   3.866370926163419*^9, 3.866370929489147*^9}, {3.866371042659484*^9, 
   3.8663710475373373`*^9}, {3.866371595734161*^9, 3.866371595814637*^9}, {
   3.866371630486404*^9, 3.866371630623527*^9}, {3.866371683122916*^9, 
   3.866371701147089*^9}, {3.866371789324903*^9, 3.866371822547234*^9}, {
   3.8663718525974607`*^9, 3.8663718606429367`*^9}, {3.866371974165319*^9, 
   3.866371979075355*^9}, {3.866372122293806*^9, 3.8663721296757917`*^9}, {
   3.866372551518608*^9, 3.866372561132722*^9}, {3.866372627211433*^9, 
   3.866372636080841*^9}, {3.8663728112322397`*^9, 3.866372812994047*^9}, {
   3.866372895895451*^9, 3.866372901477323*^9}, {3.8664377149946833`*^9, 
   3.8664377176580143`*^9}, {3.86643884019552*^9, 3.86643884333634*^9}, {
   3.866438919186672*^9, 3.866438921864346*^9}, {3.8664391767222757`*^9, 
   3.866439182016387*^9}, {3.866439413057221*^9, 3.8664394237656918`*^9}, {
   3.866440165425671*^9, 3.8664401663535337`*^9}, {3.8664414544278717`*^9, 
   3.866441455406114*^9}, {3.8664415241527863`*^9, 3.866441526297073*^9}, {
   3.866441636299324*^9, 3.866441637325185*^9}, {3.8664421743093033`*^9, 
   3.866442174534107*^9}, {3.866444116919817*^9, 3.866444119674713*^9}, {
   3.86644604617083*^9, 3.866446049128669*^9}, {3.866512861360115*^9, 
   3.866512866295472*^9}, {3.866512916479863*^9, 3.866512918447736*^9}, {
   3.866623312753614*^9, 3.866623319710231*^9}, 3.866624582319717*^9, {
   3.8668662017322693`*^9, 3.866866202166645*^9}, {3.866885151993841*^9, 
   3.866885152627983*^9}, {3.866886303360961*^9, 3.866886303494787*^9}, {
   3.866886784793562*^9, 3.866886785078327*^9}, {3.866887027953611*^9, 
   3.8668870285346737`*^9}, {3.866887196544759*^9, 3.8668871969509068`*^9}, {
   3.866887908638279*^9, 3.866887908768166*^9}, {3.866888202133163*^9, 
   3.8668882026401367`*^9}, {3.8668885411386957`*^9, 3.86688854148912*^9}, {
   3.866890470117792*^9, 3.866890470852077*^9}, {3.866890765878002*^9, 
   3.866890766260087*^9}, {3.86689132463979*^9, 3.8668913249890223`*^9}, {
   3.86689308168353*^9, 3.866893082217802*^9}, {3.866897888912188*^9, 
   3.8668978892625017`*^9}, {3.866898733832912*^9, 3.866898734749516*^9}, 
   3.8668994402579*^9, {3.866899773765663*^9, 3.866899774274312*^9}, {
   3.866952833901763*^9, 3.8669528351406612`*^9}, {3.866964109943631*^9, 
   3.866964110413616*^9}, {3.866966147880842*^9, 3.8669661483346167`*^9}, {
   3.866988245985949*^9, 3.866988246358993*^9}, {3.867074156194147*^9, 
   3.867074156647444*^9}, {3.867075460518784*^9, 3.867075460872748*^9}, {
   3.867130579976453*^9, 3.867130581878731*^9}, {3.867132238858082*^9, 
   3.86713226222477*^9}, {3.867132321058169*^9, 3.8671324110815372`*^9}, 
   3.86714816879574*^9, {3.867151174390662*^9, 3.867151175718362*^9}, {
   3.8671601859854937`*^9, 3.867160187248486*^9}, {3.867160271865155*^9, 
   3.867160273391037*^9}, {3.867206142108213*^9, 3.867206144010398*^9}, {
   3.867207661638524*^9, 3.8672076639716473`*^9}, {3.867225680992249*^9, 
   3.8672257375848494`*^9}, {3.867226575060524*^9, 3.8672265762181053`*^9}, {
   3.8672269605171947`*^9, 3.867226962147046*^9}, {3.8672272705896187`*^9, 
   3.867227297795145*^9}, {3.867227343085717*^9, 3.86722734351553*^9}, {
   3.86722737998987*^9, 3.867227380393511*^9}, {3.867227510606731*^9, 
   3.867227510759487*^9}, 3.8672275413257437`*^9, 3.867227636478323*^9, {
   3.867228148534873*^9, 3.86722815017175*^9}, {3.867235212746784*^9, 
   3.867235218959901*^9}, {3.867243061589653*^9, 3.867243089467525*^9}, {
   3.867243408789299*^9, 3.867243408892873*^9}, {3.8672443465611343`*^9, 
   3.867244347575115*^9}, {3.8672923794879313`*^9, 3.867292407247943*^9}, {
   3.867292793997984*^9, 3.867292794523506*^9}, {3.86729313056518*^9, 
   3.867293140483102*^9}, {3.8672932303810797`*^9, 3.867293230776718*^9}, {
   3.867294324594297*^9, 3.867294325174638*^9}, {3.867305927312809*^9, 
   3.867305927710868*^9}, {3.86730636106628*^9, 3.8673063615676527`*^9}, {
   3.86730727912813*^9, 3.867307279760503*^9}, {3.867307456280364*^9, 
   3.867307456624774*^9}, {3.867310934782545*^9, 3.867310935612999*^9}, {
   3.8673111612986937`*^9, 3.867311161302167*^9}, {3.8673117249217653`*^9, 
   3.867311725398467*^9}, {3.867312239359359*^9, 3.867312239717518*^9}, {
   3.867323044875226*^9, 3.867323050610677*^9}, {3.867331098943338*^9, 
   3.867331099090743*^9}, {3.86733389853468*^9, 3.867333898684703*^9}, {
   3.867399559935915*^9, 3.867399625423558*^9}, {3.867400091162709*^9, 
   3.867400112677143*^9}, {3.8674004611694317`*^9, 3.867400470751096*^9}, {
   3.8674039612129593`*^9, 3.867403961339106*^9}, {3.867404343391862*^9, 
   3.867404343493106*^9}, {3.867405223938087*^9, 3.8674052257279587`*^9}, {
   3.867406890830207*^9, 3.867406890979588*^9}, {3.867406928334382*^9, 
   3.867406928732006*^9}, 3.8674069690859013`*^9, 3.867407132280343*^9, 
   3.867407699751111*^9, {3.86740910335982*^9, 3.867409103533945*^9}, {
   3.86741451546389*^9, 3.867414544246604*^9}, {3.86741480776128*^9, 
   3.867414823759447*^9}, {3.8674150640103292`*^9, 3.867415067532441*^9}, {
   3.8674192410881844`*^9, 3.8674192414142323`*^9}, {3.867419337601428*^9, 
   3.867419338006322*^9}, {3.8674197151133127`*^9, 3.867419716366417*^9}, {
   3.86741980437457*^9, 3.8674198055585403`*^9}, {3.867420964777163*^9, 
   3.867420970276672*^9}, {3.867565400727728*^9, 3.867565402598975*^9}, 
   3.86757574945562*^9, {3.867583108618186*^9, 3.867583119673476*^9}, {
   3.867592825935584*^9, 3.8675928280210953`*^9}, {3.867593509898299*^9, 
   3.867593511045754*^9}, 3.867593572982695*^9, 3.8678363212387533`*^9, 
   3.867892665101438*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"ff705697-08c0-41db-8a85-131ecdba22d6"],

Cell[CellGroupData[{

Cell[BoxData["softNet"], "Input",
 CellChangeTimes->{{3.867852667460257*^9, 3.8678526698877697`*^9}, {
  3.867892670381201*^9, 3.8678926712427197`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"1b570bfa-2a4d-48ef-b659-d88693679ac4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -15.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"300\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]300\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]300\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]300\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]300\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {223.0000014737193, 103.49999999999997`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.5, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Target\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Target\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Target"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Target\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Target"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25},
                     {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {12.75, 
                    17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "NeuralLogicNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"AND" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{1200, 
                    64}]|>, "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{1200, 64}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {1200, 64}|>,
                     "Inputs" -> <||>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1200, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {1200, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1200, 
                    64}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200, 
                    64}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{1200, 64}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200, 
                    64}, NeuralNetworks`AtomT]|>|>, 
                    "Min" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1200, 
                    64}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {1200}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{1200}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1200}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {1200}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {1200}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "AND", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "AND", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.25, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"BinaryMask"}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"BinaryMask" -> 
                    NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Mask" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["BinaryMask"] 
                    Slot["Input"]& ), "Net" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Times], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[-1]|>, 
                    "Inputs" -> <|"BinaryMask" -> 
                    NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"BinaryMask" -> 
                    NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input" -> 
                    NeuralNetworks`TensorT[{1200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Inputs", "BinaryMask"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout", "Outputs", "BinaryMask"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Outputs", "Output"]}|>, 
                    "3" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{4, 
                    300}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1200}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 300}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 300}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 300}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Harden" -> <|"Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 0.9, 0.1]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_50a8a813_6f17_4a4f_a0eb_4063f52099c9", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1:eJy9vQlYU0f3OHyzkEQMkABKEJBAXFBRwyKLKCaAggUR12JdWBQVZV/dAgmg
xFYFW2vRuqC1avu6YMEFFFlVqoAoVlB2QdEiBAsCGiD/M/cmEfq93/P9vuf5
PX+f6p2Ze2bm7OfMZObWLDB8eSAJw7D3wRjm4lrYOEcfwzSgHsjkT/pqzd3N
InmO39hlYi8EY8bEsEwOho0lm2FkqI+Hv3QJ77CwjLqYxrJ2/J6UwpyswTCc
SP0uUGy8kOzy/ViXNpa1vgOD46lpHSX1iCg147npph5gCb8nbypjXNPnui6S
cv8kWUelcKZbTE+32pO17jD3QRmMu5+LYZvgaW1eNoYbuAgzmzEpw9hsMvxj
OJW591y6f9SmddxJW5Iyx+/D3jAEEnI01Z/vLmaRZgd/axHwz6/v7Jd+a2bu
VnWWUbiczKLSkoWZLC7F5A2D/BWnJSJT4x/hZ4UJnzSDxHyvz8Z6FNO4FqWZ
C9nioRkky7nDdYmaDE2rrcuo/oqvsO8OKWLNtVMF4gmLHBzeSsLShxPpXoVf
YRSnhdTCwX9BfizQLTzbut8BI5O+5ZC4Z/Yb6u6nrgrhZz5iiNnW9KecAD73
0DTrvS5c4URXYxqJJNkq0IhmwvACW/Pv2TSe9bFAH8YBzRRr181883Ebnuov
K26L1u7hjmXvXNbmVmA7GQZ4bkxKOWK78Ah/qPSjW0Gzrd4Tr+WaZIvFK9zG
/LB03dJeTyismE6bRW5ZyP/22JlxPzwpZ14uEm9bVMZ8u/lbtxCWwKcSGqRx
i6QmF7ckUYa8Dk9jkcdoalM5ZjaTzhpaS8iGq7gCD10vkvEZPhebM0Y428TC
58hqW41lIP8AkIuRtFkBf+hcph3LBZtkJDXDjmppf0BtFH9NsSmWiHlgGr1F
tF8GUBuJr4EgF2G+RhmteMdMLWwFNoili51rxVxSOjZWQDdKd8N0/Um/a6W4
YHuyinxpqEzTw8b6hPInkHzF25Jb9AvJK40OPMDGZ75sFqBxFmDnsQESRi80
xXSrYAQLNMJFrX36MGAodwrZ146lD+ilTydG3jcZG5MVkn4FdTXFERBTmnWw
MQxKpg42t5Yb8O8xfUgBGFAxVY5TsZVSqI8twCbhwP5bSVlYTJbkxTC8SsRe
Yd34UG+TtZj9OB+qaAQfBKYh3DysOVkrZSr2iPaKGCrdjuXPwrZkSRjJJAd4
xWEUGoZw72dilf4UIY0WQTPKsGZgy7FKLiOdq5WptdeQKhSHWFQKGORNFAmN
GkHDFoMsjEAWeimCDC61JEWcwdLXSynMEBh7nPVifRvksox/sMeLlbm1mDuz
OoV7jO/z4xyzW1OotSlm1UfGFNkFNM8Nd+lewnLmZ7DERVSJZvIYKkdaxEkv
SiEx74uZU6hBfLPMKYzNETQ9sm0GSwpOQG/inkKK04CGU2aynTg1cislzoMe
f5G+p9Zf83UVrTOTDv92c+nxGH0Xnx6VSY/m0kMxnagIeiReRo0EAJT96TGZ
9DgBPTRdG/5F1SraGzE9IpMeyaXvqKJ1iem7WPQ4oiP+NptFjxLTv9JhsHVd
9h04gpFsXTJOdBVdd9xzsyU4bo32txXrrAyYmxIeCctzbh+it0TasR4u2r6/
ulef8eul248yMw5qfF+06Y8jHZWNZqQHZilFwD0W/KXSs1znnnPrpmGYGKpc
B7HZqkWW0A4VMngiDlZIYv6Wt0UongQtDPhbyMW0/T3u0WTdXIE5RkCCPOn8
cy/3r8lgcdmoJ/zlM8QUzvLc1BUkEh9T/TEuTP92wcWxDHUD1oztW8nXDRbg
2JDxJhhK84dvKeRMJY4YBlj9eHLTRBZGU3VDWG1YSKEAMlBDPhpD0/363UKa
AOOOHOrzT458CobpIjCWEuxPrRQYyUJJIw6me9JDC+OuUfbEaZzjVG0MMyG6
xUrkH+45Oxcji0ci9teQWzxGFVAwfFoMi8Bcp+vv+gfnFSZQ02i/shOmpxJs
JvCvtfibQvRR4//xyVkSSaDkND6j5o9nF2DkQtKIGVfNWnYGoxZSVLyAGX+P
M6csB8zJqjYE5hVwHhCjjgTL+cOLxBCr2d+MTbJj6PeVYlgZGeEwBsWdiRkc
Q7ZX+oExU9zvU10n6JMnL8K2iTVvZFDmHsDSA9F418D+TsLThiE2Lm0x3qxP
mi91dUgpOeAipu/cQY/OiGS+wXQ6Wdq9Ym0bpsvE4iKTyjPGm/kaOFiyUTll
fpnr/AOU+eU7DsRE0Hcz6Ds9UiMi6LsiKHE7UiO4qYblbO336dotfJ0wvk5r
t3a3j7YNq9Sk0cy41sykOGDiZv5+pzvJTlWujjmUeXeS56VQnMq79eP86bu3
0u23pkbBv+LUiPTUCH96nAU9bkADho0Xp/oxUiM5qVEZqTszJJZd3dpdzdof
C7Xf8ymBZWeM284Yl+P/1gcYPzQzLpWYPAygPU93dSxzdczA/71V4nDE1UFK
cTpSMhsmHUxyekZxyiphPghOjfBNjYpIjtlK3+GfGsNJjclMNaxcodOF6fzj
o92Wrt0q0Gnhar8HKrgWJvVFE4uFE5+aGddLJtY3G7e1mPxNmriZs8wBTPFE
slO5zyQlIf6p8TvoOzKWefWm6yAOTNw28WGA8Vszk8YikwTSRISwmUl3AG3l
3mSH8hKnLNf5wJDB4nltrk5SqJYcuKcJlKbGAz4M+i4LelSGZF0rS/t9ofZr
H+0ePq/oqXBiW4tBbYtJIyDgYeiUlTw/J9kopcThgKtjecm8W0WOZSVA47xy
j5xIBh2wigQG+qYa1t3Xfu+v09kM/kznNV/nNVenz0c7jKXdyteGak8z7V2z
dpuP9gCf9+p9gHGxxKS2xeC9mckbM5NSMxOQ4Fsz083ck053XOffojgeSXYs
970D0gdidwGeHqnxEcC9VO3XLO1uHFsZX7snXbvXB5k6thNMxhOeURM9uK5S
puGYKGsPLk9y4PDhJ26ZLItN86ysXQ6lm/2ylRtGWmHk/80NUOyvw0M2RwWE
cl3DQyOCQ4KiuNazrGxmWc3iczeHR3G9gsNid3B3ONhxLexsZwYGx0BK9FVs
WBDXys6Sa823tp72ddAmrrU996vYELzO5dvPnWM118omJCQudFZIeHjErLig
jTHhUcG7gmYFhQUEhgT9tzfxwZtitn55sSk4OiYqODA2RtUHw3iM/fZJ/Agb
ahFTwnfll3NZD5guknIuJ/UAdYrFODu723Y/2f5hbZ+3jDzp9G17O5vcLDuD
29a5uTn2N5clTfpV1XQtz9buj9l5OTf+WEZGOe1vYK9m8ByrGWUBdkDf5RuR
AbwvAY1zrCpJemN8/4zWWyEy0zdIOEi/xtu2+mu3+4Da6rQh5dVp99HuzRJL
6DstcKvakRpJ6JRvxIkShxyS07nk+UdKyNvBQI3rW4zrucZtAejft5KJxQHG
VWeMywhFID0BP4bcOL183rlkpxNgTJT5mcnzwLDSS5APCgD56uhAvKVydcdS
CU+obyGZwCFZSF0sMsnTyBP03cYcwPSXsI8I/9RfOAY6fYAIsxjgzN3L0pdp
poQhPQEHhPmt2BkdExTq57ckIMJvkZ+fq5+fT8DG7UGbhFFRATv9lgcFhNjZ
+ln9jxut/3vj/5VZ5nInxwVEWdnxbTFsRsrbNVYe7JykjIz7a4Q+Xq2XuNPP
R65mja92mCH9LvjEOOp920pN840TtmicsTqYnVSLwCK8WkMYkzAbdkUh7Rxf
z4oZItC0Yd/DK2yicpGfRZpW7sakGKUXe7lZ4RUqVMgfiiQHOPoYI4k0LV3I
2bS8lk2hYEI+X8M6K8lL0ynQH+MyaOd9aL7piwPcmUyMWlSoXy4Yaz3tvVRC
EnM5GcWGIcIpe02s+BiLSlkhSLYsO5fFo9GwJH9/zeBCjWP6caWFmIDF9BJq
3eH+UHyIw4HJJNMuFRnEtFWJSZz0acYeNswgLs1Ig+wiFKdPN/awZ0oMxSQN
UpRwQmEWyYpK5ddzL5E4BzgcXUaS8EdNiXG5NdWFH+jjBbhNmM5ZSS2zlPB9
2AwSeV03jR8i4JJISuC/NMG3ZTMpbCBSD+a9r/nQkvREK7mHFiwQitdx6QDN
JJGY9owYjEag7fOnSxZ0ucf2ivbhSjkDZ+4V23pG9N73ocUU0kpobmI6tcoo
2fCZxIhpxBK6YflWJyQmWUVZJHY9idR7X0yLx8EE7EJb+t4kxtl5uem0c9Qy
jd1YCY2qxyqMSK6i+/MJxv41i3qO/6jQoUhw77BND9/ezCqcn+WCletaUubQ
TY33NN+pCL2j5d1dNLubZO8TPVDUQq+8VX//VnOK6WCSaQQAWRhnNpeXhJZT
vMtLZovJACQtNtOsXFp/f2lz6dLBJAsENM34XPP7+6Hvad7v789OR0AZxQGa
3k71ix41p0wbTJqGgKYbX2yurwzNYXpnFs/OREAXi89oenfWL+psTpk+mDQd
Ac0wvtT87EnoJaZ3VvHsLAR0q7hF03tew/2HzSkzBpNmICBL48BmaVGolOQt
LZotRYiXFZuN9TaqX2TU7GY0mGSJgGYa5zRfKgq9RPK+VDT7EsleTfg4OmfS
CWufyBNfFU+jjHswE68ccMMrfnil1BNV3O/glTt45cHtEZVUU7ziNuYCc6Xx
UtRySUwfcyGmpPm9y0wfFtdggAyicxVgJVpkB3ERocgrh1knSixL9DSqjfUZ
5loJW4e66dnUSlu6OEl6ztJcQsPbWQlbhwUVum4N/G6hw3sy6CjJUa2jGRSk
o6DewoW6Qqdya69VgniYLZMCs+1kIclnaqskP+4r6gf+I/+AIlu6RhJjr+nL
xUeKLYV/aVEuaLchzazSVmumTK2Z1938dbKZL8bjmrlu4My1lBnluv4lWv9h
6WwFNYrFB5PuM/3GU1pkWfRcy5VTmDwXEVxOURHsMl9NsA27Gwg2oEEvLEnK
sVjnda4kixQw9g8BVsH37evW1md4uGu/Fut8FriIob+LAKueNI5hPjFBTFqS
4zr/LfmaCyCqA4jeckFjFy9Qjz2fnVFqWcI5IuRXCCVcMm3gzAeqcZUeN5sa
gAzVvzDUQEqFMZfjQlis7hfIvlRqmWyYKSzE2b1JbPqN7wHKXy7ict0jRYKF
3HRJ2/oIXZixGZ/R5St1zy3swlJL1wmXiBmjYMZjeyeW62YK7Znx6bo8IfC0
UFfN01kkFU+vLfTRy2ZGcOkE8yY0p94Y38n3zKI18H1mSXT1qQyaNYlUQitl
sbAX9yQxJawyqifi6TOqiqfFSxAWZhLAIpY9UGpJMcoRqrzTetw7CY2YK6lk
I+72iCJvUBcJqEugvwe8X7VBute33PpWkRGVR7tHTfLPbNlr7dlNK9UG77cU
QFu0cXwXqPH9uNB/fDYz2ofA18O4OfW+wWW+J5fewL9TvLSNCiop8VWrZLqG
SiUnTyj6pty6ljSRinM2Bji79QD1L1fg7DPE2SpJL83ghAbQNICravp4tZMK
pkZYPUqn72bheldPSth6/vDYbOqOKi3KrHP3fBEzsjRUzEhaqxbJJfaze5YU
CO64SM7SB85cXuRZrvueJBGK/VkGLJCGVCjAVhrRn2q5sgy2IxkJDNQyikM0
7wOe+DxZVGWQzdxTRS+SCq2AzVuzA3zYoEsipEt7xO+LNHaBhKi6rEKlGG6x
J5yxetRMT2Qp/X6c0UPLItOqr8AP7wFQN0+cOwNq7twzEgaXWx8gTye4c0Zs
+jIsp8RSYuFjAl0ykfxN8C5SmqqLxkThtnLrI8XTiC7noEt4ikaFGzA0sxjX
pWnNqbSJH/ieEZoN/MKSrb0aSDbBatlkqocKmli0vdz6XPF0KmWcpI/OnIYc
BnsCNX3HmfoACnm2bzK2T0uKzWY0p/wlDqAkTSWTOWGcbyjMRXhEzvwmTWy3
2dC3aFxSsLYmlb2qUGfJ/N6Ao/7j8gLKUp87aGmS28i10DGQwfC/JUzX4nPw
cJ2s6ZxUnxG0Y68v47yjBcvtG9KCnH7pd2vIX3OXM1jMbRTyPi3GCgZD/NBc
MCtLi2PHrTTniltoJPtCfyKoT5czEjYeFY7fapbxJlPAkmgMVv2dPGnzmEDJ
BjPBrCrUJdAMdZF86TLEuL/x6JnxYUSXY9Dln42zN4/ZKllnJuAPaDGgj78Z
F9v1HZaLzfOvFUu/E2P7jKgfsGQiNbkomOSRtoa2rmqv//FksrB0fLerXCcj
Y/KtvcASl3k7kpOw3EzUkYO4xKpUc2n64cL5mw13FBngXDq8rlDnoJvXxqMC
g7wAh/09DB1NMjX5o1jJpgn3ycJNBt3JzEXUiSuT5te62kdtvGXG0eFnBGGw
2sT5tQv4pZ+7fw3ZLzOSkT62ngJCisJZLNZRsfjhwiR5RpBFajR0wVhuVcIW
37Z5ZYu0zxntEzjX4rg6q3HtwnEdA7j+frhwwWbDYqFxEjs5kCzkV20tzTQX
bB5TGpBpziomkVLH9sFsjElcMZviCu8vRrm5uW06GmBcZsaxspgCqZiW+5E1
5Cjuc0DsMwKtwREbUCP2uztZ71iQR2osQUs5aYHtxODv1iRFc2uhiwsVurzA
u3DYqi7TvcjjjgX50+MZOxDn3Uy6XSl6HzIm+6bG6Lyu1L1Tgnskp+bU8VNa
rTybtd30QN/3g74H6OEGbUFWObFji7vNs5mwxgTPI3Dt8NHNtvKJLKycG4Ke
ZZVzxX+GQOjOydb+D98I4nnnpZJvyu8L7kmcOiImZgtvsbkpRiTrei4Voh5f
p5fwS6WUhK1h5hOyqf9UaZVsKC37FvmlKobaLx1U+6UY3d4yS9f59a7gl85w
k3T+jJ461eUtm2vQhqD/ZiP3l8VTub9Vp6iB1o/SdeTENLUwzY7lME2/YDt0
6UVdQvEu3V+6nKZutn5UqDPMiinxH/I4hDCRjlHnHMfUmJzVvfSnZcmCFDfC
Q+oMnNn7UAoekvLCTeyPTUEestlNgDXwYzaTp+iDJwom45EIIThFPdvv1Cjr
R1zdSUTG2gsIXiw2yqYOg38OvbT4GJr91pfZT6hnv6Jb/6el6+ITxOxk3YEz
1x8aluumlKKkh/HVpO8ubcVdG09ievw/mUWWpMUxJYXmkX/gmMSoMfGfqk5q
LlNFwCrdGQQmGdSErdn/ACZTIeMOrx1zAmHSpsak+JQak1xd6UNLiuctN0DZ
+P3ik3iS9gXli2rAu7onHlqWeJYqGQYof3x4qFz3kps98yo2fRcsINbxp6sj
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
2mFJv0xJfvvQcCu4pFjcOUEAewarrJ8MlMuL3Q0KSBJujLaUj86BZXjM9AZG
NOEbpfkQUd+gdd6n9eDtP+AlUbVzVAWho815+R1Dfk0gz99GLV9joNuj0aEB
GLQXz5Q/Q95zEGfV7lOgIWinuCUP1oQniXy7US4N1TUex2q4VXH6O9sR23uv
eONSr7UE/PHdUELJowHbhjmp2dW94426vlob9q9M5jpk7y30Ubu3cZ288zPx
DFkk493kYIQ/l9kP94AzKhvlFqsLYBmQjzvtG2HgtDOicPNrBZVQLq7yYTF9
EBe7HSS870Y7jBvgn41VBpM3VNMHS3PC7ORgdhNQqR+MbTXKXVLa87t4fXhb
+25wlJjS4Tl6w4K93vP/K37dwOPXc8Icc8GACVOOl/Em7bW2KDaakfyL5+7o
H6b/8p8fouW/Rwbs3p08o8Tzl+hjyRs9f9kekBy92KlcvHWulDbt77VXo4dk
8aa5z8XSrbRzt3aevPmx4PxuU8dXWDB6H5PfLhu62lnvfsC++Texx9XdjYnm
xe57SpfTT2hK/znVKCo9H2t67e6vZPM7d4NP9x3uSZZuFnx7u+ajkaK/0f29
L/c3scXN6JfuB/hQYjzorHMPs+WaHydN6z35JlR+9V29+yV7f2Jg9z1tDynn
3nEnnCuM3S2TFdzfaWrVIzlHPjvvarCp1SrSNm6K1F+6+TPvLOv4uyui0kzK
RQnLPMns+Ls0qcvW8xP6D9fpbEWz/1wjOzUc/Wicx3RucfzE/sOtOhHnk7em
v+rquS1LbCijf68pjbpTI2pjULhnDdPJNbKh84nDfexW/fTp3IfyvP7T0u7D
x2+KSu00EI13z4vOvdluarUoCVBZ9xiQkmEXyGfvPNhu+lt/nfv7YKBQtv0l
YB9BYH9LvuexrOBKpOm1BoS98c3tpo77vxON3/QSG8O+cY99pK5LcbyPbaQN
+D0Mvt3P7kGYPgx16meXjM+kuUgZ+7aeX2CueeZYxEv38gXiCQwzc87ZY8NS
i5TNf4SbXrsvPkc2PyHbbnrtHRr/xM3dprkPCGl217/pGII3VnKcbzUgR+u5
A0uSIs3fK7aYR23wPyNVyBX6LP1AdGV4+EdsvIli++lb6b+9gTF+x4focq55
N/w43DS3EEMKUdiz++aH01dFbbssgFdJjyM3XFDUuf9t0n84milGzN7zILZ+
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
/O9M+C8DUZI1Up0Iv/F/APY+4m8=
                    "]]|>, "orcInstance" -> 95148352, "orcModuleId" -> 
                    95298928, "targetMachineId" -> 67579456|>, 
                    139802690926416, 139802690926272, 139802690926352, 
                    139802690920448, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_2d692511_6427_420b_bdc4_fb521ea30e8c", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
n6JGYeHfAWGKv88=
                    "]]|>, "orcInstance" -> 95876736, "orcModuleId" -> 
                    70770576, "targetMachineId" -> 94368688|>, 
                    139802690912800, 139802690912400, 139802690912480, 
                    139802690912256, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", 
                    "$InputShape" -> {4, 300}, "$Batched" -> False, 
                    "$CompileBatchedWrapper" -> False, "$MXOpName" -> 
                    "3d482f8cebba5068", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 300}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 300}, 
                    NeuralNetworks`RealT]|>|>, 
                    "SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 300}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Error" -> <|"Type" -> "CrossEntropyLoss", 
                    "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 4, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 4]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "Target" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Outputs", "Loss"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.86785267138628*^9, 3.867890517081892*^9, 
  3.867892360169606*^9, 3.867892431703993*^9, 3.867892671650535*^9, 
  3.8678934753848133`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"4b1329bb-b6f2-40ff-86a0-d77fc7ee37f4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866180932479144*^9, 3.866180933335601*^9}, {
  3.866260506971014*^9, 3.8662605102109118`*^9}, {3.866262223194878*^9, 
  3.866262223474766*^9}, {3.8666027494425793`*^9, 3.866602750730301*^9}, {
  3.867466626541892*^9, 
  3.8674666272946873`*^9}},ExpressionUUID->"22d0189b-d6a7-44ad-b35a-\
70f7e8d0dd81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
    "softNet", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"testData", ",", 
          RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "4000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866262230733412*^9, 3.866262232700974*^9}, {
   3.866262747191399*^9, 3.866262755095587*^9}, {3.866263687522623*^9, 
   3.866263691522341*^9}, {3.866272907421722*^9, 3.866272908705574*^9}, {
   3.866274679974001*^9, 3.866274683777981*^9}, {3.866275126894273*^9, 
   3.866275130882132*^9}, {3.866275621030303*^9, 3.86627562449095*^9}, {
   3.866275800963348*^9, 3.866275804851942*^9}, {3.866278286918571*^9, 
   3.866278290408846*^9}, {3.866279939718389*^9, 3.8662799438283052`*^9}, {
   3.8662825835076027`*^9, 3.866282587086446*^9}, {3.8662848978232517`*^9, 
   3.8662849013340178`*^9}, {3.866301199025255*^9, 3.866301208705173*^9}, {
   3.866302091405136*^9, 3.866302093072084*^9}, {3.8663022330606956`*^9, 
   3.8663022743807373`*^9}, {3.866303190918262*^9, 3.8663031961042967`*^9}, {
   3.8663508996403513`*^9, 3.866350903983953*^9}, {3.8663558607588453`*^9, 
   3.866355860917651*^9}, {3.86637013313169*^9, 3.866370138430928*^9}, {
   3.866370237003203*^9, 3.866370239455555*^9}, {3.8663703291644793`*^9, 
   3.866370333111907*^9}, {3.866370363265703*^9, 3.866370363711856*^9}, {
   3.8663720431119947`*^9, 3.866372048852154*^9}, {3.866372163198892*^9, 
   3.8663721862104397`*^9}, 3.8663723957836103`*^9, {3.866372460806899*^9, 
   3.866372466981298*^9}, {3.8663728465397882`*^9, 3.866372846690668*^9}, {
   3.866439863015705*^9, 3.866439889076521*^9}, {3.866444399919945*^9, 
   3.866444403398275*^9}, 3.866445596437694*^9, 3.866445994629862*^9, {
   3.866446077093233*^9, 3.8664460772227592`*^9}, {3.866514058957122*^9, 
   3.866514061965129*^9}, {3.866514093672724*^9, 3.8665140946276417`*^9}, 
   3.866514530731886*^9, {3.866514784096607*^9, 3.866514784235477*^9}, {
   3.8665148543229303`*^9, 3.86651485485518*^9}, {3.866517197949828*^9, 
   3.866517203967832*^9}, 3.866517357579501*^9, 3.8665174374755917`*^9, 
   3.8665175119230967`*^9, {3.866517590284361*^9, 3.866517620168564*^9}, 
   3.8665176619240017`*^9, {3.8665179325026484`*^9, 3.8665179399815683`*^9}, {
   3.866518111910069*^9, 3.866518112233807*^9}, {3.866518521945266*^9, 
   3.866518522115803*^9}, {3.866518571201038*^9, 3.866518588328702*^9}, {
   3.866518646862028*^9, 3.866518650143523*^9}, 3.866518704027602*^9, {
   3.866519202548511*^9, 3.8665192068871107`*^9}, {3.866552934111923*^9, 
   3.866552991359269*^9}, {3.866553502473754*^9, 3.8665535030716467`*^9}, {
   3.866554417382031*^9, 3.866554420050095*^9}, {3.866554652086327*^9, 
   3.8665546522545357`*^9}, {3.86686620714637*^9, 3.866866208536282*^9}, {
   3.867131586949819*^9, 3.867131591208543*^9}, 3.867131663043725*^9, {
   3.867131881962668*^9, 3.8671318821029243`*^9}, {3.8671435395321627`*^9, 
   3.867143571356976*^9}, {3.867225758112248*^9, 3.867225764016302*^9}, {
   3.867225848543758*^9, 3.8672258697127447`*^9}, {3.8672259658939657`*^9, 
   3.8672259915292263`*^9}, {3.867226086215555*^9, 3.867226089976021*^9}, {
   3.8672261350253763`*^9, 3.867226203033741*^9}, {3.86722632250366*^9, 
   3.867226427456987*^9}, 3.867235234814995*^9, {3.86724310526048*^9, 
   3.867243107700055*^9}, 3.867292442863179*^9, {3.867379673640683*^9, 
   3.867379676973427*^9}, {3.867380356810781*^9, 3.867380356962483*^9}, {
   3.867399722631425*^9, 3.8673997262314672`*^9}, {3.867400074607986*^9, 
   3.867400084799662*^9}, {3.867400479559969*^9, 3.867400481738756*^9}, {
   3.867421063533587*^9, 3.867421064997341*^9}, {3.86759144532999*^9, 
   3.867591460699141*^9}, {3.867591774794105*^9, 3.8675917749695683`*^9}, {
   3.867593041039818*^9, 3.867593056406097*^9}, {3.867593515276932*^9, 
   3.86759352350137*^9}, {3.867593591941313*^9, 3.8675936595732317`*^9}, {
   3.867593831714517*^9, 3.867593831997171*^9}, {3.867595065092896*^9, 
   3.867595065243403*^9}, {3.867835916244355*^9, 3.867835918646139*^9}, 
   3.8678360557124443`*^9, 3.8678367200528717`*^9, {3.867837646912689*^9, 
   3.867837647063219*^9}, {3.867837717652178*^9, 3.8678377654535313`*^9}, {
   3.867837872184032*^9, 3.867837872308552*^9}, {3.8678379432341213`*^9, 
   3.867837967053742*^9}, {3.867838016209628*^9, 3.867838016385528*^9}, {
   3.867850413687476*^9, 3.867850413839301*^9}, {3.867852822453457*^9, 
   3.867852822881569*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"fbdac8c7-4549-4743-864d-e467d909f319"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedSoftNet", "=", 
  RowBox[{"NetExtract", "[", 
   RowBox[{
    RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
    "\"\<NeuralLogicNet\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866262883598037*^9, 3.866262913813736*^9}, {
  3.866865528144919*^9, 3.866865528678174*^9}, {3.8675914730807447`*^9, 
  3.8675914876778097`*^9}, {3.867594997374662*^9, 3.8675949984056892`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"c3a89cf2-7844-4806-bca2-4513232e25d6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]900\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "AND" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{3600, 64}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {3600, 64}|>,
                     "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {3600, 64}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Weights" -> NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Min" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3600, 64}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {3600}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{3600}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {3600}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {3600}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {3600}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "AND", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "AND", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"BinaryMask"}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "BinaryMask" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Mask" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["BinaryMask"] Slot["Input"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Times], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"BinaryMask" -> 
                    NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "BinaryMask" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3600}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Inputs", "BinaryMask"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout", "Outputs", "BinaryMask"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mask", "Outputs", "Output"]}|>, 
                    "3" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 900}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{3600}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 900}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 900}, 
                    NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3600\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3600\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ReshapeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]900\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]900\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8662628854701767`*^9, 3.86626291478244*^9}, 
   3.866263333811677*^9, 3.866263626951891*^9, 3.866275759059902*^9, 
   3.866278860640707*^9, 3.866279610307885*^9, 3.866283089053381*^9, 
   3.8662840988640747`*^9, 3.866301846366849*^9, 3.8663540211677637`*^9, 
   3.8663541757248697`*^9, 3.866354285702705*^9, 3.866354708948234*^9, 
   3.86635480352043*^9, 3.866354946410275*^9, 3.866355129778678*^9, 
   3.866355344404036*^9, 3.8663554109601917`*^9, 3.866355601157222*^9, 
   3.86635584447652*^9, 3.866357046548826*^9, 3.86635827058148*^9, 
   3.8663603567232637`*^9, 3.8663629451402597`*^9, 3.866363945271487*^9, 
   3.866365130852272*^9, 3.866366035676786*^9, 3.866368355050816*^9, 
   3.8663699230437717`*^9, 3.866371572266882*^9, 3.866438770864565*^9, 
   3.86643896077918*^9, 3.8664391415025454`*^9, 3.866439242730338*^9, 
   3.86643934064322*^9, 3.866439448330102*^9, 3.866440229932144*^9, 
   3.8664404742813272`*^9, 3.8664405592015047`*^9, 3.8664414085277576`*^9, 
   3.8664414792281923`*^9, 3.866441619893333*^9, 3.866441689406056*^9, 
   3.8664417857252293`*^9, 3.866441899861754*^9, 3.866442041711031*^9, 
   3.8664421438082438`*^9, 3.86644220577691*^9, 3.866442923332512*^9, 
   3.866443105210555*^9, 3.866443215017268*^9, 3.866443324261043*^9, 
   3.866443392091382*^9, 3.866443463860209*^9, 3.866443916112817*^9, 
   3.866443978954742*^9, 3.8664440999870872`*^9, 3.866444384668812*^9, 
   3.8664455526363*^9, 3.8664459767216597`*^9, 3.8664460963830557`*^9, 
   3.866446198128482*^9, 3.866446371505559*^9, 3.8664466173131857`*^9, 
   3.866446726857621*^9, 3.866446949046866*^9, 3.866447055125682*^9, 
   3.8665132494825897`*^9, 3.866513528458088*^9, 3.866513862467455*^9, 
   3.866514588270062*^9, 3.8665196537633457`*^9, 3.866521033301351*^9, 
   3.866524695734989*^9, 3.8665277373817797`*^9, 3.866528003896955*^9, 
   3.866529999675105*^9, 3.866532541000852*^9, 3.8665328100689297`*^9, 
   3.866542863935906*^9, 3.86654363350113*^9, 3.866545845362557*^9, 
   3.866546635196596*^9, 3.866547880940085*^9, 3.866549439453635*^9, 
   3.8665500175016737`*^9, 3.8665510002342978`*^9, 3.866553594781185*^9, 
   3.8665537613351927`*^9, 3.866554194193324*^9, 3.8665543759376163`*^9, 
   3.8665557900087967`*^9, 3.866600803446225*^9, 3.86660110824417*^9, 
   3.8666014083894787`*^9, 3.8666032722125683`*^9, 3.866603646506237*^9, 
   3.866603924967039*^9, 3.866614149217051*^9, 3.866614517604972*^9, 
   3.8666150772760963`*^9, 3.866615910520022*^9, 3.866617005433221*^9, 
   3.866620518171906*^9, 3.86662136387157*^9, 3.866621931729815*^9, 
   3.86662265578474*^9, 3.866623643819304*^9, 3.866623929846479*^9, 
   3.8666243138661947`*^9, 3.866625027852901*^9, 3.866625329973116*^9, 
   3.8666263955294523`*^9, 3.866626636440639*^9, 3.8666301937443323`*^9, 
   3.866635284071369*^9, 3.8666379464893007`*^9, 3.866865267141653*^9, 
   3.8668659776585407`*^9, 3.8668665360607643`*^9, 3.8668674552454987`*^9, 
   3.866874124396035*^9, 3.86687497460295*^9, 3.8668969132601852`*^9, 
   3.866898071418168*^9, 3.866898609243305*^9, 3.866899135802105*^9, 
   3.866900146525358*^9, 3.866900346483822*^9, 3.86690075029182*^9, 
   3.866942200550881*^9, 3.8669434691033688`*^9, 3.8669440568455133`*^9, 
   3.866944409151135*^9, 3.866946623331648*^9, 3.866950472530398*^9, 
   3.8669509935934668`*^9, 3.866951548335429*^9, 3.866952511511688*^9, 
   3.866953356553648*^9, 3.8669542721524076`*^9, 3.866955408462162*^9, 
   3.866955759821617*^9, 3.866956215314837*^9, 3.866956489039291*^9, 
   3.866957050192541*^9, 3.8669574385039263`*^9, 3.8669581345274153`*^9, 
   3.866958404615336*^9, 3.866958748148402*^9, 3.8669592708283167`*^9, 
   3.866960524376287*^9, 3.866960648062818*^9, 3.866964482955254*^9, 
   3.866965870107953*^9, 3.8669665698327627`*^9, 3.866966912796961*^9, 
   3.866967234979121*^9, 3.8669675446415567`*^9, 3.8669681544987707`*^9, 
   3.8669687474689293`*^9, 3.866969471312014*^9, 3.866975997689666*^9, 
   3.86697784559586*^9, 3.866988474220516*^9, 3.867070541267486*^9, 
   3.867071141063098*^9, 3.867071512821946*^9, 3.867072495499333*^9, 
   3.867072807623479*^9, 3.867073708828951*^9, 3.867074044368046*^9, 
   3.8670743576774607`*^9, 3.867074511128997*^9, 3.867074885972481*^9, 
   3.867075384159924*^9, 3.867075666872263*^9, 3.8670759595572643`*^9, 
   3.867130703473978*^9, 3.8671325789590693`*^9, 3.867142055908609*^9, 
   3.867142222402884*^9, 3.86714258728478*^9, 3.8671430669219217`*^9, 
   3.8671432468665457`*^9, 3.867144668168933*^9, 3.867145744115079*^9, 
   3.86714627085634*^9, 3.8671501033240128`*^9, 3.86715087699004*^9, 
   3.867152069829074*^9, 3.867152733883814*^9, 3.86715325574749*^9, 
   3.867159760259474*^9, 3.867161045989644*^9, 3.867161593031602*^9, 
   3.867162093302425*^9, 3.867162545278716*^9, 3.867162929672419*^9, 
   3.8671631215691357`*^9, 3.8671635752851887`*^9, 3.867163736166375*^9, 
   3.867164020783208*^9, 3.8671642536302013`*^9, 3.867164730673498*^9, 
   3.86720897018189*^9, 3.867209543944471*^9, 3.867210754863386*^9, 
   3.867213186296348*^9, 3.867213987741856*^9, 3.867214842121695*^9, 
   3.867215183394917*^9, 3.867216239673912*^9, 3.867216550433502*^9, 
   3.86721673027888*^9, 3.867217090260976*^9, 3.867217943020084*^9, 
   3.867219362485512*^9, 3.86721988612037*^9, 3.867220752092207*^9, 
   3.867224123145873*^9, 3.8672245028341417`*^9, 3.867224893030838*^9, 
   3.867225253221676*^9, 3.867226899220113*^9, 3.867227193709606*^9, 
   3.867227850496901*^9, 3.8672282892724247`*^9, 3.867235574360211*^9, 
   3.867235802347309*^9, 3.86723620735044*^9, 3.867236645705991*^9, 
   3.867237664538694*^9, 3.8672382521528063`*^9, 3.867238903085815*^9, 
   3.867239250507195*^9, 3.8672396236514893`*^9, 3.867239883283255*^9, 
   3.8672402566845303`*^9, 3.8672416694881287`*^9, 3.867241919213375*^9, 
   3.8672433504474154`*^9, 3.867243745229207*^9, 3.867244112883206*^9, 
   3.8672444029692574`*^9, 3.867244627217216*^9, 3.867292663020062*^9, 
   3.867293070341237*^9, 3.867293578277958*^9, 3.867293942874217*^9, 
   3.867294254384894*^9, 3.867294581837659*^9, 3.8672951611778097`*^9, 
   3.867295683005228*^9, 3.867304246515335*^9, 3.867304762852366*^9, 
   3.867305406975029*^9, 3.867305771133658*^9, 3.8673062724983683`*^9, 
   3.867306606408617*^9, 3.867307169408957*^9, 3.867307380094698*^9, 
   3.8673104061289043`*^9, 3.867311088972395*^9, 3.867311638861496*^9, 
   3.8673118554485693`*^9, 3.867312160097467*^9, 3.8673135117500153`*^9, 
   3.867314146997654*^9, 3.867314434514402*^9, 3.8673181359732227`*^9, 
   3.867318455978945*^9, 3.867318746946628*^9, 3.867319245380412*^9, 
   3.867319558308886*^9, 3.867321199984851*^9, 3.867321463552224*^9, 
   3.8673233735844727`*^9, 3.867323787084449*^9, 3.8673241725604258`*^9, 
   3.867329659517404*^9, 3.867329976854364*^9, 3.8673307791571836`*^9, 
   3.8673310481814213`*^9, 3.8673312110003557`*^9, 3.867331396102231*^9, 
   3.867331840615056*^9, 3.8673327651571198`*^9, 3.867333807483214*^9, 
   3.867334267485148*^9, 3.867379551509262*^9, 3.867379706118277*^9, 
   3.867380208989422*^9, 3.867380441625167*^9, 3.8673807366328*^9, 
   3.867381302682927*^9, 3.867381745571897*^9, 3.86738205042131*^9, 
   3.867382491688291*^9, 3.8673830913584557`*^9, 3.8673834757586*^9, 
   3.8673843358910027`*^9, 3.8673847159639587`*^9, 3.867385052790865*^9, 
   3.8673861417047033`*^9, 3.8673864721323223`*^9, 3.867387027954995*^9, 
   3.867387452676517*^9, 3.867387822766666*^9, 3.8673880857180634`*^9, 
   3.867388433783766*^9, 3.8673999983117247`*^9, 3.867400309497061*^9, 
   3.867400765912784*^9, 3.8674042712454023`*^9, 3.867405171660681*^9, 
   3.8674055927740173`*^9, 3.86740679373538*^9, 3.867407616891014*^9, 
   3.867408261660056*^9, 3.867409571049901*^9, 3.867410389073472*^9, 
   3.8674107990115547`*^9, 3.867411931104046*^9, 3.867418477304476*^9, 
   3.8674190261068087`*^9, 3.8674195901094227`*^9, 3.8674207603084717`*^9, 
   3.86742184116043*^9, 3.867464383052712*^9, 3.867465332275449*^9, 
   3.8674692876969976`*^9, 3.867470425821095*^9, 3.867471394303174*^9, 
   3.8674800170308723`*^9, 3.8674821001653957`*^9, 3.867483077270279*^9, 
   3.86748399390837*^9, 3.86748571092913*^9, 3.867485930024376*^9, 
   3.867486406530424*^9, 3.86756560623253*^9, 3.867565882218875*^9, 
   3.867566129295733*^9, 3.867566486408596*^9, 3.867568883178177*^9, 
   3.867569364404112*^9, 3.867576249193199*^9, 3.867577034087057*^9, 
   3.86758006294209*^9, 3.867580361914866*^9, 3.8675813554675922`*^9, 
   3.867591413262083*^9, 3.8675916969228163`*^9, 3.8675921416186953`*^9, 
   3.867592476569607*^9, 3.867593307680511*^9, 3.867594998911373*^9, 
   3.8676382636106043`*^9, 3.8676506346064453`*^9, 3.8676528842179947`*^9, 
   3.867654807175769*^9, 3.867656382543395*^9, 3.8676598275474453`*^9, 
   3.867660583738608*^9, 3.867820776062737*^9, 3.8678213353311234`*^9, 
   3.867823748394882*^9, 3.867831234747699*^9, 3.8678374859678907`*^9, 
   3.8678469174561987`*^9, 3.8678523440620747`*^9, 3.8678968029434433`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"a4210781-b87e-4cd4-baf3-14f1670cfa24"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.865509544459216*^9, 3.865509545362651*^9}, {3.8668654702612267`*^9, 
  3.866865471244494*^9}},ExpressionUUID->"e2a69d6c-fddf-4ce0-9a60-\
6b136e91fb12"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{
    RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
    RowBox[{"ConvertDataToClasses", "[", "testData", "]"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8675912624933243`*^9, 3.8675912645650873`*^9}, {
  3.867591419757333*^9, 3.86759142034127*^9}, {3.867591718010557*^9, 
  3.867591738878278*^9}, {3.8675933493486156`*^9, 3.867593351860548*^9}, {
  3.867595003334629*^9, 3.867595005556345*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"61cf3e56-b150-406f-a005-b09cf3a4f4b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"softPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainedSoftNet", "[", 
         RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardenedPredictionTargetPairs", "=", 
   RowBox[{"Harden", "[", "softPredictionTargetPairs", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8632403336213713`*^9, 3.863240377260723*^9}, 
   3.864794328166184*^9, {3.864794407903618*^9, 3.864794436294898*^9}, {
   3.8650544818297043`*^9, 3.865054482561998*^9}, {3.8650591999549913`*^9, 
   3.865059216538383*^9}, {3.865060098170718*^9, 3.865060117548669*^9}, {
   3.865083374025154*^9, 3.865083380805747*^9}, {3.8650835363762093`*^9, 
   3.865083538071233*^9}, {3.865590907688581*^9, 3.865590907991177*^9}, {
   3.865610944975788*^9, 3.865610947181724*^9}, {3.865655407744947*^9, 
   3.865655408023315*^9}, {3.86626050147324*^9, 3.8662605016737347`*^9}, {
   3.86626089567375*^9, 3.86626089681426*^9}, 3.866260938745146*^9, {
   3.866262482360608*^9, 3.866262529517881*^9}, {3.866262922944813*^9, 
   3.866262923422676*^9}, {3.866368441574706*^9, 3.8663684417477407`*^9}, {
   3.8665196844820623`*^9, 3.8665196894081583`*^9}, {3.86651977579454*^9, 
   3.8665198307447023`*^9}, {3.866543759104864*^9, 3.866543761043337*^9}, {
   3.866543933814775*^9, 3.866543946874074*^9}, {3.866544213286334*^9, 
   3.8665442159066887`*^9}, {3.866544345821237*^9, 3.866544359573098*^9}, {
   3.866544406102911*^9, 3.866544410862302*^9}, {3.8665444631671553`*^9, 
   3.866544554177885*^9}, {3.8665453759492197`*^9, 3.866545380545129*^9}, {
   3.866637950431554*^9, 3.866637951085165*^9}, {3.866865285097145*^9, 
   3.866865285469962*^9}, {3.8668653748813343`*^9, 3.8668653802748404`*^9}, {
   3.866865532978038*^9, 3.866865534495945*^9}, {3.866866544565024*^9, 
   3.866866545127615*^9}, 3.867162578537319*^9, {3.867219455610979*^9, 
   3.867219455860599*^9}, {3.8675912676571007`*^9, 3.86759126780343*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"a637f3cb-d7f7-4492-ad2f-108fbd4b3b99"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 93.9858%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "5167"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "4643"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}], "\[Rule]", "4410"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "4392"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", "213"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", "199"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", "174"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "133"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "\[Rule]", "105"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "100"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", "75"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", "69"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "1"}], "}"}], "\[Rule]", "50"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", "42"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "21"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "10"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->CompressedData["
1:eJwd1Xs4VGkcB3CXlqLtKol23UaKMUItRaWpTFppyK2btrEiyn0kKvO4xKrY
NJUY15AuRBFFKZQoNSJPRKlN5BZaRDXt77vnj/N5nvc95/e87/s9v+do8nzt
3aWl6KKbxSjzLf9Z/1qz9wJmMPnFfrov9NzN6IQavIeaoeSHCsUTkN0ZwY4m
96axmqBSQYjyMXJXnLELNFQ43gJVOk5+gjKSqVox5EuP7btTyDDtzu+Q2+zE
EZEXtf0D4V/TNGNTybYF3H3pmK/2uwxlz671zCCNfV82wrYfa9Znkl5Rbs+h
fqy5BF5n6ppmkS/kIrfB56Ux6TApZJYYjqnO1r2A/SW/3AgLh5sC4QwjjRKY
trPRLpu8p2W1B04NLrLMJeWXswYh+0nxhoukyCTID9al3UmCQ/ODKuGi1BzF
PLL3UasjZJ6wLoQaTfM6r6Be/bzaq+Tc5hvjRVhf30yFNjJfPMcRmlmkREKG
P1cCVyR76rwic+p/nIGD90cqoc1i627Ysm39JByaMFnSTloopXjA0KAXcXBQ
cfs16NTp6jVOSt1qdPhCnsw9NPqNXKdvpvAd8383m8IZ/IZA+PN5+zhod63d
XEJGjThVQckD7pQfpJXDhn+kxP1r89b2r5MmORWtIlhhZ9oKG2YvZ8qQnda2
B+BWG2NzOfKuMC4c/nms+Q7kVseMQc/l7ovkSTfVXavhJ8Hcg3D1FJPj/8uv
LoDrDDoew0f9AvmppFFVSOYvZJm18UeovCxF8CvZ8eZQoTrZbpGrpEHypPnh
UIalexnO4uuwNMmsPd8doOxEvTfU8g5Ogj5v58hqkXtVIothFntsFOrvM+Np
k1NkkuV1yFslM01hT2yLB/Sc3SqEk27pvEXkfp1zMdB5zfFWGLDhzCxdMiNP
IV2PzOZGl0PpZ8xBKDo3zNAn14u52VBs+mgARqzSXsPEPmpPe0GfLYbnoVNd
1y0oWhbcAw3Ew0kG5FCwURnktWh5s8irQbEiqNCwsx72vesbhEuEtQqGeJ7X
Hm5FltfMug7PCjOH4SVbW3UOqVc83Qq2xxv4QkZNQClUZ7lOQF+pAF0b8rBa
uQdMcrUsg4N2TV3Qa+AgYzPyijOxha68U0LYXN1fAC95Ll6yhfzgLDgKLy+0
rIaeV3e8hlK+HlO4yCPKLR8Ku+5+gyHKlRp2pNLN/Z/syW61XfO3YrzstjlM
K5MLhSWNSzPh7VNePg5k7VVOArT/bHbUkXQ3tYiGN16XFEGh+t23UKUnPcGF
fCq1sRSaVCepbcN5N5isgqGl8XYwOLvQEzrHsjOgqtfTudvJlh7Ls5B5M+MZ
TPqg2u9HntHbNAIzFP1+wOABzmp/Uj7HeQdUSzATwPch0rVQPOQmgdNzwhgB
qGObugMGFiTmQp5mdgu82cZgB5KO93P9YXtBRQpc2fFaO4isnLF0M8zSy0+E
NQX3a+HKaTJjkPX5jTKf3J7HY8OnAV+7Q8lff3szIwz9LjvEgSOxypLD5MLC
Kz5HyCo+5wK0DYhfcZR8J7UzAz7QWzYMRb0iYTjOIeLVJLwbN58lIPO9LpdD
UXHvQCQ5nHDdOAr1vWUOwYdWtorR6JsJj0SosNfCJRl5/1T3FMoyHO6IsN4F
4b+nklGlITVwsSNnMpPk32mek4U6H8+rwhjxDQnMKxaHXCDjvnj0wd6V8lXZ
pE2YeweMj/yqkoP3wj7XPMZ3Mry/GxYu3iT3hAzaNWIMIwxPujaQA++uJ0P2
H07jYrLe7sC2RrJoclrzc7Ju5v4JeDNBxG8ilfNN778kE000PkKjsF5GG7nx
e+X6T8i968aWUeQyObZvjLzHrHMZR397b1b7QpY9LmmYIB3czupNklvncfZs
bKT/z5G0vbDC8HQeXDlt+StrMt5VEL2Z1D51TsglbZbIf3Am/61KPH2A/A9Q
XW93
  "],
 CellLabel->"Out[24]=",ExpressionUUID->"7325ebe8-a581-46ef-84f5-586442c1e3ac"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"RandomSample", "[", 
       RowBox[{"hardenedPredictionTargetPairs", ",", "5"}], "]"}], ",", "1"}],
      "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"True", "->", 
     RowBox[{"Style", "[", 
      RowBox[{"True", ",", "Red"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.867383550245969*^9, 3.867383551294194*^9}, 
   3.867896997431472*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"fd20a90c-0e3a-42a1-ac7f-bc712b1b2778"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"First", "/@", "softPredictionTargetPairs"}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867214498029375*^9, 3.867214530414569*^9}, {
  3.867382601200721*^9, 3.867382603134129*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"0bd26ae7-e31b-4a68-b76a-1002446f1f03"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5599999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5599999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {0.05, 1.7478782*^7}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{46.45824315702562, 
           62.27865573708967}, {-97.07787911292664, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 17478782]& ,
        TagBoxNote->"17478782"],
       StyleBox["17478782", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[17478782, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.05, 0}, {0.1, 5.686995*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{61.77865573708967, 77.59906831715372}, {
           26.685737541619424`, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5686995]& ,
        TagBoxNote->"5686995"],
       StyleBox["5686995", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5686995, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.1, 0}, {0.15, 2.869858*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{77.09906831715372, 92.91948089721777}, {
           56.2536956239133, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2869858]& ,
        TagBoxNote->"2869858"],
       StyleBox["2869858", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2869858, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.15, 0}, {0.2, 2.382893*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{92.41948089721777, 108.23989347728184`}, {
           61.36475721145563, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2382893]& ,
        TagBoxNote->"2382893"],
       StyleBox["2382893", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2382893, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.2, 0}, {0.25, 1.698694*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{107.73989347728184`, 123.56030605734588`}, {
           68.54593702342339, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1698694]& ,
        TagBoxNote->"1698694"],
       StyleBox["1698694", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1698694, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.25, 0}, {0.3, 1.427156*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{123.06030605734588`, 138.88071863740993`}, {
           71.39593125577699, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1427156]& ,
        TagBoxNote->"1427156"],
       StyleBox["1427156", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1427156, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.3, 0}, {0.35, 1.481894*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{138.38071863740993`, 154.20113121747397`}, {
           70.82141503966517, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1481894]& ,
        TagBoxNote->"1481894"],
       StyleBox["1481894", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1481894, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.35, 0}, {0.4, 1.689463*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{153.70113121747397`, 169.52154379753804`}, {
           68.64282326681789, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1689463]& ,
        TagBoxNote->"1689463"],
       StyleBox["1689463", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1689463, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.4, 0}, {0.45, 2.385402*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{169.02154379753804`, 184.84195637760212`}, {
           61.338423381461396`, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2385402]& ,
        TagBoxNote->"2385402"],
       StyleBox["2385402", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2385402, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.45, 0}, {0.5, 5.256938*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{184.34195637760212`, 200.16236895766616`}, {
           31.1995071413929, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5256938]& ,
        TagBoxNote->"5256938"],
       StyleBox["5256938", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5256938, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {0.55, 4.693246*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{199.66236895766616`, 215.4827815377302}, {
           37.11587593258921, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4693246]& ,
        TagBoxNote->"4693246"],
       StyleBox["4693246", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4693246, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.55, 0}, {0.6, 2.30721*^6}, "RoundingRadius" -> 0]},
          
          
          ImageSizeCache->{{214.9827815377302, 230.80319411779425`}, {
           62.1591068549207, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2307210]& ,
        TagBoxNote->"2307210"],
       StyleBox["2307210", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2307210, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.6, 0}, {0.65, 1.436927*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{230.30319411779425`, 246.1236066978583}, {
           71.29337730883648, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1436927]& ,
        TagBoxNote->"1436927"],
       StyleBox["1436927", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1436927, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.65, 0}, {0.7, 1.259219*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{245.6236066978583, 261.44401927792234`}, {
           73.15855557133784, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1259219]& ,
        TagBoxNote->"1259219"],
       StyleBox["1259219", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1259219, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.7, 0}, {0.75, 1.226439*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{260.94401927792234`, 276.7644318579864}, {
           73.50260616807404, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1226439]& ,
        TagBoxNote->"1226439"],
       StyleBox["1226439", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1226439, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.75, 0}, {0.8, 1.539543*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{276.2644318579864, 292.0848444380505}, {
           70.21634570314154, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1539543]& ,
        TagBoxNote->"1539543"],
       StyleBox["1539543", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1539543, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.8, 0}, {0.85, 1.581312*^6}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{291.5848444380505, 307.40525701811447`}, {
           69.77794883385923, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1581312]& ,
        TagBoxNote->"1581312"],
       StyleBox["1581312", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1581312, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.85, 0}, {0.9, 1.898872*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{306.90525701811447`, 322.72566959817857`}, {
           66.44491931892502, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1898872]& ,
        TagBoxNote->"1898872"],
       StyleBox["1898872", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1898872, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.9, 0}, {0.95, 3.072603*^6}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{322.22566959817857`, 338.0460821782426}, {
           54.125735336076865`, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3072603]& ,
        TagBoxNote->"3072603"],
       StyleBox["3072603", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3072603, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.95, 0}, {1., 9.917354*^6}, "RoundingRadius" -> 0]},
          
          
          ImageSizeCache->{{337.5460821782426, 
           353.36649475830666`}, {-17.71504154191632, 86.875}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 9917354]& ,
        TagBoxNote->"9917354"],
       StyleBox["9917354", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9917354, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.02, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8672145012856503`*^9, 3.86721453103242*^9}, 
   3.867214886673502*^9, 3.8672152540007877`*^9, 3.867216351594112*^9, 
   3.8672165884984837`*^9, 3.867216774551539*^9, 3.867217133104129*^9, 
   3.867217991284543*^9, 3.867219410741493*^9, 3.867219941199617*^9, 
   3.867220804408003*^9, 3.867224167423118*^9, 3.867224953652439*^9, 
   3.867225310024466*^9, 3.8672269464513607`*^9, 3.8672279101112137`*^9, 
   3.867235616907338*^9, 3.86723626603331*^9, 3.867236701548422*^9, 
   3.867237717473666*^9, 3.867238308657311*^9, 3.867239307370199*^9, 
   3.867239677388426*^9, 3.8672399522345467`*^9, 3.8672403054119577`*^9, 
   3.867241727039076*^9, 3.86724339296774*^9, 3.867243812575938*^9, 
   3.867244167981337*^9, 3.867244457449991*^9, 3.86729274240382*^9, 
   3.867293628350546*^9, 3.867293994011964*^9, 3.867294651545733*^9, 
   3.867295760022895*^9, 3.867304327902404*^9, 3.867305469868129*^9, 
   3.8673063345418577`*^9, 3.867307248568591*^9, 3.8673119534948187`*^9, 
   3.8673135773524446`*^9, 3.867318191097289*^9, 3.867323471170349*^9, 
   3.867329702532007*^9, 3.8673300425460663`*^9, {3.8673825758518867`*^9, 
   3.867382603921441*^9}, 3.867383554208437*^9, 3.867386533410076*^9, 
   3.867408323390875*^9, 3.867419651396039*^9, 3.867469394209402*^9, 
   3.86757711535248*^9, 3.867580419259817*^9, 3.86789700993076*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"b7374209-1ec3-4cef-a5d5-6621c1cee249"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"ExtractWeights", "[", "trainedSoftNet", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866953397932728*^9, 3.866953404315634*^9}, {
  3.866953505684793*^9, 3.866953515956293*^9}, {3.867305490607383*^9, 
  3.867305500732195*^9}, {3.867382609248455*^9, 3.867382611150051*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"4836d32b-7df4-4c05-858e-1e553b9f2099"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
    Opacity[0.]], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
     Opacity[0.]], RectangleBox[{-0.03, 0}, {-0.02, 210.},
      RoundingRadius->0], RectangleBox[{-0.02, 0}, {-0.01, 3299.},
      RoundingRadius->0], RectangleBox[{-0.01, 0}, {0., 93172.},
      RoundingRadius->0], RectangleBox[{0., 0}, {0.01, 93177.},
      RoundingRadius->0], RectangleBox[{0.01, 0}, {0.02, 735.},
      RoundingRadius->0], RectangleBox[{0.02, 0}, {0.03, 683.},
      RoundingRadius->0], RectangleBox[{0.03, 0}, {0.04, 682.},
      RoundingRadius->0], RectangleBox[{0.04, 0}, {0.05, 658.},
      RoundingRadius->0], RectangleBox[{0.05, 0}, {0.06, 735.},
      RoundingRadius->0], RectangleBox[{0.06, 0}, {0.07, 631.},
      RoundingRadius->0], RectangleBox[{0.07, 0}, {0.08, 677.},
      RoundingRadius->0], RectangleBox[{0.08, 0}, {0.09, 678.},
      RoundingRadius->0], RectangleBox[{0.09, 0}, {0.1, 671.},
      RoundingRadius->0], RectangleBox[{0.1, 0}, {0.11, 645.},
      RoundingRadius->0], RectangleBox[{0.11, 0}, {0.12, 639.},
      RoundingRadius->0], RectangleBox[{0.12, 0}, {0.13, 598.},
      RoundingRadius->0], RectangleBox[{0.13, 0}, {0.14, 594.},
      RoundingRadius->0], RectangleBox[{0.14, 0}, {0.15, 562.},
      RoundingRadius->0], RectangleBox[{0.15, 0}, {0.16, 590.},
      RoundingRadius->0], RectangleBox[{0.16, 0}, {0.17, 603.},
      RoundingRadius->0], RectangleBox[{0.17, 0}, {0.18, 598.},
      RoundingRadius->0], RectangleBox[{0.18, 0}, {0.19, 578.},
      RoundingRadius->0], RectangleBox[{0.19, 0}, {0.2, 570.},
      RoundingRadius->0], RectangleBox[{0.2, 0}, {0.21, 556.},
      RoundingRadius->0], RectangleBox[{0.21, 0}, {0.22, 587.},
      RoundingRadius->0], RectangleBox[{0.22, 0}, {0.23, 587.},
      RoundingRadius->0], RectangleBox[{0.23, 0}, {0.24, 542.},
      RoundingRadius->0], RectangleBox[{0.24, 0}, {0.25, 584.},
      RoundingRadius->0], RectangleBox[{0.25, 0}, {0.26, 540.},
      RoundingRadius->0], RectangleBox[{0.26, 0}, {0.27, 567.},
      RoundingRadius->0], RectangleBox[{0.27, 0}, {0.28, 540.},
      RoundingRadius->0], RectangleBox[{0.28, 0}, {0.29, 564.},
      RoundingRadius->0], RectangleBox[{0.29, 0}, {0.3, 553.},
      RoundingRadius->0], RectangleBox[{0.3, 0}, {0.31, 564.},
      RoundingRadius->0], RectangleBox[{0.31, 0}, {0.32, 600.},
      RoundingRadius->0], RectangleBox[{0.32, 0}, {0.33, 523.},
      RoundingRadius->0], RectangleBox[{0.33, 0}, {0.34, 563.},
      RoundingRadius->0], RectangleBox[{0.34, 0}, {0.35, 523.},
      RoundingRadius->0], RectangleBox[{0.35, 0}, {0.36, 475.},
      RoundingRadius->0], RectangleBox[{0.36, 0}, {0.37, 488.},
      RoundingRadius->0], RectangleBox[{0.37, 0}, {0.38, 472.},
      RoundingRadius->0], RectangleBox[{0.38, 0}, {0.39, 501.},
      RoundingRadius->0], RectangleBox[{0.39, 0}, {0.4, 469.},
      RoundingRadius->0], RectangleBox[{0.4, 0}, {0.41, 452.},
      RoundingRadius->0], RectangleBox[{0.41, 0}, {0.42, 469.},
      RoundingRadius->0], RectangleBox[{0.42, 0}, {0.43, 452.},
      RoundingRadius->0], RectangleBox[{0.43, 0}, {0.44, 426.},
      RoundingRadius->0], RectangleBox[{0.44, 0}, {0.45, 488.},
      RoundingRadius->0], RectangleBox[{0.45, 0}, {0.46, 465.},
      RoundingRadius->0], RectangleBox[{0.46, 0}, {0.47, 535.},
      RoundingRadius->0], RectangleBox[{0.47, 0}, {0.48, 554.},
      RoundingRadius->0], RectangleBox[{0.48, 0}, {0.49, 669.},
      RoundingRadius->0], RectangleBox[{0.49, 0}, {0.5, 878.},
      RoundingRadius->0], RectangleBox[{0.5, 0}, {0.51, 806.},
      RoundingRadius->0], RectangleBox[{0.51, 0}, {0.52, 605.},
      RoundingRadius->0], RectangleBox[{0.52, 0}, {0.53, 496.},
      RoundingRadius->0], RectangleBox[{0.53, 0}, {0.54, 451.},
      RoundingRadius->0], RectangleBox[{0.54, 0}, {0.55, 404.},
      RoundingRadius->0], RectangleBox[{0.55, 0}, {0.56, 337.},
      RoundingRadius->0], RectangleBox[{0.56, 0}, {0.57, 359.},
      RoundingRadius->0], RectangleBox[{0.57, 0}, {0.58, 331.},
      RoundingRadius->0], RectangleBox[{0.58, 0}, {0.59, 317.},
      RoundingRadius->0], RectangleBox[{0.59, 0}, {0.6, 320.},
      RoundingRadius->0], RectangleBox[{0.6, 0}, {0.61, 321.},
      RoundingRadius->0], RectangleBox[{0.61, 0}, {0.62, 310.},
      RoundingRadius->0], RectangleBox[{0.62, 0}, {0.63, 298.},
      RoundingRadius->0], RectangleBox[{0.63, 0}, {0.64, 278.},
      RoundingRadius->0], RectangleBox[{0.64, 0}, {0.65, 277.},
      RoundingRadius->0], RectangleBox[{0.65, 0}, {0.66, 262.},
      RoundingRadius->0], RectangleBox[{0.66, 0}, {0.67, 293.},
      RoundingRadius->0], RectangleBox[{0.67, 0}, {0.68, 282.},
      RoundingRadius->0], RectangleBox[{0.68, 0}, {0.69, 264.},
      RoundingRadius->0], RectangleBox[{0.69, 0}, {0.7, 234.},
      RoundingRadius->0], RectangleBox[{0.7, 0}, {0.71, 254.},
      RoundingRadius->0], RectangleBox[{0.71, 0}, {0.72, 228.},
      RoundingRadius->0], RectangleBox[{0.72, 0}, {0.73, 226.},
      RoundingRadius->0], RectangleBox[{0.73, 0}, {0.74, 192.},
      RoundingRadius->0], RectangleBox[{0.74, 0}, {0.75, 199.},
      RoundingRadius->0], RectangleBox[{0.75, 0}, {0.76, 177.},
      RoundingRadius->0], RectangleBox[{0.76, 0}, {0.77, 192.},
      RoundingRadius->0], RectangleBox[{0.77, 0}, {0.78, 166.},
      RoundingRadius->0], RectangleBox[{0.78, 0}, {0.79, 182.},
      RoundingRadius->0], RectangleBox[{0.79, 0}, {0.8, 182.},
      RoundingRadius->0], RectangleBox[{0.8, 0}, {0.81, 166.},
      RoundingRadius->0], RectangleBox[{0.81, 0}, {0.82, 150.},
      RoundingRadius->0], RectangleBox[{0.82, 0}, {0.83, 136.},
      RoundingRadius->0], RectangleBox[{0.83, 0}, {0.84, 142.},
      RoundingRadius->0], RectangleBox[{0.84, 0}, {0.85, 138.},
      RoundingRadius->0], RectangleBox[{0.85, 0}, {0.86, 156.},
      RoundingRadius->0], RectangleBox[{0.86, 0}, {0.87, 150.},
      RoundingRadius->0], RectangleBox[{0.87, 0}, {0.88, 135.},
      RoundingRadius->0], RectangleBox[{0.88, 0}, {0.89, 134.},
      RoundingRadius->0], RectangleBox[{0.89, 0}, {0.9, 146.},
      RoundingRadius->0], RectangleBox[{0.9, 0}, {0.91, 104.},
      RoundingRadius->0], RectangleBox[{0.91, 0}, {0.92, 104.},
      RoundingRadius->0], RectangleBox[{0.92, 0}, {0.93, 107.},
      RoundingRadius->0], RectangleBox[{0.93, 0}, {0.94, 115.},
      RoundingRadius->0], RectangleBox[{0.94, 0}, {0.95, 94.},
      RoundingRadius->0], RectangleBox[{0.95, 0}, {0.96, 105.},
      RoundingRadius->0], RectangleBox[{0.96, 0}, {0.97, 109.},
      RoundingRadius->0], RectangleBox[{0.97, 0}, {0.98, 105.},
      RoundingRadius->0], RectangleBox[{0.98, 0}, {0.99, 91.},
      RoundingRadius->0], RectangleBox[{0.99, 0}, {1., 2017.},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.01, 2176.},
      RoundingRadius->0], RectangleBox[{1.01, 0}, {1.02, 6.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.051000000000000004`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-0.03, 1.02}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.866953405398438*^9, {3.8669535086600723`*^9, 3.8669535168089046`*^9}, 
   3.866954313826535*^9, 3.866955457083973*^9, 3.8669557990421457`*^9, 
   3.866956255330904*^9, 3.8669565304074993`*^9, 3.8669570894272423`*^9, 
   3.8669574773997*^9, 3.866958175242688*^9, 3.866958443749235*^9, 
   3.866959311543325*^9, 3.8669645251454897`*^9, 3.8669666181421423`*^9, 
   3.866967585518009*^9, 3.866968194173625*^9, 3.8669687903644257`*^9, 
   3.8669695121091843`*^9, 3.8669778912310266`*^9, 3.8669885587554703`*^9, 
   3.867071193495838*^9, 3.867072542819018*^9, 3.8670737514774847`*^9, 
   3.867074113470283*^9, 3.8670749610975227`*^9, 3.867143628016296*^9, 
   3.867145791625614*^9, 3.867152781387341*^9, 3.8671625871255836`*^9, 
   3.8671637686717653`*^9, 3.867164072222712*^9, 3.8672056243581*^9, 
   3.867209073037076*^9, 3.867209586902226*^9, 3.867214140415625*^9, 
   3.867214888956481*^9, 3.867215256093277*^9, 3.8672163552337627`*^9, 
   3.867216591914497*^9, 3.867216777130972*^9, 3.867217137334942*^9, 
   3.867217996261094*^9, 3.867219420254675*^9, 3.867219946982617*^9, 
   3.8672208086987123`*^9, 3.867224171790861*^9, 3.8672249784404716`*^9, 
   3.867225313424816*^9, 3.8672269503439093`*^9, 3.86722791201066*^9, 
   3.867235619647745*^9, 3.86723626903706*^9, 3.8672367036959677`*^9, 
   3.867237721080928*^9, 3.867238314503063*^9, 3.8672393107718887`*^9, 
   3.8672396811779137`*^9, 3.867239956582532*^9, 3.867240311914506*^9, 
   3.867241732923114*^9, 3.867244174200135*^9, 3.867244467379243*^9, 
   3.867292748791696*^9, 3.86729364497375*^9, 3.8672939960119658`*^9, 
   3.867294655644163*^9, 3.8672957645747232`*^9, 3.867304330659622*^9, {
   3.8673054790161047`*^9, 3.86730550247573*^9}, 3.86730634147044*^9, 
   3.867307252855768*^9, 3.867311956834914*^9, 3.86731358127571*^9, 
   3.867318195891453*^9, 3.867323472972732*^9, 3.867329704811387*^9, 
   3.867330044539565*^9, 3.867382579023087*^9, 3.867382611694048*^9, 
   3.867383555462047*^9, 3.867386535028846*^9, 3.8674083251931877`*^9, 
   3.867419653691588*^9, 3.867469398241379*^9, 3.8675771496278753`*^9, 
   3.867580423407976*^9, 3.867897017548945*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"c0633d3e-4b2e-4346-8d80-89018fd3b1d1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Subsection",
 CellChangeTimes->{{3.8650593677216454`*^9, 3.865059378776081*^9}, {
  3.866602769035088*^9, 3.866602771891135*^9}, {3.866865474676983*^9, 
  3.866865476493029*^9}},ExpressionUUID->"76d42d52-0573-4522-b5b7-\
498e3dde144e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedSoftNet"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hnf", "[", 
         RowBox[{"Harden", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.86680194442417*^9, 3.866801959585536*^9}, 
   3.8668020564125566`*^9, 3.8668021880135727`*^9, 3.86680224094079*^9, {
   3.866862414056994*^9, 3.866862435758893*^9}, 3.8668631732132587`*^9, 
   3.866863454099498*^9, {3.866863887767027*^9, 3.866863891596203*^9}, {
   3.866866085045*^9, 3.866866085408708*^9}, {3.866866613610317*^9, 
   3.8668666139621067`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"4ca549a6-f4a8-48b8-bd04-5ba2c91f7834"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 93.9858%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "5167"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "4643"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}], "\[Rule]", "4410"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "4392"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", "213"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", "199"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", "174"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "133"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "\[Rule]", "105"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "100"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", "75"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", "69"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "1"}], "}"}], "\[Rule]", "50"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", "42"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "21"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "10"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866866039305666*^9, 3.866866854019951*^9, 3.866867736201356*^9, {
   3.866874285844576*^9, 3.866874300418912*^9}, 3.866897703750345*^9, 
   3.866950731292025*^9, 3.867898602706312*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"4405708b-19ed-433a-9ebd-dda6bfa68b1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpaceSaving", "[", "trainedSoftNet", "]"}]], "Input",
 CellChangeTimes->{{3.8668642342489862`*^9, 3.8668642483212557`*^9}, {
  3.866864301980486*^9, 3.866864302505608*^9}, {3.866864406655108*^9, 
  3.86686453684363*^9}, {3.866864775311109*^9, 3.866864778850369*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"d5dbb3ee-e45f-4e95-8066-408558b38cda"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Soft net size = 936. kilobytes\"\>"},
    {"\<\"Hard net size = 29.25 kilobytes\"\>"},
    {"\<\"Saving factor = 32.\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866864249947411*^9, 3.8668643028534403`*^9, 3.866864414235868*^9, 
   3.866864445660204*^9, {3.866864494244638*^9, 3.866864537301672*^9}, 
   3.866864595971245*^9, 3.866864779447701*^9, 3.86686686475023*^9, 
   3.8668677412127867`*^9, 3.866897713231059*^9, 3.867898621531806*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"c200ed87-3297-43e0-990e-e3c167eb2dbf"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Approximate neural logic", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.865071137544158*^9, 3.865071139735918*^9}, {3.866866918133319*^9, 
  3.8668669229746017`*^9}},ExpressionUUID->"3dfd48ae-245d-41a3-9ee6-\
9f48a3126503"],

Cell[CellGroupData[{

Cell[, "Subsection",ExpressionUUID->"dbaf4b13-bbf1-46b2-a867-cbe6ab3057db"],

Cell[, "Input",ExpressionUUID->"282b1129-9bb6-4375-827d-fe1a21de5e52"],

Cell[, "Input",ExpressionUUID->"4dd2a1a1-93c1-4c86-8a53-3799d9a2326a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Subsection",ExpressionUUID->"79776b36-72e3-45be-ba51-f07dffccf849"],

Cell[, "Input",ExpressionUUID->"85ad096e-ed5c-44c2-8c3a-979fde4a03c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Subsection",ExpressionUUID->"be01f422-1c1f-4ec9-a959-bf38e8105582"],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"1fe03ab7-3007-4e7c-b36b-88dfd49533c2"],

Cell[, "Output",ExpressionUUID->"fb9922be-4d44-44fa-a740-90fd86c255a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"cc7fdd2c-831f-4bbf-9c2a-d697ed7670ea"],

Cell[, "Output",ExpressionUUID->"deeafa17-d205-41b4-9334-177d0b32d635"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.865418895304618*^9, 
  3.865418895944718*^9}},ExpressionUUID->"c33fd357-ab86-4dac-a5dc-\
fb8a483872d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"\"\<neural-logic.m\>\"", ",", 
    RowBox[{"Path", "->", 
     RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}], ";"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"de7ef9f2-bf67-4869-9b14-c25b89d18d50"],

Cell[CellGroupData[{

Cell["Counting", "Section",
 CellChangeTimes->{{3.867832936078092*^9, 
  3.867832936917717*^9}},ExpressionUUID->"49d7fd52-7d0e-4eba-9a43-\
3a6532a9b58f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Experimental", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"net", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"32", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Layer1\>\"", "->", 
          RowBox[{
           RowBox[{"HardNeuralNAND", "[", 
            RowBox[{"inputSize", ",", "600"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Layer2\>\"", "->", 
          RowBox[{
           RowBox[{"HardNeuralNAND", "[", 
            RowBox[{"600", ",", "classificationLayerSize"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<ToMatrix\>\"", "->", 
          RowBox[{"ReshapeLayer", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "classificationLayerSize"}], "}"}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Require\>\"", "->", 
          RowBox[{
           RowBox[{"Require", "[", 
            RowBox[{
             RowBox[{"HardNeuralLTEK", "[", 
              RowBox[{"1", ",", "classificationLayerSize", ",", "32"}], "]"}],
              "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<ToVector\>\"", "->", 
          RowBox[{"ReshapeLayer", "[", 
           RowBox[{"{", "classificationLayerSize", "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ClassPredictions\>\"", "->", 
          RowBox[{
           RowBox[{"HardNeuralPortLayer", "[", 
            RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
        "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Layer1\>\"", "->", "\"\<Layer2\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Layer2\>\"", "->", "\"\<ToMatrix\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ToMatrix\>\"", "->", "\"\<Require\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Require\>\"", "->", "\"\<ToVector\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ToVector\>\"", "->", "\"\<ClassPredictions\>\""}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.867668231870791*^9, 3.867668235477289*^9}, {
   3.867668376339018*^9, 3.867668395784988*^9}, {3.867669799325087*^9, 
   3.867669809905347*^9}, {3.8676698456204653`*^9, 3.867669869738494*^9}, {
   3.8676699106411133`*^9, 3.8676699115453577`*^9}, {3.867669948359013*^9, 
   3.867670038801297*^9}, {3.86767030213902*^9, 3.867670318841384*^9}, {
   3.867670454382246*^9, 3.867670454482563*^9}, {3.86773420314202*^9, 
   3.867734379574403*^9}, {3.8677344216150846`*^9, 3.867734490143653*^9}, {
   3.867734621874201*^9, 3.867734623184408*^9}, {3.867734693122128*^9, 
   3.867734695505403*^9}, {3.867734747689705*^9, 3.867734756655624*^9}, {
   3.867734790199747*^9, 3.867734987499298*^9}, {3.8677350208744164`*^9, 
   3.867735125633463*^9}, {3.8677351638336763`*^9, 3.867735204009555*^9}, {
   3.867735317610345*^9, 3.8677353254980707`*^9}, {3.867735393290935*^9, 
   3.867735395305931*^9}, {3.8677354322513533`*^9, 3.867735440153603*^9}, {
   3.8677354886910477`*^9, 3.8677354936178827`*^9}, {3.867735591979089*^9, 
   3.867735601154071*^9}, {3.8677356862821093`*^9, 3.8677356918016987`*^9}, {
   3.8677357634512177`*^9, 3.867735791576468*^9}, {3.867735822699938*^9, 
   3.8677358465307007`*^9}, {3.867736920421318*^9, 3.8677369326207657`*^9}, {
   3.867736973742214*^9, 3.867737045436118*^9}, {3.8677371125088177`*^9, 
   3.867737122764319*^9}, {3.867737176710585*^9, 3.867737247838262*^9}, {
   3.8677378255448503`*^9, 3.867737827355835*^9}, {3.867737907966132*^9, 
   3.867737927804604*^9}, {3.867738001497107*^9, 3.867738007068056*^9}, {
   3.867738831068059*^9, 3.8677388441007833`*^9}, {3.867751900566104*^9, 
   3.867751950846384*^9}, {3.867752035360849*^9, 3.8677520509677753`*^9}, 
   3.8677521643541937`*^9, {3.867752700279015*^9, 3.86775272021528*^9}, {
   3.867752776206182*^9, 3.867752776508008*^9}, {3.867753149109016*^9, 
   3.867753149371195*^9}, {3.8677539432696457`*^9, 3.86775395329886*^9}, {
   3.867754162947703*^9, 3.867754173784737*^9}, {3.867812347833035*^9, 
   3.8678123928175793`*^9}, {3.8678124502232027`*^9, 3.867812460277479*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"373847f0-5ceb-4aea-9bd8-2b9bd00ed101"],

Cell[, "Output",ExpressionUUID->"42968dd2-1af4-4dd2-9252-b179f2e1c8a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"349b19a0-3962-4873-82b8-94890a3e44e2"],

<<<<<<< HEAD
Cell[, "Output",ExpressionUUID->"998229bd-8f89-4994-a579-e9da43febb4f"]
=======
Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
   "0.03916572034358978`", ",", "0.08317269384860992`", ",", 
    "0.16798162460327148`", ",", "0.31002551317214966`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8676683332541533`*^9, 3.867668340127063*^9}},
 CellLabel->
  "Out[250]=",ExpressionUUID->"0a50f7c3-cd2b-436e-9cd9-c6ad5052537b"]
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
}, Open  ]],

Cell[CellGroupData[{

<<<<<<< HEAD
Cell[, "Input",ExpressionUUID->"a31fd4b4-2c15-4002-83ec-350a260510da"],

Cell[, "Output",ExpressionUUID->"2da98d1e-82ec-4eda-a4f4-0841343c270f"]
=======
Cell[BoxData[
 RowBox[{"eq", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"p", "[", "t", "]"}], ",", "t"}], "]"}], "==", 
   RowBox[{
    RowBox[{"-", "n"}], " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"s", "[", "t", "]"}], ",", "t"}], "]"}], " ", 
    RowBox[{
     RowBox[{"p", "[", "t", "]"}], "/", 
     RowBox[{"s", "[", "t", "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.867840626371951*^9, 3.867840650976883*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7c0af5ad-4ff0-4f59-8a14-29f4d41784fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["p", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"n", " ", 
     RowBox[{"p", "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox["s", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], 
    RowBox[{"s", "[", "t", "]"}]]}]}]], "Output",
 CellChangeTimes->{3.867840651694372*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"7d3c80e9-4fc4-4da7-a237-a91bfe79b7f6"]
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
}, Open  ]],

Cell[CellGroupData[{

<<<<<<< HEAD
Cell[, "Input",ExpressionUUID->"1ba97a8f-3dd1-4af0-b442-37c950fb8e3e"],

Cell[, "Output",ExpressionUUID->"2ef9b80a-095c-4b12-b256-379d73c2a7b0"]
=======
Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{"eq", ",", 
   RowBox[{"p", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.8678406532901382`*^9, 3.867840697160323*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"266c7e41-b866-4629-a4f0-6a94b00f46f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{"1"},
      "C"], " ", 
     SuperscriptBox[
      RowBox[{"s", "[", "t", "]"}], 
      RowBox[{"-", "n"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.867840660958447*^9, 3.867840697566943*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"94d5b34c-b81c-4259-af69-91b11be022d4"]
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
}, Open  ]],

Cell[CellGroupData[{

<<<<<<< HEAD
Cell[, "Input",ExpressionUUID->"b5c02c2d-4f0c-4f1a-927d-e7f10c55aff2"],

Cell[, "Output",ExpressionUUID->"85d05a9e-ef93-4b7e-8c9e-b3cc0eff4f2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"243703bb-68c3-47c4-b125-e13f983de6e1"],

Cell[, "Output",ExpressionUUID->"a729d644-3ccf-4bd3-9ffd-0b01d55bd98a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"23fa8663-96e3-4910-820f-c54566b58e3c"],

Cell[, "Output",ExpressionUUID->"171d85a3-b965-410b-9f57-4a9daa2a7be5"]
=======
Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"k", " ", 
    FractionBox["1", 
     SuperscriptBox["s", "n"]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"k", "/", "p"}], ")"}], 
    RowBox[{"1", "/", "n"}]]], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.867841061497573*^9, 3.8678410877072773`*^9}, {
  3.867841177104856*^9, 3.867841206736559*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8ed1595f-4f28-41b8-a20b-82c609487173"],

Cell[BoxData[
 RowBox[{"k", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["k", "p"], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "/", "n"}]], " ", 
  SuperscriptBox["s", 
   RowBox[{"-", "n"}]]}]], "Output",
 CellChangeTimes->{{3.867841083441348*^9, 3.867841088188916*^9}, 
   3.867841207191392*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"1e76c1fe-3097-4754-8290-9bd86ded81e5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"k", 
    FractionBox["1", 
     SuperscriptBox["s", "n"]]}], "s"], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.867841217024934*^9, 3.867841232906905*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"de63064d-96bc-4f1a-914a-355885bdcb63"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"k", " ", 
    SuperscriptBox["s", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "n"}]]}], "/.", 
   RowBox[{"{", 
    RowBox[{"s", "->", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["k", "p"], ")"}], 
      RowBox[{"1", "/", "n"}]]}], "}"}]}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.86784127936714*^9, 3.86784130029909*^9}, {
  3.867841332126699*^9, 3.867841337047019*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"50f89ec4-ca18-470c-9d2a-54dbcc030290"],

Cell[BoxData[
 RowBox[{"k", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["k", "p"], ")"}], 
     FractionBox["1", "n"]], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", "n"}]]}]], "Output",
 CellChangeTimes->{{3.8678412960936117`*^9, 3.867841300894095*^9}, {
  3.867841333256411*^9, 3.867841337383602*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"ec7c57fa-380c-4159-a4fa-e70a89ea6229"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "n"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "n"}], ")"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.867841347249229*^9, 3.867841359138949*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"4bdbc283-62ea-45d9-ac92-c6f799c42509"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "+", "n"}], "n"]}]], "Output",
 CellChangeTimes->{{3.867841355298522*^9, 3.867841359667985*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"5bea9856-a018-42d0-9ce2-bbcab5792991"]
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
}, Open  ]],

Cell[CellGroupData[{

<<<<<<< HEAD
Cell[, "Input",ExpressionUUID->"85c4fda1-5bc1-4a9c-b6cc-b0c7f5dbd472"],

Cell[, "Output",ExpressionUUID->"b8ea779b-3472-452e-bb2a-86b3a54c7755"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"8dde6df8-0f8e-4275-b577-c9c4d309cf0e"],

Cell[, "Output",ExpressionUUID->"7d408261-78cf-4bd3-b27d-93efa0b2527e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"e6780500-565d-45bc-a262-69cb0d64a129"],

Cell[, "Output",ExpressionUUID->"c4ab91a7-7c77-4a57-9362-ad407575bfc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"2cf81236-6d84-46cf-bdc6-a58e7378f47f"],

Cell[, "Output",ExpressionUUID->"d46f95ba-8483-4983-b757-641abf102c57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"ca8cc221-b740-4791-9bae-e17f1fc2fe5d"],

Cell[, "Output",ExpressionUUID->"0a50f7c3-cd2b-436e-9cd9-c6ad5052537b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"7c0af5ad-4ff0-4f59-8a14-29f4d41784fd"],

Cell[, "Output",ExpressionUUID->"7d3c80e9-4fc4-4da7-a237-a91bfe79b7f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"266c7e41-b866-4629-a4f0-6a94b00f46f0"],

Cell[, "Output",ExpressionUUID->"94d5b34c-b81c-4259-af69-91b11be022d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"8ed1595f-4f28-41b8-a20b-82c609487173"],

Cell[, "Output",ExpressionUUID->"1e76c1fe-3097-4754-8290-9bd86ded81e5"]
}, Open  ]],

Cell[, "Input",ExpressionUUID->"de63064d-96bc-4f1a-914a-355885bdcb63"],

Cell[,ExpressionUUID->"50f89ec4-ca18-470c-9d2a-54dbcc030290"],

Cell[, "Output",ExpressionUUID->"ec7c57fa-380c-4159-a4fa-e70a89ea6229"],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"4bdbc283-62ea-45d9-ac92-c6f799c42509"],

Cell[, "Output",ExpressionUUID->"5bea9856-a018-42d0-9ce2-bbcab5792991"]
}, Open  ]],

Cell[CellGroupData[{

Cell[, "Input",ExpressionUUID->"651b652c-d563-4ffc-a673-7fbc13ba47a5"],

Cell[, "Output",ExpressionUUID->"829bd558-a1f9-4cc6-a69d-8bd142365ff6"]
=======
Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["k", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "n"}]], 
   SuperscriptBox["p", 
    RowBox[{"1", "+", 
     FractionBox["1", "n"]}]]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.867841104193776*^9, 3.867841135075141*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"651b652c-d563-4ffc-a673-7fbc13ba47a5"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["k", 
   RowBox[{
    RowBox[{"-", "1"}], "/", "n"}]], " ", 
  SuperscriptBox["p", 
   RowBox[{"1", "+", 
    FractionBox["1", "n"]}]]}]], "Output",
 CellChangeTimes->{{3.867841130211376*^9, 3.8678411365085773`*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"829bd558-a1f9-4cc6-a69d-8bd142365ff6"]
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 782.25},
WindowMargins->{{1440, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6b749efe-4de6-4ef5-81a5-e56ac96807ba"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 155, 3, 98, "Title",ExpressionUUID->"e16c6739-4a62-4e56-b75b-c3030d8dbab8"],
Cell[738, 27, 583, 11, 29, "Input",ExpressionUUID->"31a3d5b7-a862-4434-bcdf-74b6c5931123"],
Cell[CellGroupData[{
Cell[1346, 42, 202, 3, 29, "Input",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],
Cell[1551, 47, 20330, 467, 203, "Output",ExpressionUUID->"ae7a56be-102d-44d4-8e90-76189914d075"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21918, 519, 207, 4, 69, "Chapter",ExpressionUUID->"c980f6be-656d-464c-97de-7bbd91e03ade"],
Cell[22128, 525, 2717, 72, 217, "Input",ExpressionUUID->"a640c9f1-9738-4c46-b19d-979750434b3f"],
Cell[CellGroupData[{
Cell[24870, 601, 537, 13, 29, "Input",ExpressionUUID->"f98077b4-8d7e-401d-8481-6508057768cf"],
Cell[25410, 616, 193, 3, 33, "Output",ExpressionUUID->"e4ae1fb4-c0bc-4bf3-89db-46ae92637e0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25640, 624, 493, 12, 29, "Input",ExpressionUUID->"d9b20918-29d1-46bd-b70f-acfd27b2c0a3"],
Cell[26136, 638, 221, 4, 33, "Output",ExpressionUUID->"37311f9f-d207-4160-970d-ddd98433cd87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26394, 647, 489, 13, 29, "Input",ExpressionUUID->"cf906399-5828-4b87-80e7-ddc37d71aa2a"],
<<<<<<< HEAD
Cell[26886, 662, 71, 0, 33, "Output",ExpressionUUID->"a059d7eb-fb26-44d7-914e-ed15b2f67445"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[27006, 668, 156, 3, 58, "Chapter",ExpressionUUID->"e172cf77-104a-417b-9e8b-0895cfdd6efc"],
Cell[CellGroupData[{
Cell[27187, 675, 72, 0, 67, "Section",ExpressionUUID->"f58270f5-8f0f-4a1c-9f4c-0201cecf95d8"],
Cell[CellGroupData[{
Cell[27284, 679, 70, 0, 162, "Input",ExpressionUUID->"660052dc-0b70-46b2-924e-427e0bd9ad48"],
Cell[27357, 681, 69, 0, 26, "Echo",ExpressionUUID->"73d1db25-b91a-40d2-814b-47492f662e24"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[27475, 687, 72, 0, 53, "Section",ExpressionUUID->"616a2ddc-1005-46d4-8c14-343a4bd3b6ff"],
Cell[CellGroupData[{
Cell[27572, 691, 75, 0, 54, "Subsection",ExpressionUUID->"efe91894-6841-49a9-ab9d-fd0123575c7c"],
Cell[27650, 693, 70, 0, 29, "Input",ExpressionUUID->"169ec1a0-b1c3-4506-b125-378dd25952df"],
Cell[27723, 695, 70, 0, 133, "Input",ExpressionUUID->"b30edffc-67af-4934-8f33-faee89f4353a"],
Cell[27796, 697, 70, 0, 133, "Input",ExpressionUUID->"319732b5-cfeb-47c1-acda-faab4d2e172a"],
Cell[CellGroupData[{
Cell[27891, 701, 70, 0, 32, "Input",ExpressionUUID->"2799844a-7684-4eb7-88cb-2eb8a3232481"],
Cell[27964, 703, 71, 0, 68, "Output",ExpressionUUID->"e35a0ca4-67c3-4424-b16f-e689798bb2fd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28084, 709, 75, 0, 54, "Subsection",ExpressionUUID->"ad8f60ad-b03c-4795-b29f-2120bea29aab"],
Cell[28162, 711, 70, 0, 133, "Input",ExpressionUUID->"5ce8ebfa-b558-499e-a012-4d55894a0d04"],
Cell[CellGroupData[{
Cell[28257, 715, 70, 0, 29, "Input",ExpressionUUID->"b170e72e-0c32-4303-b9fb-00b577c2bacc"],
Cell[28330, 717, 71, 0, 68, "Output",ExpressionUUID->"00573e1c-b4f7-4510-aad5-e9e45ed36756"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28450, 723, 75, 0, 54, "Subsection",ExpressionUUID->"b675450a-34c8-422e-899e-e8ac46fc9f8e"],
Cell[CellGroupData[{
Cell[28550, 727, 70, 0, 119, "Input",ExpressionUUID->"17d6edff-ccbc-4c33-ae6f-0bcb97945f31"],
Cell[28623, 729, 71, 0, 33, "Output",ExpressionUUID->"eaa96b1e-56f2-4d3d-953f-3a263da851c9"],
Cell[28697, 731, 71, 0, 54, "Output",ExpressionUUID->"503f04a3-57f6-4d3c-a403-85db7d5c0ff2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28817, 737, 75, 0, 54, "Subsection",ExpressionUUID->"fe3385d8-1e0f-4395-9df9-244ad13d435b"],
Cell[CellGroupData[{
Cell[28917, 741, 70, 0, 78, "Input",ExpressionUUID->"c923db83-6a37-4dff-b538-3d1c876e6342"],
Cell[28990, 743, 71, 0, 77, "Output",ExpressionUUID->"65c0e448-2fc9-4e3c-88af-008c93ced575"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29098, 748, 70, 0, 29, "Input",ExpressionUUID->"0d96031a-fb3e-4195-9bbc-f328b3fc8e6f"],
Cell[29171, 750, 71, 0, 80, "Output",ExpressionUUID->"8b4d64a2-335d-456d-a7f6-3942dfa50eca"]
=======
Cell[26886, 662, 175, 4, 33, "Output",ExpressionUUID->"a059d7eb-fb26-44d7-914e-ed15b2f67445"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[27110, 672, 156, 3, 58, "Chapter",ExpressionUUID->"e172cf77-104a-417b-9e8b-0895cfdd6efc"],
Cell[CellGroupData[{
Cell[27291, 679, 167, 3, 67, "Section",ExpressionUUID->"f58270f5-8f0f-4a1c-9f4c-0201cecf95d8"],
Cell[CellGroupData[{
Cell[27483, 686, 13605, 298, 162, "Input",ExpressionUUID->"660052dc-0b70-46b2-924e-427e0bd9ad48"],
Cell[41091, 986, 135, 3, 26, "Echo",ExpressionUUID->"73d1db25-b91a-40d2-814b-47492f662e24"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[41275, 995, 213, 4, 53, "Section",ExpressionUUID->"616a2ddc-1005-46d4-8c14-343a4bd3b6ff"],
Cell[CellGroupData[{
Cell[41513, 1003, 254, 4, 54, "Subsection",ExpressionUUID->"efe91894-6841-49a9-ab9d-fd0123575c7c"],
Cell[41770, 1009, 331, 8, 29, "Input",ExpressionUUID->"169ec1a0-b1c3-4506-b125-378dd25952df"],
Cell[42104, 1019, 4820, 75, 133, "Input",ExpressionUUID->"b30edffc-67af-4934-8f33-faee89f4353a"],
Cell[46927, 1096, 1316, 28, 133, "Input",ExpressionUUID->"319732b5-cfeb-47c1-acda-faab4d2e172a"],
Cell[CellGroupData[{
Cell[48268, 1128, 13455, 188, 32, "Input",ExpressionUUID->"2799844a-7684-4eb7-88cb-2eb8a3232481"],
Cell[61726, 1318, 157108, 2990, 68, "Output",ExpressionUUID->"e35a0ca4-67c3-4424-b16f-e689798bb2fd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[218883, 4314, 302, 5, 54, "Subsection",ExpressionUUID->"ad8f60ad-b03c-4795-b29f-2120bea29aab"],
Cell[219188, 4321, 16355, 234, 133, "Input",ExpressionUUID->"5ce8ebfa-b558-499e-a012-4d55894a0d04"],
Cell[CellGroupData[{
Cell[235568, 4559, 347, 6, 29, "Input",ExpressionUUID->"b170e72e-0c32-4303-b9fb-00b577c2bacc"],
Cell[235918, 4567, 36017, 702, 68, "Output",ExpressionUUID->"00573e1c-b4f7-4510-aad5-e9e45ed36756"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[271984, 5275, 360, 6, 54, "Subsection",ExpressionUUID->"b675450a-34c8-422e-899e-e8ac46fc9f8e"],
Cell[CellGroupData[{
Cell[272369, 5285, 9924, 234, 119, "Input",ExpressionUUID->"17d6edff-ccbc-4c33-ae6f-0bcb97945f31"],
Cell[282296, 5521, 1075, 18, 33, "Output",ExpressionUUID->"eaa96b1e-56f2-4d3d-953f-3a263da851c9"],
Cell[283374, 5541, 1607, 36, 54, "Output",ExpressionUUID->"503f04a3-57f6-4d3c-a403-85db7d5c0ff2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[285030, 5583, 363, 6, 54, "Subsection",ExpressionUUID->"fe3385d8-1e0f-4395-9df9-244ad13d435b"],
Cell[CellGroupData[{
Cell[285418, 5593, 9019, 215, 78, "Input",ExpressionUUID->"c923db83-6a37-4dff-b538-3d1c876e6342"],
Cell[294440, 5810, 945, 26, 77, "Output",ExpressionUUID->"65c0e448-2fc9-4e3c-88af-008c93ced575"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295422, 5841, 369, 5, 29, "Input",ExpressionUUID->"0d96031a-fb3e-4195-9bbc-f328b3fc8e6f"],
Cell[295794, 5848, 659, 14, 80, "Output",ExpressionUUID->"8b4d64a2-335d-456d-a7f6-3942dfa50eca"]
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
<<<<<<< HEAD
Cell[29315, 758, 207, 4, 58, "Chapter",ExpressionUUID->"ab35440a-cabc-4736-a5ac-e07454ebd2a0"],
Cell[CellGroupData[{
Cell[29547, 766, 167, 3, 67, "Section",ExpressionUUID->"7a765571-11e0-47e7-bd2b-e5df28d2018f"],
Cell[29717, 771, 2637, 64, 113, "Input",ExpressionUUID->"32fda3b9-b853-499b-9d93-f6cc5b2d03d6"],
Cell[CellGroupData[{
Cell[32379, 839, 3284, 65, 113, "Input",ExpressionUUID->"e694fd5c-31a2-4c80-9a3a-3cbb8af0f0d2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[35666, 906, 1244, 21, 29, "Input",ExpressionUUID->"ec0b1266-533d-40d4-a949-ccce78250c06",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[36913, 929, 9395, 197, 244, "Output",ExpressionUUID->"0cd33ffa-9a13-4832-9e9d-3fe54cf243d6",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[46323, 1129, 8658, 205, 37, "Input",ExpressionUUID->"5f23d7f5-27d3-4f48-9a93-1389f19dc351"]
}, Closed]],
Cell[CellGroupData[{
Cell[55018, 1339, 459, 7, 53, "Section",ExpressionUUID->"fc68a4bd-9bf9-485f-9eed-cf7b8ff25567"],
Cell[55480, 1348, 622, 16, 29, "Input",ExpressionUUID->"afc9d31b-db6d-45ca-8b6b-e25b97a5ac3c"],
Cell[CellGroupData[{
Cell[56127, 1368, 404, 6, 54, "Subsection",ExpressionUUID->"9502650c-75ff-4479-bca2-f7b8b0c4641d"],
Cell[56534, 1376, 1409, 31, 174, "Input",ExpressionUUID->"5fefb9b9-6e54-460e-b544-a43d033404b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57980, 1412, 450, 7, 54, "Subsection",ExpressionUUID->"d41cd2db-8088-4737-b918-a082c6448deb"],
Cell[58433, 1421, 16339, 231, 113, "Input",ExpressionUUID->"5e8aefb1-dfc7-4620-8212-9b7f8316e5ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74809, 1657, 453, 7, 54, "Subsection",ExpressionUUID->"7822fb59-1347-4e85-b721-29a9f368ef8e"],
Cell[CellGroupData[{
Cell[75287, 1668, 400, 7, 29, "Input",ExpressionUUID->"e96a481e-3ba1-4201-9c24-39f96d06cf2b"],
Cell[75690, 1677, 47242, 1073, 503, "Output",ExpressionUUID->"4a27835d-ece8-46cb-bb4e-df3922dc4fd0"]
=======
Cell[296526, 5870, 207, 4, 58, "Chapter",ExpressionUUID->"ab35440a-cabc-4736-a5ac-e07454ebd2a0"],
Cell[CellGroupData[{
Cell[296758, 5878, 167, 3, 67, "Section",ExpressionUUID->"7a765571-11e0-47e7-bd2b-e5df28d2018f"],
Cell[296928, 5883, 2637, 64, 113, "Input",ExpressionUUID->"32fda3b9-b853-499b-9d93-f6cc5b2d03d6"],
Cell[CellGroupData[{
Cell[299590, 5951, 3284, 65, 113, "Input",ExpressionUUID->"e694fd5c-31a2-4c80-9a3a-3cbb8af0f0d2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[302877, 6018, 1244, 21, 29, "Input",ExpressionUUID->"ec0b1266-533d-40d4-a949-ccce78250c06",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[304124, 6041, 9395, 197, 244, "Output",ExpressionUUID->"0cd33ffa-9a13-4832-9e9d-3fe54cf243d6",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[313534, 6241, 8658, 205, 37, "Input",ExpressionUUID->"5f23d7f5-27d3-4f48-9a93-1389f19dc351"]
}, Closed]],
Cell[CellGroupData[{
Cell[322229, 6451, 459, 7, 53, "Section",ExpressionUUID->"fc68a4bd-9bf9-485f-9eed-cf7b8ff25567"],
Cell[322691, 6460, 622, 16, 29, "Input",ExpressionUUID->"afc9d31b-db6d-45ca-8b6b-e25b97a5ac3c"],
Cell[CellGroupData[{
Cell[323338, 6480, 404, 6, 54, "Subsection",ExpressionUUID->"9502650c-75ff-4479-bca2-f7b8b0c4641d"],
Cell[323745, 6488, 1409, 31, 174, "Input",ExpressionUUID->"5fefb9b9-6e54-460e-b544-a43d033404b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325191, 6524, 450, 7, 54, "Subsection",ExpressionUUID->"d41cd2db-8088-4737-b918-a082c6448deb"],
Cell[325644, 6533, 16339, 231, 113, "Input",ExpressionUUID->"5e8aefb1-dfc7-4620-8212-9b7f8316e5ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342020, 6769, 453, 7, 54, "Subsection",ExpressionUUID->"7822fb59-1347-4e85-b721-29a9f368ef8e"],
Cell[CellGroupData[{
Cell[342498, 6780, 400, 7, 29, "Input",ExpressionUUID->"e96a481e-3ba1-4201-9c24-39f96d06cf2b"],
Cell[342901, 6789, 47242, 1073, 503, "Output",ExpressionUUID->"4a27835d-ece8-46cb-bb4e-df3922dc4fd0"]
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
<<<<<<< HEAD
Cell[122993, 2757, 408, 6, 53, "Section",ExpressionUUID->"5330bb32-e656-4b8b-bb36-16ab02f0840f"],
Cell[CellGroupData[{
Cell[123426, 2767, 404, 6, 54, "Subsection",ExpressionUUID->"9ccf4bd6-05a1-49f1-915f-95679eedaa4f"],
Cell[123833, 2775, 382, 9, 29, "Input",ExpressionUUID->"ce6f0f7f-95ec-4012-ad4e-67899225afe1"],
Cell[124218, 2786, 6419, 98, 133, "Input",ExpressionUUID->"feba2f53-f4f5-43e6-a86d-fb7cc5e96658"],
Cell[130640, 2886, 3786, 61, 133, "Input",ExpressionUUID->"923f7933-891f-49a3-bbf5-d8f8183fe2d7"],
Cell[134429, 2949, 2404, 44, 236, "Input",ExpressionUUID->"a805bd2a-cef0-4df4-b838-7efd7718ed29"],
Cell[136836, 2995, 17562, 245, 32, "Input",ExpressionUUID->"ff705697-08c0-41db-8a85-131ecdba22d6"],
Cell[CellGroupData[{
Cell[154423, 3244, 231, 3, 29, "Input",ExpressionUUID->"1b570bfa-2a4d-48ef-b659-d88693679ac4"],
Cell[154657, 3249, 154863, 2959, 68, "Output",ExpressionUUID->"4b1329bb-b6f2-40ff-86a0-d77fc7ee37f4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[309569, 6214, 501, 8, 54, "Subsection",ExpressionUUID->"22d0189b-d6a7-44ad-b35a-70f7e8d0dd81"],
Cell[310073, 6224, 17736, 250, 113, "Input",ExpressionUUID->"fbdac8c7-4549-4743-864d-e467d909f319"],
Cell[CellGroupData[{
Cell[327834, 6478, 496, 9, 29, "Input",ExpressionUUID->"c3a89cf2-7844-4806-bca2-4513232e25d6"],
Cell[328333, 6489, 42461, 786, 68, "Output",ExpressionUUID->"a4210781-b87e-4cd4-baf3-14f1670cfa24"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[370843, 7281, 409, 6, 54, "Subsection",ExpressionUUID->"e2a69d6c-fddf-4ce0-9a60-6b136e91fb12"],
Cell[371255, 7289, 582, 12, 29, "Input",ExpressionUUID->"61cf3e56-b150-406f-a005-b09cf3a4f4b6"],
Cell[CellGroupData[{
Cell[371862, 7305, 10323, 231, 78, "Input",ExpressionUUID->"a637f3cb-d7f7-4492-ad2f-108fbd4b3b99"],
Cell[382188, 7538, 4093, 95, 79, "Output",ExpressionUUID->"7325ebe8-a581-46ef-84f5-586442c1e3ac"]
}, Open  ]],
Cell[386296, 7636, 560, 15, 29, "Input",ExpressionUUID->"fd20a90c-0e3a-42a1-ac7f-bc712b1b2778"],
Cell[CellGroupData[{
Cell[386881, 7655, 403, 8, 29, "Input",ExpressionUUID->"0bd26ae7-e31b-4a68-b76a-1002446f1f03"],
Cell[387287, 7665, 16541, 464, 226, "Output",ExpressionUUID->"b7374209-1ec3-4cef-a5d5-6621c1cee249"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403865, 8134, 500, 9, 29, "Input",ExpressionUUID->"4836d32b-7df4-4c05-858e-1e553b9f2099"],
Cell[404368, 8145, 10136, 164, 231, "Output",ExpressionUUID->"c0633d3e-4b2e-4346-8d80-89018fd3b1d1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[414553, 8315, 262, 4, 54, "Subsection",ExpressionUUID->"76d42d52-0573-4522-b5b7-498e3dde144e"],
Cell[CellGroupData[{
Cell[414840, 8323, 9118, 217, 78, "Input",ExpressionUUID->"4ca549a6-f4a8-48b8-bd04-5ba2c91f7834"],
Cell[423961, 8542, 2302, 64, 79, "Output",ExpressionUUID->"4405708b-19ed-433a-9ebd-dda6bfa68b1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426300, 8611, 369, 5, 29, "Input",ExpressionUUID->"d5dbb3ee-e45f-4e95-8066-408558b38cda"],
Cell[426672, 8618, 730, 15, 80, "Output",ExpressionUUID->"c200ed87-3297-43e0-990e-e3c167eb2dbf"]
}, Open  ]]
=======
Cell[390204, 7869, 408, 6, 53, "Section",ExpressionUUID->"5330bb32-e656-4b8b-bb36-16ab02f0840f"],
Cell[CellGroupData[{
Cell[390637, 7879, 404, 6, 54, "Subsection",ExpressionUUID->"9ccf4bd6-05a1-49f1-915f-95679eedaa4f"],
Cell[391044, 7887, 382, 9, 29, "Input",ExpressionUUID->"ce6f0f7f-95ec-4012-ad4e-67899225afe1"],
Cell[391429, 7898, 6419, 98, 133, "Input",ExpressionUUID->"feba2f53-f4f5-43e6-a86d-fb7cc5e96658"],
Cell[397851, 7998, 3786, 61, 133, "Input",ExpressionUUID->"923f7933-891f-49a3-bbf5-d8f8183fe2d7"],
Cell[401640, 8061, 2404, 44, 236, "Input",ExpressionUUID->"a805bd2a-cef0-4df4-b838-7efd7718ed29"],
Cell[404047, 8107, 17562, 245, 32, "Input",ExpressionUUID->"ff705697-08c0-41db-8a85-131ecdba22d6"],
Cell[CellGroupData[{
Cell[421634, 8356, 231, 3, 29, "Input",ExpressionUUID->"1b570bfa-2a4d-48ef-b659-d88693679ac4"],
Cell[421868, 8361, 154863, 2959, 68, "Output",ExpressionUUID->"4b1329bb-b6f2-40ff-86a0-d77fc7ee37f4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[576780, 11326, 501, 8, 54, "Subsection",ExpressionUUID->"22d0189b-d6a7-44ad-b35a-70f7e8d0dd81"],
Cell[577284, 11336, 17736, 250, 113, "Input",ExpressionUUID->"fbdac8c7-4549-4743-864d-e467d909f319"],
Cell[CellGroupData[{
Cell[595045, 11590, 496, 9, 29, "Input",ExpressionUUID->"c3a89cf2-7844-4806-bca2-4513232e25d6"],
Cell[595544, 11601, 42461, 786, 68, "Output",ExpressionUUID->"a4210781-b87e-4cd4-baf3-14f1670cfa24"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[638054, 12393, 409, 6, 54, "Subsection",ExpressionUUID->"e2a69d6c-fddf-4ce0-9a60-6b136e91fb12"],
Cell[638466, 12401, 582, 12, 29, "Input",ExpressionUUID->"61cf3e56-b150-406f-a005-b09cf3a4f4b6"],
Cell[CellGroupData[{
Cell[639073, 12417, 10323, 231, 78, "Input",ExpressionUUID->"a637f3cb-d7f7-4492-ad2f-108fbd4b3b99"],
Cell[649399, 12650, 4093, 95, 79, "Output",ExpressionUUID->"7325ebe8-a581-46ef-84f5-586442c1e3ac"]
}, Open  ]],
Cell[653507, 12748, 560, 15, 85, "Input",ExpressionUUID->"fd20a90c-0e3a-42a1-ac7f-bc712b1b2778"],
Cell[CellGroupData[{
Cell[654092, 12767, 407, 9, 29, "Input",ExpressionUUID->"0bd26ae7-e31b-4a68-b76a-1002446f1f03"],
Cell[654502, 12778, 2913, 63, 226, "Output",ExpressionUUID->"1a24ac2b-d34b-497b-8ebc-0ded7865b3b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[657452, 12846, 504, 10, 29, "Input",ExpressionUUID->"4836d32b-7df4-4c05-858e-1e553b9f2099"],
Cell[657959, 12858, 17178, 275, 231, "Output",ExpressionUUID->"99dfdf51-88dd-4fd3-803f-80117029f66d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[675186, 13139, 262, 4, 54, "Subsection",ExpressionUUID->"76d42d52-0573-4522-b5b7-498e3dde144e"],
Cell[CellGroupData[{
Cell[675473, 13147, 9122, 218, 78, "Input",ExpressionUUID->"4ca549a6-f4a8-48b8-bd04-5ba2c91f7834"],
Cell[684598, 13367, 2286, 65, 79, "Output",ExpressionUUID->"0b004cf4-5f55-45d8-b2ff-cf273e58a75f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686921, 13437, 373, 6, 29, "Input",ExpressionUUID->"d5dbb3ee-e45f-4e95-8066-408558b38cda"],
Cell[687297, 13445, 712, 16, 80, "Output",ExpressionUUID->"3975e194-8849-4807-a513-f77f2f030651"]
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
<<<<<<< HEAD
Cell[427475, 8641, 268, 4, 69, "Chapter",ExpressionUUID->"3dfd48ae-245d-41a3-9ee6-9f48a3126503"],
Cell[CellGroupData[{
Cell[427768, 8649, 75, 0, 54, "Subsection",ExpressionUUID->"dbaf4b13-bbf1-46b2-a867-cbe6ab3057db"],
Cell[427846, 8651, 70, 0, 113, "Input",ExpressionUUID->"282b1129-9bb6-4375-827d-fe1a21de5e52"],
Cell[427919, 8653, 70, 0, 29, "Input",ExpressionUUID->"4dd2a1a1-93c1-4c86-8a53-3799d9a2326a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428026, 8658, 75, 0, 54, "Subsection",ExpressionUUID->"79776b36-72e3-45be-ba51-f07dffccf849"],
Cell[428104, 8660, 70, 0, 154, "Input",ExpressionUUID->"85ad096e-ed5c-44c2-8c3a-979fde4a03c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428211, 8665, 75, 0, 54, "Subsection",ExpressionUUID->"be01f422-1c1f-4ec9-a959-bf38e8105582"],
Cell[CellGroupData[{
Cell[428311, 8669, 70, 0, 29, "Input",ExpressionUUID->"1fe03ab7-3007-4e7c-b36b-88dfd49533c2"],
Cell[428384, 8671, 71, 0, 33, "Output",ExpressionUUID->"fb9922be-4d44-44fa-a740-90fd86c255a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428492, 8676, 70, 0, 78, "Input",ExpressionUUID->"cc7fdd2c-831f-4bbf-9c2a-d697ed7670ea"],
Cell[428565, 8678, 71, 0, 122, "Output",ExpressionUUID->"deeafa17-d205-41b4-9334-177d0b32d635"]
=======
Cell[688082, 13469, 268, 4, 58, "Chapter",ExpressionUUID->"3dfd48ae-245d-41a3-9ee6-9f48a3126503"],
Cell[CellGroupData[{
Cell[688375, 13477, 358, 6, 54, "Subsection",ExpressionUUID->"dbaf4b13-bbf1-46b2-a867-cbe6ab3057db"],
Cell[688736, 13485, 5236, 78, 113, "Input",ExpressionUUID->"282b1129-9bb6-4375-827d-fe1a21de5e52"],
Cell[693975, 13565, 690, 12, 29, "Input",ExpressionUUID->"4dd2a1a1-93c1-4c86-8a53-3799d9a2326a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[694702, 13582, 399, 6, 54, "Subsection",ExpressionUUID->"79776b36-72e3-45be-ba51-f07dffccf849"],
Cell[695104, 13590, 14210, 208, 154, "Input",ExpressionUUID->"85ad096e-ed5c-44c2-8c3a-979fde4a03c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[709351, 13803, 352, 6, 54, "Subsection",ExpressionUUID->"be01f422-1c1f-4ec9-a959-bf38e8105582"],
Cell[CellGroupData[{
Cell[709728, 13813, 726, 10, 29, "Input",ExpressionUUID->"1fe03ab7-3007-4e7c-b36b-88dfd49533c2"],
Cell[710457, 13825, 5653, 81, 33, "Output",ExpressionUUID->"fb9922be-4d44-44fa-a740-90fd86c255a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[716147, 13911, 9433, 220, 78, "Input",ExpressionUUID->"cc7fdd2c-831f-4bbf-9c2a-d697ed7670ea"],
Cell[725583, 14133, 4310, 104, 122, "Output",ExpressionUUID->"deeafa17-d205-41b4-9334-177d0b32d635"]
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
<<<<<<< HEAD
Cell[428697, 8685, 201, 4, 58, "Chapter",ExpressionUUID->"c33fd357-ab86-4dac-a5dc-fb8a483872d5"],
Cell[428901, 8691, 269, 6, 29, "Input",ExpressionUUID->"de7ef9f2-bf67-4869-9b14-c25b89d18d50"],
Cell[CellGroupData[{
Cell[429195, 8701, 153, 3, 67, "Section",ExpressionUUID->"49d7fd52-7d0e-4eba-9a43-3a6532a9b58f"],
Cell[CellGroupData[{
Cell[429373, 8708, 4894, 89, 411, "Input",ExpressionUUID->"373847f0-5ceb-4aea-9bd8-2b9bd00ed101"],
Cell[434270, 8799, 71, 0, 68, "Output",ExpressionUUID->"42968dd2-1af4-4dd2-9252-b179f2e1c8a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434378, 8804, 70, 0, 29, "Input",ExpressionUUID->"349b19a0-3962-4873-82b8-94890a3e44e2"],
Cell[434451, 8806, 71, 0, 68, "Output",ExpressionUUID->"998229bd-8f89-4994-a579-e9da43febb4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434559, 8811, 70, 0, 29, "Input",ExpressionUUID->"a31fd4b4-2c15-4002-83ec-350a260510da"],
Cell[434632, 8813, 71, 0, 33, "Output",ExpressionUUID->"2da98d1e-82ec-4eda-a4f4-0841343c270f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434740, 8818, 70, 0, 29, "Input",ExpressionUUID->"1ba97a8f-3dd1-4af0-b442-37c950fb8e3e"],
Cell[434813, 8820, 71, 0, 68, "Output",ExpressionUUID->"2ef9b80a-095c-4b12-b256-379d73c2a7b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434921, 8825, 70, 0, 29, "Input",ExpressionUUID->"b5c02c2d-4f0c-4f1a-927d-e7f10c55aff2"],
Cell[434994, 8827, 71, 0, 33, "Output",ExpressionUUID->"85d05a9e-ef93-4b7e-8c9e-b3cc0eff4f2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435102, 8832, 70, 0, 29, "Input",ExpressionUUID->"243703bb-68c3-47c4-b125-e13f983de6e1"],
Cell[435175, 8834, 71, 0, 33, "Output",ExpressionUUID->"a729d644-3ccf-4bd3-9ffd-0b01d55bd98a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435283, 8839, 70, 0, 29, "Input",ExpressionUUID->"23fa8663-96e3-4910-820f-c54566b58e3c"],
Cell[435356, 8841, 71, 0, 68, "Output",ExpressionUUID->"171d85a3-b965-410b-9f57-4a9daa2a7be5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435464, 8846, 70, 0, 29, "Input",ExpressionUUID->"85c4fda1-5bc1-4a9c-b6cc-b0c7f5dbd472"],
Cell[435537, 8848, 71, 0, 68, "Output",ExpressionUUID->"b8ea779b-3472-452e-bb2a-86b3a54c7755"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435645, 8853, 70, 0, 71, "Input",ExpressionUUID->"8dde6df8-0f8e-4275-b577-c9c4d309cf0e"],
Cell[435718, 8855, 71, 0, 84, "Output",ExpressionUUID->"7d408261-78cf-4bd3-b27d-93efa0b2527e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435826, 8860, 70, 0, 29, "Input",ExpressionUUID->"e6780500-565d-45bc-a262-69cb0d64a129"],
Cell[435899, 8862, 71, 0, 68, "Output",ExpressionUUID->"c4ab91a7-7c77-4a57-9362-ad407575bfc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436007, 8867, 70, 0, 52, "Input",ExpressionUUID->"2cf81236-6d84-46cf-bdc6-a58e7378f47f"],
Cell[436080, 8869, 71, 0, 33, "Output",ExpressionUUID->"d46f95ba-8483-4983-b757-641abf102c57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436188, 8874, 70, 0, 29, "Input",ExpressionUUID->"ca8cc221-b740-4791-9bae-e17f1fc2fe5d"],
Cell[436261, 8876, 71, 0, 33, "Output",ExpressionUUID->"0a50f7c3-cd2b-436e-9cd9-c6ad5052537b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436369, 8881, 70, 0, 32, "Input",ExpressionUUID->"7c0af5ad-4ff0-4f59-8a14-29f4d41784fd"],
Cell[436442, 8883, 71, 0, 55, "Output",ExpressionUUID->"7d3c80e9-4fc4-4da7-a237-a91bfe79b7f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436550, 8888, 70, 0, 29, "Input",ExpressionUUID->"266c7e41-b866-4629-a4f0-6a94b00f46f0"],
Cell[436623, 8890, 71, 0, 37, "Output",ExpressionUUID->"94d5b34c-b81c-4259-af69-91b11be022d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436731, 8895, 70, 0, 57, "Input",ExpressionUUID->"8ed1595f-4f28-41b8-a20b-82c609487173"],
Cell[436804, 8897, 71, 0, 51, "Output",ExpressionUUID->"1e76c1fe-3097-4754-8290-9bd86ded81e5"]
}, Open  ]],
Cell[436890, 8900, 70, 0, 54, "Input",ExpressionUUID->"de63064d-96bc-4f1a-914a-355885bdcb63"],
Cell[436963, 8902, 61, 0, 48, InheritFromParent,ExpressionUUID->"50f89ec4-ca18-470c-9d2a-54dbcc030290"],
Cell[437027, 8904, 71, 0, 58, "Output",ExpressionUUID->"ec7c57fa-380c-4159-a4fa-e70a89ea6229"],
Cell[CellGroupData[{
Cell[437123, 8908, 70, 0, 44, "Input",ExpressionUUID->"4bdbc283-62ea-45d9-ac92-c6f799c42509"],
Cell[437196, 8910, 71, 0, 70, "Output",ExpressionUUID->"5bea9856-a018-42d0-9ce2-bbcab5792991"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437304, 8915, 70, 0, 37, "Input",ExpressionUUID->"651b652c-d563-4ffc-a673-7fbc13ba47a5"],
Cell[437377, 8917, 71, 0, 41, "Output",ExpressionUUID->"829bd558-a1f9-4cc6-a69d-8bd142365ff6"]
=======
Cell[729954, 14244, 201, 4, 58, "Chapter",ExpressionUUID->"c33fd357-ab86-4dac-a5dc-fb8a483872d5"],
Cell[730158, 14250, 269, 6, 29, "Input",ExpressionUUID->"de7ef9f2-bf67-4869-9b14-c25b89d18d50"],
Cell[CellGroupData[{
Cell[730452, 14260, 153, 3, 67, "Section",ExpressionUUID->"49d7fd52-7d0e-4eba-9a43-3a6532a9b58f"],
Cell[CellGroupData[{
Cell[730630, 14267, 4894, 89, 411, "Input",ExpressionUUID->"373847f0-5ceb-4aea-9bd8-2b9bd00ed101"],
Cell[735527, 14358, 185008, 3699, 68, "Output",ExpressionUUID->"42968dd2-1af4-4dd2-9252-b179f2e1c8a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[920572, 18062, 463, 9, 29, "Input",ExpressionUUID->"349b19a0-3962-4873-82b8-94890a3e44e2"],
Cell[921038, 18073, 81106, 1569, 68, "Output",ExpressionUUID->"998229bd-8f89-4994-a579-e9da43febb4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1002181, 19647, 597, 14, 29, "Input",ExpressionUUID->"a31fd4b4-2c15-4002-83ec-350a260510da"],
Cell[1002781, 19663, 864, 21, 33, "Output",ExpressionUUID->"2da98d1e-82ec-4eda-a4f4-0841343c270f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1003682, 19689, 519, 10, 29, "Input",ExpressionUUID->"1ba97a8f-3dd1-4af0-b442-37c950fb8e3e"],
Cell[1004204, 19701, 82324, 1584, 68, "Output",ExpressionUUID->"2ef9b80a-095c-4b12-b256-379d73c2a7b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1086565, 21290, 734, 17, 29, "Input",ExpressionUUID->"b5c02c2d-4f0c-4f1a-927d-e7f10c55aff2"],
Cell[1087302, 21309, 453, 9, 33, "Output",ExpressionUUID->"85d05a9e-ef93-4b7e-8c9e-b3cc0eff4f2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1087792, 21323, 350, 8, 29, "Input",ExpressionUUID->"243703bb-68c3-47c4-b125-e13f983de6e1"],
Cell[1088145, 21333, 230, 5, 33, "Output",ExpressionUUID->"a729d644-3ccf-4bd3-9ffd-0b01d55bd98a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1088412, 21343, 299, 7, 29, "Input",ExpressionUUID->"23fa8663-96e3-4910-820f-c54566b58e3c"],
Cell[1088714, 21352, 50043, 919, 68, "Output",ExpressionUUID->"171d85a3-b965-410b-9f57-4a9daa2a7be5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1138794, 22276, 330, 8, 29, "Input",ExpressionUUID->"85c4fda1-5bc1-4a9c-b6cc-b0c7f5dbd472"],
Cell[1139127, 22286, 50585, 931, 68, "Output",ExpressionUUID->"b8ea779b-3472-452e-bb2a-86b3a54c7755"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1189749, 23222, 664, 17, 71, "Input",ExpressionUUID->"8dde6df8-0f8e-4275-b577-c9c4d309cf0e"],
Cell[1190416, 23241, 75108, 1364, 84, "Output",ExpressionUUID->"7d408261-78cf-4bd3-b27d-93efa0b2527e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1265561, 24610, 467, 10, 29, "Input",ExpressionUUID->"e6780500-565d-45bc-a262-69cb0d64a129"],
Cell[1266031, 24622, 81059, 1570, 68, "Output",ExpressionUUID->"c4ab91a7-7c77-4a57-9362-ad407575bfc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1347127, 26197, 978, 23, 52, "Input",ExpressionUUID->"2cf81236-6d84-46cf-bdc6-a58e7378f47f"],
Cell[1348108, 26222, 1248, 28, 33, "Output",ExpressionUUID->"d46f95ba-8483-4983-b757-641abf102c57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1349393, 26255, 310, 8, 29, "Input",ExpressionUUID->"ca8cc221-b740-4791-9bae-e17f1fc2fe5d"],
Cell[1349706, 26265, 356, 9, 33, "Output",ExpressionUUID->"0a50f7c3-cd2b-436e-9cd9-c6ad5052537b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1350099, 26279, 532, 15, 32, "Input",ExpressionUUID->"7c0af5ad-4ff0-4f59-8a14-29f4d41784fd"],
Cell[1350634, 26296, 500, 14, 55, "Output",ExpressionUUID->"7d3c80e9-4fc4-4da7-a237-a91bfe79b7f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1351171, 26315, 268, 5, 29, "Input",ExpressionUUID->"266c7e41-b866-4629-a4f0-6a94b00f46f0"],
Cell[1351442, 26322, 415, 12, 37, "Output",ExpressionUUID->"94d5b34c-b81c-4259-af69-91b11be022d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1351894, 26339, 452, 12, 57, "Input",ExpressionUUID->"8ed1595f-4f28-41b8-a20b-82c609487173"],
Cell[1352349, 26353, 388, 11, 51, "Output",ExpressionUUID->"1e76c1fe-3097-4754-8290-9bd86ded81e5"]
}, Open  ]],
Cell[1352752, 26367, 296, 7, 54, "Input",ExpressionUUID->"de63064d-96bc-4f1a-914a-355885bdcb63"],
Cell[1353051, 26376, 526, 15, 48, InheritFromParent,ExpressionUUID->"50f89ec4-ca18-470c-9d2a-54dbcc030290"],
Cell[1353580, 26393, 439, 12, 58, "Output",ExpressionUUID->"ec7c57fa-380c-4159-a4fa-e70a89ea6229"],
Cell[CellGroupData[{
Cell[1354044, 26409, 318, 9, 44, "Input",ExpressionUUID->"4bdbc283-62ea-45d9-ac92-c6f799c42509"],
Cell[1354365, 26420, 235, 5, 70, "Output",ExpressionUUID->"5bea9856-a018-42d0-9ce2-bbcab5792991"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1354637, 26430, 368, 10, 37, "Input",ExpressionUUID->"651b652c-d563-4ffc-a673-7fbc13ba47a5"],
Cell[1355008, 26442, 335, 9, 41, "Output",ExpressionUUID->"829bd558-a1f9-4cc6-a69d-8bd142365ff6"]
>>>>>>> bd4c5067d8709d68cefc640a3bdac89ea3a71c7d
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

