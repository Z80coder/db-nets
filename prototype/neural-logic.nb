(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    928162,      19061]
NotebookOptionsPosition[    913014,      18792]
NotebookOutlinePosition[    913452,      18809]
CellTagsIndexPosition[    913409,      18806]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Neural Logic", "Title",
 CellChangeTimes->{{3.864793590384657*^9, 
  3.864793591864854*^9}},ExpressionUUID->"e16c6739-4a62-4e56-b75b-\
c3030d8dbab8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"\"\<neural-logic.m\>\"", ",", 
    RowBox[{"Path", "->", 
     RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.864789316910233*^9, 3.864789318413851*^9}, 
   3.8647909759269857`*^9, 3.864791161343305*^9, {3.865060533686211*^9, 
   3.865060534575768*^9}, {3.865654305983205*^9, 3.8656543071935663`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"31a3d5b7-a862-4434-bcdf-74b6c5931123"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "neurallogic`*"}]], "Input",
 CellChangeTimes->{{3.864791111748754*^9, 3.8647911154679937`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 
                 StyleBox["AppendHardClassificationLoss", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "AppendHardClassificationLoss", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardNeuralNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Soften", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "Soften", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExtractWeights", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "ExtractWeights", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardNetFunction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardNeuralNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardWeightSize", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardWeightSize", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "SoftNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardNeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardNeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LogisticClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "LogisticClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "SoftOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralChain", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardNeuralChain", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralPortLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardNeuralPortLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "NeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftWeightSize", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "SoftWeightSize", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Harden", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "Harden", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardNeuralMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "NeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SpaceSaving", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "SpaceSaving", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardNeuralNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "HardNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-9b8975b8-d533-4518-82df-6c551613c827", {
                   "SoftAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.19]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVzltI0wEcxfFpKisqdYSGZJLmLU28hPkSMUuZojmXSVgPMS0wopI2+6u5
ttmFUpEN8TphJF5zm1MxCxyCF5A51yxbNWqoBCoLCjd1bpHn93D4vJyH7ynh
A8FtHxaLdRnzCmQHZUYHl0l4F0j+VLfzyM0bFyvI2MkuMfmnoEVBrkq3TeRz
d6qvHDZ3f0snNzI6+SRbW6snkzi7ojq4Um82KiDv5RMreeZ7wEklnOLcDGuG
XrkqcxDOlYen/IfJQV8fk7MRmU7Srf7UwlpwcP2WapQ+MCD77LMDUJR3rJHc
jkvk+EGhIaePDdvlH9f76eeSVg3Aw/q+VD0sjj+6Rg68EeyQ90S6qRGojOi1
ky9+LayPwteTFdFj8JJq9tAENNjfciwwmVnWeaD3hCSUbXJwdR5JRxx0GV0h
t6B5uFBTCstiLB+eQvZQSo0MOkuSfi/CK/frjlvgeHzPOSucqWT+nV5E11aa
Kh9WSkbNJXBs2FZbDeds7xvmYdPn8HGy+sj51h/wrmZT5oIxicG8HSh5mCva
hSOPfP3d0DlxwbMHS4WvhAlmBzfKFCbmwwKtooq0MunXr0LDl78bRTCSmZ6/
Bu/Y7FnFULoWskqq28q2xHAfZSg5Yw==
  "],
 CellLabel->"Out[2]=",ExpressionUUID->"d06fef63-18b0-49b8-a479-51e8550075da"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utilities", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.8666054582437687`*^9, 
  3.866605459643314*^9}},ExpressionUUID->"c980f6be-656d-464c-97de-\
7bbd91e03ade"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HardPrediction", "[", "m_", "]"}], ":=", 
  RowBox[{"Ordering", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", "=", 
           RowBox[{"#", "[", "True", "]"}]}], "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MissingQ", "[", "t", "]"}], ",", "0", ",", "t"}], "]"}]}],
         "]"}], "&"}], ")"}], "/@", 
     RowBox[{"Counts", "/@", "m"}]}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HardTarget", "[", "t_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Position", "[", 
    RowBox[{"t", ",", "True"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HardResults", "[", "hardPredictionTargetPairs_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"results", ",", "accuracy"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"results", "=", 
      RowBox[{"Reverse", "[", 
       RowBox[{"Sort", "[", 
        RowBox[{"Counts", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"HardPrediction", "[", 
               RowBox[{"First", "[", "#", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"HardTarget", "[", 
               RowBox[{"Last", "[", "#", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], "/@", 
          "hardPredictionTargetPairs"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"accuracy", "=", 
      RowBox[{"KeySelect", "[", 
       RowBox[{"results", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "#", "]"}], "==", 
          RowBox[{"Last", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Accuracy = \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"Total", "[", "accuracy", "]"}], 
           RowBox[{"Length", "[", "hardPredictionTargetPairs", "]"}]], "*", 
          "100.0"}], "]"}], "<>", "\"\<%\>\""}], ",", "results"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.866544665069222*^9, 3.866544678336033*^9}, {
  3.866544717412966*^9, 3.866544787984428*^9}, {3.866544845678438*^9, 
  3.866544933668165*^9}, {3.866545008326929*^9, 3.866545292029965*^9}, {
  3.866545452822143*^9, 3.86654557558593*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a640c9f1-9738-4c46-b19d-979750434b3f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Learn XOR", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 
  3.864793644095471*^9}},ExpressionUUID->"e172cf77-104a-417b-9e8b-\
0895cfdd6efc"],

Cell[CellGroupData[{

Cell["Generate training data", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 
  3.864793759486944*^9}},ExpressionUUID->"f58270f5-8f0f-4a1c-9f4c-\
0201cecf95d8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numBooleanVariables", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Echo", "[", 
   SuperscriptBox["2", "numBooleanVariables"], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bf", "=", 
   RowBox[{"BooleanConvert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Xor", "[", 
       RowBox[{
       "#1", ",", "#2", ",", "#3", ",", "#4", ",", "#5", ",", "#6", ",", "#7",
         ",", "#8", ",", "#9", ",", "#10", ",", "#11", ",", "#12", ",", "#13",
         ",", "#14", ",", "#15", ",", "#16", ",", "#17", ",", "#18", ",", 
        "#19", ",", "#20", ",", "#21", ",", "#22", ",", "#23", ",", "#24", 
        ",", "#25"}], "]"}], "&"}], ",", "\"\<BooleanFunction\>\""}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxExamples", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numClasses", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"examples", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", "=", 
          RowBox[{"RandomChoice", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", "numBooleanVariables"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"Soften", "/@", "x"}], "->", 
         RowBox[{"Soften", "[", 
          RowBox[{"Boole", "[", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r", "=", 
               RowBox[{"bf", "@@", "x"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"r", ",", 
               RowBox[{"!", "r"}]}], "}"}]}], "]"}], "]"}], "]"}]}]}], "]"}], 
      "&"}], ",", 
     RowBox[{"Range", "[", "maxExamples", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{"examples", ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.2", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8631507903678637`*^9, 3.8631507905196667`*^9}, {
   3.863151242837092*^9, 3.863151247696003*^9}, 3.863158542401339*^9, 
   3.863163212116626*^9, 3.8631766947235193`*^9, 3.863176797755232*^9, {
   3.863179909310301*^9, 3.863179923837204*^9}, {3.863243605533627*^9, 
   3.863243620585451*^9}, {3.86324880283392*^9, 3.863248807664549*^9}, 
   3.863261133634419*^9, {3.86326137325694*^9, 3.8632614056637583`*^9}, {
   3.863261437377194*^9, 3.863261502775928*^9}, {3.8632617677613983`*^9, 
   3.863261767960438*^9}, {3.8632618648892*^9, 3.8632618650156393`*^9}, {
   3.863263609082129*^9, 3.863263612112956*^9}, {3.8632641205013657`*^9, 
   3.8632641216097193`*^9}, {3.8632646726440353`*^9, 
   3.8632646847617817`*^9}, {3.863265794153249*^9, 3.863265797374902*^9}, {
   3.86326617446527*^9, 3.8632661766776447`*^9}, {3.8632663950099487`*^9, 
   3.863266397423538*^9}, {3.863266602290083*^9, 3.863266603667367*^9}, {
   3.863267749709738*^9, 3.8632677506435137`*^9}, {3.863268331863552*^9, 
   3.863268332996944*^9}, {3.864793623697935*^9, 3.864793626168922*^9}, {
   3.864793718272374*^9, 3.864793728328333*^9}, {3.8647937905288*^9, 
   3.864793839705696*^9}, {3.8648255889830313`*^9, 3.864825592504498*^9}, {
   3.864825624917417*^9, 3.864825626880946*^9}, {3.864829407265236*^9, 
   3.8648294087742167`*^9}, {3.864829443456806*^9, 3.864829444846697*^9}, {
   3.864829792396603*^9, 3.8648297927316837`*^9}, {3.864830032545388*^9, 
   3.8648300662967587`*^9}, 3.86483040909219*^9, {3.864830633132044*^9, 
   3.8648306348014383`*^9}, {3.8648309522842607`*^9, 
   3.8648309524254227`*^9}, {3.864831241412085*^9, 3.8648312465735483`*^9}, {
   3.864831361588151*^9, 3.864831427353725*^9}, {3.864831467589365*^9, 
   3.864831467738257*^9}, {3.8650545097885313`*^9, 3.865054521919083*^9}, {
   3.865574752812943*^9, 3.865574784399784*^9}, {3.865592534192895*^9, 
   3.865592534298318*^9}, {3.865592762627692*^9, 3.8655927636071053`*^9}, {
   3.865594557687479*^9, 3.865594557984342*^9}, {3.865594963476437*^9, 
   3.8655949635928717`*^9}, {3.865780594387285*^9, 3.8657805954725647`*^9}, {
   3.86578528554428*^9, 3.865785286930284*^9}, {3.8658288989019117`*^9, 
   3.865828899235673*^9}, {3.865830427368958*^9, 3.865830428545253*^9}, {
   3.865830742328867*^9, 3.8658307442321053`*^9}, {3.865831732136331*^9, 
   3.8658317341109133`*^9}, {3.865837020252844*^9, 3.865837020623869*^9}, {
   3.8658371834605103`*^9, 3.865837184543343*^9}, {3.8658377080420017`*^9, 
   3.865837708413855*^9}, {3.865837740366976*^9, 3.86583774055787*^9}, {
   3.865859522557151*^9, 3.865859523313833*^9}, {3.865859830431425*^9, 
   3.865859831995036*^9}, {3.865866201299968*^9, 3.865866202414603*^9}, {
   3.8658663169608183`*^9, 3.865866318295281*^9}, {3.865866383754406*^9, 
   3.8658663858232803`*^9}, {3.8660002644683657`*^9, 3.866000265575876*^9}, {
   3.866000397664502*^9, 3.866000398839758*^9}, {3.8660004574432163`*^9, 
   3.8660004580794077`*^9}, {3.8666042520823517`*^9, 3.866604264374364*^9}, {
   3.866604302861124*^9, 3.866604304397232*^9}, {3.866604362727042*^9, 
   3.866604365684434*^9}, {3.866634397416646*^9, 3.86663441391949*^9}, {
   3.866634545413786*^9, 3.866634547171479*^9}, {3.8666346718798122`*^9, 
   3.866634702156291*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"660052dc-0b70-46b2-924e-427e0bd9ad48"],

Cell[BoxData["33554432"], "Echo",
 CellChangeTimes->{
  3.866799986763484*^9},ExpressionUUID->"a7046d12-e243-4df1-b1cb-\
5c7235936188"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hard neural logic", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.866604080745175*^9, 
  3.8666040868730593`*^9}},ExpressionUUID->"616a2ddc-1005-46d4-8c14-\
343a4bd3b6ff"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86660409306982*^9, 
  3.866604093249838*^9}},ExpressionUUID->"efe91894-6841-49a9-ab9d-\
fd0123575c7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", "trainData", "]"}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.86678913871952*^9, 3.86678914729805*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"169ec1a0-b1c3-4506-b125-378dd25952df"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"4", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralNOR", "[", 
         RowBox[{"inputSize", ",", "200"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"HardNeuralNOR", "[", 
         RowBox[{"200", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralPortLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866512854091155*^9, 3.8665128815568047`*^9}, {
   3.866513103300004*^9, 3.866513116326098*^9}, {3.8665133340990458`*^9, 
   3.8665133419773703`*^9}, {3.86651391128594*^9, 3.866513915466413*^9}, {
   3.866514318655335*^9, 3.866514323501399*^9}, {3.866514602855854*^9, 
   3.866514605749691*^9}, {3.86651468027989*^9, 3.8665147385101433`*^9}, {
   3.8665168378259563`*^9, 3.866516840683816*^9}, {3.866516968713831*^9, 
   3.866516971903157*^9}, {3.8665173610656767`*^9, 3.866517372695388*^9}, 
   3.866517444884035*^9, {3.86651878744969*^9, 3.8665188117507257`*^9}, {
   3.866518954624714*^9, 3.866518969573318*^9}, {3.866520101802957*^9, 
   3.866520108575643*^9}, {3.866520188881999*^9, 3.8665202157280684`*^9}, {
   3.866520364293333*^9, 3.866520392296053*^9}, {3.86652044871375*^9, 
   3.8665204631835423`*^9}, {3.8665219880508347`*^9, 3.866522005928316*^9}, {
   3.8665272161026173`*^9, 3.8665272312695007`*^9}, {3.866527801201952*^9, 
   3.866527883631137*^9}, {3.866528045329198*^9, 3.8665280486071043`*^9}, {
   3.866528154113455*^9, 3.8665281741152687`*^9}, {3.866528447153947*^9, 
   3.866528447260316*^9}, {3.866528670002123*^9, 3.86652867583491*^9}, {
   3.86652876246611*^9, 3.86652876256351*^9}, {3.866528813858374*^9, 
   3.866528848079921*^9}, {3.866530033731058*^9, 3.866530050034823*^9}, {
   3.866532603007605*^9, 3.8665326199562283`*^9}, {3.8665328331522837`*^9, 
   3.866532845529175*^9}, {3.866532894976413*^9, 3.866532895812646*^9}, {
   3.8665329705120907`*^9, 3.866532996865466*^9}, {3.866533798129952*^9, 
   3.866533798585582*^9}, {3.866542948856092*^9, 3.866542956003662*^9}, {
   3.866543312214932*^9, 3.8665433126315613`*^9}, {3.866545711295557*^9, 
   3.866545711720436*^9}, {3.866546071686404*^9, 3.866546081040039*^9}, {
   3.866547900239717*^9, 3.8665479093644657`*^9}, {3.866549693552167*^9, 
   3.866549704088811*^9}, {3.866550126984569*^9, 3.8665501393456163`*^9}, {
   3.866551310563048*^9, 3.866551316716016*^9}, {3.866552552251585*^9, 
   3.866552552469812*^9}, {3.866552612077286*^9, 3.866552621902178*^9}, {
   3.86655297295109*^9, 3.8665530085584908`*^9}, {3.866553815227034*^9, 
   3.866553831744128*^9}, {3.866554274483659*^9, 3.8665542884172983`*^9}, {
   3.866554409228067*^9, 3.866554412577661*^9}, {3.866554466780363*^9, 
   3.866554467185257*^9}, {3.866554546724543*^9, 3.866554547081894*^9}, {
   3.866554637927086*^9, 3.866554643213908*^9}, {3.8665551202789803`*^9, 
   3.866555125450521*^9}, {3.866555219318622*^9, 3.8665552411393957`*^9}, {
   3.866555370545534*^9, 3.866555374243248*^9}, {3.866600476190877*^9, 
   3.866600520811289*^9}, {3.866600851629229*^9, 3.8666008545843487`*^9}, {
   3.866601173213505*^9, 3.866601184697352*^9}, {3.866602823213896*^9, 
   3.866602823651602*^9}, {3.866604371939287*^9, 3.866604381826564*^9}, {
   3.866604749040091*^9, 3.8666047509630136`*^9}, {3.866604849825338*^9, 
   3.866604850409642*^9}, {3.866604910415758*^9, 3.8666049155794764`*^9}, {
   3.8666049635848503`*^9, 3.866604963802972*^9}, {3.8666050360329323`*^9, 
   3.8666050443319817`*^9}, {3.8666050857854013`*^9, 3.866605102679984*^9}, {
   3.866605133064426*^9, 3.866605167596745*^9}, 3.8666053219956837`*^9, {
   3.866605368956347*^9, 3.866605372897883*^9}, {3.866608559321225*^9, 
   3.86660857578793*^9}, {3.8666256514454317`*^9, 3.8666256570367737`*^9}, {
   3.866625747091804*^9, 3.866625749618054*^9}, {3.866625787684525*^9, 
   3.8666257907528152`*^9}, {3.8666258795422707`*^9, 3.866625882833005*^9}, {
   3.866626038446534*^9, 3.866626043128318*^9}, {3.866626077493651*^9, 
   3.866626081166033*^9}, {3.866634901739232*^9, 3.866634904401794*^9}, {
   3.86678873629885*^9, 3.866788736859007*^9}, {3.866788795186584*^9, 
   3.866788797694313*^9}, {3.8667891530822077`*^9, 3.866789154124004*^9}, {
   3.866800206265554*^9, 3.866800215024955*^9}, 
   3.866864934672009*^9},ExpressionUUID->"b30edffc-67af-4934-8f33-\
faee89f4353a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"4", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"inputSize", ",", "200"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"200", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralPortLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866613777500483*^9, 3.866613821043852*^9}, {
   3.866613926333091*^9, 3.866613930531905*^9}, {3.866626083815942*^9, 
   3.866626086822467*^9}, {3.866634907171651*^9, 3.86663490948984*^9}, {
   3.866788799974736*^9, 3.866788801526519*^9}, {3.866789160113908*^9, 
   3.866789161089756*^9}, {3.8668002187768106`*^9, 3.866800226245089*^9}, 
   3.8668649413004713`*^9},ExpressionUUID->"319732b5-cfeb-47c1-acda-\
faab4d2e172a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"softNet", "=", 
  RowBox[{"AppendHardClassificationLoss", "[", "net", "]"}]}]], "Input",
 CellChangeTimes->{{3.866020485648757*^9, 3.866020486758964*^9}, {
   3.8660206133758917`*^9, 3.86602061576938*^9}, {3.866021594138579*^9, 
   3.866021622648958*^9}, {3.86602221641733*^9, 3.866022259472351*^9}, {
   3.86602506519114*^9, 3.8660250652828293`*^9}, {3.866027283063545*^9, 
   3.866027305459503*^9}, {3.866027571359556*^9, 3.866027577807056*^9}, {
   3.866028577017147*^9, 3.866028577337102*^9}, {3.866028739939226*^9, 
   3.866028740417481*^9}, {3.866038386270308*^9, 3.866038393509417*^9}, {
   3.866038426793558*^9, 3.866038432549663*^9}, {3.866038541734429*^9, 
   3.866038552581696*^9}, {3.8660399839336977`*^9, 3.8660400476873417`*^9}, {
   3.866040086377454*^9, 3.866040113183221*^9}, {3.8660842202209263`*^9, 
   3.8660842234441147`*^9}, {3.866084729086014*^9, 3.8660847389004602`*^9}, {
   3.866084883181377*^9, 3.866084891034108*^9}, {3.866087944385981*^9, 
   3.866087946377273*^9}, {3.8660898129249763`*^9, 3.866089819116226*^9}, {
   3.8660918927590847`*^9, 3.866091896174137*^9}, {3.866118640249077*^9, 
   3.8661186553525763`*^9}, {3.8661697941751633`*^9, 3.86616982143332*^9}, {
   3.8661700477905827`*^9, 3.866170062053422*^9}, {3.866170430900312*^9, 
   3.866170441150339*^9}, {3.866171085971992*^9, 3.866171092538931*^9}, {
   3.8661713117235622`*^9, 3.866171323794742*^9}, {3.866172075114151*^9, 
   3.866172086385466*^9}, {3.8661726453612757`*^9, 3.8661726565682907`*^9}, {
   3.866172963402001*^9, 3.866172967303824*^9}, {3.866175492855685*^9, 
   3.86617549327916*^9}, {3.8661755786344223`*^9, 3.866175597119087*^9}, {
   3.866176135095639*^9, 3.866176139335493*^9}, {3.866176563216754*^9, 
   3.866176567303925*^9}, {3.866177234452429*^9, 3.866177240033128*^9}, {
   3.866177471626033*^9, 3.866177471849081*^9}, {3.8661781260498943`*^9, 
   3.866178174045168*^9}, {3.866179499382938*^9, 3.866179520538422*^9}, {
   3.866180308892374*^9, 3.866180328231532*^9}, {3.866180620692492*^9, 
   3.866180620811393*^9}, {3.866180727174838*^9, 3.866180728856566*^9}, {
   3.8661809278929253`*^9, 3.866180930764296*^9}, {3.866181239813146*^9, 
   3.866181242692215*^9}, {3.866184773364808*^9, 3.866184773468157*^9}, {
   3.866184929896516*^9, 3.866184931032365*^9}, {3.866185363169696*^9, 
   3.866185363420731*^9}, {3.866185838820908*^9, 3.866185842136413*^9}, {
   3.8661861874248247`*^9, 3.866186188480125*^9}, {3.86618706378515*^9, 
   3.866187066984132*^9}, {3.866209107928833*^9, 3.866209126148491*^9}, {
   3.866209156593391*^9, 3.8662091576123867`*^9}, {3.866209702848567*^9, 
   3.866209710039878*^9}, {3.866209813177039*^9, 3.866209834123746*^9}, {
   3.86621053449234*^9, 3.866210540769287*^9}, {3.866210581043235*^9, 
   3.8662105868693542`*^9}, {3.866210622339385*^9, 3.866210627545692*^9}, {
   3.866210657739574*^9, 3.8662106609137363`*^9}, {3.866210756731784*^9, 
   3.866210768609764*^9}, {3.866211193549685*^9, 3.8662112016988564`*^9}, {
   3.866211352173271*^9, 3.866211355378903*^9}, {3.8662114673335752`*^9, 
   3.866211471635058*^9}, {3.8662116682945633`*^9, 3.86621167888715*^9}, 
   3.8662117763988447`*^9, {3.866211833182128*^9, 3.8662118352832003`*^9}, {
   3.86621193783076*^9, 3.866211943219183*^9}, {3.866214069618958*^9, 
   3.866214085207219*^9}, {3.86621414917101*^9, 3.866214201293022*^9}, {
   3.866214582928615*^9, 3.866214586096209*^9}, {3.8662146462687683`*^9, 
   3.8662146535499763`*^9}, {3.866214940556902*^9, 3.866214945432839*^9}, {
   3.86625367959163*^9, 3.86625368544868*^9}, {3.8662538129344873`*^9, 
   3.866253817785205*^9}, {3.866254549496963*^9, 3.866254555093663*^9}, {
   3.8662546252320347`*^9, 3.866254645248086*^9}, {3.866254759667647*^9, 
   3.8662547607426033`*^9}, {3.866254889744342*^9, 3.8662548909149446`*^9}, {
   3.866254921233653*^9, 3.866254922151456*^9}, {3.866255111823483*^9, 
   3.866255112738577*^9}, 3.8662574558616056`*^9, {3.866257625671372*^9, 
   3.8662576360908813`*^9}, {3.866257668990629*^9, 3.866257673154139*^9}, {
   3.866258160607082*^9, 3.866258163488317*^9}, {3.866258216054822*^9, 
   3.866258216152341*^9}, {3.866258465946023*^9, 3.8662584660890408`*^9}, {
   3.8662587584666643`*^9, 3.866258758714335*^9}, {3.8662591656591253`*^9, 
   3.866259171110828*^9}, {3.8662595439403343`*^9, 3.866259575288472*^9}, {
   3.866260163911601*^9, 3.866260184078418*^9}, {3.86626215222803*^9, 
   3.8662621832516203`*^9}, {3.866263109109415*^9, 3.86626311329671*^9}, {
   3.8662634113702927`*^9, 3.866263445027198*^9}, {3.8662637295611134`*^9, 
   3.8662637341766987`*^9}, {3.8662638454628477`*^9, 3.86626384912811*^9}, {
   3.866264629557499*^9, 3.866264632526574*^9}, {3.866264756302319*^9, 
   3.866264756571878*^9}, {3.86626485570925*^9, 3.8662648604861727`*^9}, {
   3.866264906589533*^9, 3.866264909654014*^9}, {3.8662650173821917`*^9, 
   3.866265024103039*^9}, {3.866267932128647*^9, 3.866267936947571*^9}, {
   3.866272289890004*^9, 3.866272326071719*^9}, 3.866272498086396*^9, {
   3.866272605318948*^9, 3.8662726100556726`*^9}, {3.866272697696899*^9, 
   3.8662727061238422`*^9}, {3.866272804197109*^9, 3.866272807076984*^9}, {
   3.866272890576043*^9, 3.8662729018249826`*^9}, {3.866273061136441*^9, 
   3.866273079881092*^9}, {3.8662739928242073`*^9, 3.866274026656089*^9}, {
   3.866274121640194*^9, 3.86627415310497*^9}, {3.8662742538084593`*^9, 
   3.866274260924819*^9}, {3.86627447707015*^9, 3.866274491178595*^9}, {
   3.866274954835182*^9, 3.866274972215249*^9}, {3.8662751949711027`*^9, 
   3.866275214973873*^9}, {3.866275317133552*^9, 3.866275326157571*^9}, {
   3.866276341927771*^9, 3.866276342361364*^9}, {3.866276444445874*^9, 
   3.866276444758065*^9}, 3.866276574032675*^9, {3.8662774805759163`*^9, 
   3.866277486441833*^9}, {3.866277730486899*^9, 3.866277745606361*^9}, {
   3.866277812901185*^9, 3.8662778241863747`*^9}, {3.866277923447342*^9, 
   3.866277942127078*^9}, {3.866278044847097*^9, 3.866278070211129*^9}, {
   3.866278491367318*^9, 3.866278493966505*^9}, {3.866278580024693*^9, 
   3.8662785830122213`*^9}, {3.866278895153315*^9, 3.866278898232675*^9}, {
   3.866280230366321*^9, 3.86628024016776*^9}, 3.866280351079256*^9, {
   3.866280499461529*^9, 3.8662805080447283`*^9}, {3.866280639515723*^9, 
   3.8662806449211483`*^9}, {3.866280754797947*^9, 3.86628075810079*^9}, {
   3.866280876373425*^9, 3.866280889329287*^9}, 3.866281009490582*^9, {
   3.8662811039106913`*^9, 3.866281107962268*^9}, {3.866281186723476*^9, 
   3.866281191533492*^9}, {3.8662812575988626`*^9, 3.866281268830084*^9}, {
   3.8662813166116953`*^9, 3.866281325765922*^9}, {3.866282044987713*^9, 
   3.866282048676916*^9}, {3.866282148870701*^9, 3.866282152685348*^9}, {
   3.86628313823394*^9, 3.8662831431981792`*^9}, {3.866283203895447*^9, 
   3.8662832148382063`*^9}, {3.8662832951824627`*^9, 
   3.8662833056304398`*^9}, {3.866283478244402*^9, 3.866283487341878*^9}, {
   3.8662841436542883`*^9, 3.86628415025281*^9}, {3.866284940968055*^9, 
   3.866284945101494*^9}, {3.866285029031362*^9, 3.866285034053158*^9}, {
   3.866285238231142*^9, 3.8662852400450497`*^9}, {3.8662854784494677`*^9, 
   3.866285480030343*^9}, {3.8662855684494333`*^9, 3.866285589220209*^9}, {
   3.866285661897065*^9, 3.866285665049341*^9}, {3.866286012525502*^9, 
   3.866286023701212*^9}, {3.866286183975936*^9, 3.866286197019022*^9}, {
   3.866286343624745*^9, 3.8662863761838703`*^9}, {3.86628647476213*^9, 
   3.866286478513227*^9}, {3.866286583730136*^9, 3.866286589629998*^9}, {
   3.8662866316154537`*^9, 3.866286632298744*^9}, {3.866286684611227*^9, 
   3.866286694033737*^9}, {3.866286815683847*^9, 3.866286826001635*^9}, {
   3.8662869515842*^9, 3.866286957090143*^9}, {3.866287432190014*^9, 
   3.866287433732437*^9}, {3.8662875714309177`*^9, 3.866287575508819*^9}, {
   3.866287972431319*^9, 3.866287979390542*^9}, {3.8662881211610413`*^9, 
   3.866288128734665*^9}, {3.866301184432645*^9, 3.866301189032214*^9}, {
   3.866301252666163*^9, 3.866301255952261*^9}, {3.866301376402754*^9, 
   3.866301391652487*^9}, {3.866301466042976*^9, 3.866301469288639*^9}, {
   3.866301630395039*^9, 3.866301653060717*^9}, {3.866301748836125*^9, 
   3.866301755312545*^9}, {3.86630188485115*^9, 3.866301888560711*^9}, {
   3.866302280747377*^9, 3.8663022952887983`*^9}, {3.866302405795878*^9, 
   3.866302419001148*^9}, {3.866302495340143*^9, 3.866302504605687*^9}, {
   3.866350591374894*^9, 3.8663505951022243`*^9}, {3.866351142159863*^9, 
   3.866351179558625*^9}, {3.8663515938249702`*^9, 3.866351597311022*^9}, {
   3.8663516429930353`*^9, 3.866351646919097*^9}, {3.8663540899964314`*^9, 
   3.866354091250739*^9}, 3.866354227060774*^9, {3.866354342347616*^9, 
   3.866354366019519*^9}, {3.866354536533381*^9, 3.866354542835105*^9}, {
   3.866354615988611*^9, 3.866354616498942*^9}, {3.866354747316181*^9, 
   3.866354747986311*^9}, {3.866354820971937*^9, 3.866354830674176*^9}, {
   3.866354985259542*^9, 3.866355003354249*^9}, {3.866355243555305*^9, 
   3.866355280233426*^9}, {3.866355363275181*^9, 3.8663553649290257`*^9}, {
   3.866355508482728*^9, 3.8663555086333237`*^9}, {3.866355904531114*^9, 
   3.8663559105053043`*^9}, {3.866355992402801*^9, 3.866356013229351*^9}, {
   3.866356256538742*^9, 3.866356257041319*^9}, {3.866356472449071*^9, 
   3.866356473280033*^9}, {3.8663565818412313`*^9, 3.866356588441074*^9}, {
   3.866356990748909*^9, 3.866356994266841*^9}, {3.8663571204214773`*^9, 
   3.866357120574224*^9}, {3.8663572027579412`*^9, 3.8663572078996153`*^9}, {
   3.866357620436617*^9, 3.866357634688436*^9}, {3.866357667446629*^9, 
   3.866357681140574*^9}, {3.8663583040873337`*^9, 3.866358308549032*^9}, {
   3.866358702488315*^9, 3.866358710660177*^9}, {3.866358792502235*^9, 
   3.866358792643732*^9}, {3.8663588650968037`*^9, 3.866358870370079*^9}, {
   3.8663590601050797`*^9, 3.866359061311141*^9}, {3.866359100825281*^9, 
   3.8663591032317047`*^9}, {3.866360392667655*^9, 3.866360402393593*^9}, {
   3.866360446451545*^9, 3.866360454122822*^9}, {3.866360518763679*^9, 
   3.866360523813664*^9}, {3.8663605658118258`*^9, 3.866360586933572*^9}, {
   3.866360874844895*^9, 3.866360875286996*^9}, {3.8663609358459*^9, 
   3.866360946523975*^9}, {3.8663629695673723`*^9, 3.8663629719826107`*^9}, {
   3.8663639844553833`*^9, 3.8663639851026163`*^9}, {3.866364664263899*^9, 
   3.866364667805708*^9}, {3.8663647416864157`*^9, 3.866364751498241*^9}, {
   3.8663648173209887`*^9, 3.8663648239090853`*^9}, {3.866364861552744*^9, 
   3.866364866359233*^9}, {3.866364911593669*^9, 3.866364912091476*^9}, {
   3.8663650443606586`*^9, 3.8663650452161922`*^9}, {3.866365512692107*^9, 
   3.866365515810193*^9}, 3.866365740980801*^9, {3.866366124781304*^9, 
   3.866366128103511*^9}, {3.86636615827591*^9, 3.866366161795991*^9}, 
   3.8663675572465467`*^9, {3.8663679823247623`*^9, 3.8663679840072737`*^9}, {
   3.8663685724947968`*^9, 3.866368575523563*^9}, {3.866368617885765*^9, 
   3.866368630439355*^9}, {3.8663688420628223`*^9, 3.866368846739706*^9}, {
   3.866368921365861*^9, 3.866368935403892*^9}, {3.866368992805874*^9, 
   3.8663689939334173`*^9}, {3.8663690430938*^9, 3.8663690474648046`*^9}, {
   3.866369083709838*^9, 3.8663691118719187`*^9}, {3.866369202398569*^9, 
   3.866369214195849*^9}, {3.866369334334588*^9, 3.866369336388123*^9}, {
   3.866369454951181*^9, 3.8663694569323397`*^9}, {3.866369515406219*^9, 
   3.866369518628167*^9}, {3.8663703695855513`*^9, 3.8663703750077*^9}, {
   3.8663705385538683`*^9, 3.866370541048525*^9}, {3.866370586394085*^9, 
   3.866370607876096*^9}, {3.8663707547717*^9, 3.866370757696903*^9}, {
   3.866370926163419*^9, 3.866370929489147*^9}, {3.866371042659484*^9, 
   3.8663710475373373`*^9}, {3.866371595734161*^9, 3.866371595814637*^9}, {
   3.866371630486404*^9, 3.866371630623527*^9}, {3.866371683122916*^9, 
   3.866371701147089*^9}, {3.866371789324903*^9, 3.866371822547234*^9}, {
   3.8663718525974607`*^9, 3.8663718606429367`*^9}, {3.866371974165319*^9, 
   3.866371979075355*^9}, {3.866372122293806*^9, 3.8663721296757917`*^9}, {
   3.866372551518608*^9, 3.866372561132722*^9}, {3.866372627211433*^9, 
   3.866372636080841*^9}, {3.8663728112322397`*^9, 3.866372812994047*^9}, {
   3.866372895895451*^9, 3.866372901477323*^9}, {3.8664377149946833`*^9, 
   3.8664377176580143`*^9}, {3.86643884019552*^9, 3.86643884333634*^9}, {
   3.866438919186672*^9, 3.866438921864346*^9}, {3.8664391767222757`*^9, 
   3.866439182016387*^9}, {3.866439413057221*^9, 3.8664394237656918`*^9}, {
   3.866440165425671*^9, 3.8664401663535337`*^9}, {3.8664414544278717`*^9, 
   3.866441455406114*^9}, {3.8664415241527863`*^9, 3.866441526297073*^9}, {
   3.866441636299324*^9, 3.866441637325185*^9}, {3.8664421743093033`*^9, 
   3.866442174534107*^9}, {3.866444116919817*^9, 3.866444119674713*^9}, {
   3.86644604617083*^9, 3.866446049128669*^9}, {3.866512861360115*^9, 
   3.866512866295472*^9}, {3.866512916479863*^9, 3.866512918447736*^9}, {
   3.866634565957718*^9, 3.866634566999825*^9}, {3.86680026940904*^9, 
   3.866800269792528*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"2799844a-7684-4eb7-88cb-2eb8a3232481"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -15.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-2.0000000267948965`, -0.9999999464102056}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -13.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Probs\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -13.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-3.449999999999999, 
                    9.244239475045655*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-1.450000012057703, \
-0.44999996114739915`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"2\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.0000000267948965`, -0.9999999464102056}, \
{-0.9999999999999997, 2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999999999999, 
                    9.244239475045655*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.450000012057703, -0.44999996114739915`}, \
{-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999987`, 1.0717958811647137`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2.999999999999999, 
                    8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.0000000267948965`, -0.9999999464102056}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7226666666666666, 0.6733333333333333, 
                    0.8926666666666666]], 
                    EdgeForm[
                    RGBColor[0.584, 0.51, 0.839]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"MS\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "MeanSquaredLossLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["loss", Bold], 
                    Style[
                    MeanSquaredLossLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Mu]\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Probs\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Mean", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Probs", Bold], 
                    HoldForm[
                    AggregationLayer[Mean]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-2.0000000267948965`, \
-0.9999999464102056}, {-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                    0.}, {-1.9999999999999993`, 5.3589794058235685`*^-8}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 21, 8, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {277.9999999999999, 103.00000294743865`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Target\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Target\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Target"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Target\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Target"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "NeuralLogicNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"OR" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{200, 25}]|>,
                     "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {200, 25}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200, 
                    25}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {200, 25}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200, 25},
                     NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200, 
                    25}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftOR[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Max" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200, 25},
                     NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {200}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Max", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Max", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{200}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {200}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {200}|>,
                     "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {200}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "OR", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OR", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"OR" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{8, 200}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{8, 200}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8, 200}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8, 
                    200}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {8, 200}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8, 
                    200}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftOR[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{8, 200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8, 
                    200}, NeuralNetworks`AtomT]|>|>, 
                    "Max" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Max", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Max", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "OR", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OR", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "3" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{2, 
                    4}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Probs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]|>|>, 
                    "loss" -> <|
                    "Type" -> "MeanSquaredLoss", "Arrays" -> <||>, 
                    "Parameters" -> <|"$Dimensions" -> {2}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Target" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Probs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Probs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Nodes", "Probs"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Nodes", "Probs"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.866604385531515*^9, 3.866604752320993*^9, 3.86660485170772*^9, 
   3.8666049165654373`*^9, 3.8666049650282393`*^9, 3.866605045496359*^9, {
   3.866605087083253*^9, 3.866605103860919*^9}, {3.8666051697048388`*^9, 
   3.866605182334133*^9}, 3.866605324607296*^9, 3.8666053743162518`*^9, 
   3.866613822746578*^9, 3.866613934203129*^9, 3.866625674155504*^9, 
   3.866625715079267*^9, 3.866625752494906*^9, 3.866625887178625*^9, 
   3.8666259363839493`*^9, 3.866626046404351*^9, 3.866626088088612*^9, {
   3.866634558081018*^9, 3.8666345677114687`*^9}, 3.866634708596148*^9, 
   3.866634851921915*^9, 3.8666349107311773`*^9, 3.866800271472727*^9, 
   3.866802647448588*^9, 3.866862630429627*^9, 3.866863023262228*^9, 
   3.866863927813119*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"07131e53-6bac-4d64-a100-056135bf8855"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866604099593103*^9, 
  3.866604099793066*^9}},ExpressionUUID->"ad8f60ad-b03c-4795-b29f-\
2120bea29aab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainedNet", ",", "resultsObject"}], "}"}], "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"softNet", ",", "trainData", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TrainedNet\>\"", ",", "\"\<ResultsObject\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"testData", ",", 
          RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "20000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866262230733412*^9, 3.866262232700974*^9}, {
   3.866262747191399*^9, 3.866262755095587*^9}, {3.866263687522623*^9, 
   3.866263691522341*^9}, {3.866272907421722*^9, 3.866272908705574*^9}, {
   3.866274679974001*^9, 3.866274683777981*^9}, {3.866275126894273*^9, 
   3.866275130882132*^9}, {3.866275621030303*^9, 3.86627562449095*^9}, {
   3.866275800963348*^9, 3.866275804851942*^9}, {3.866278286918571*^9, 
   3.866278290408846*^9}, {3.866279939718389*^9, 3.8662799438283052`*^9}, {
   3.8662825835076027`*^9, 3.866282587086446*^9}, {3.8662848978232517`*^9, 
   3.8662849013340178`*^9}, {3.866301199025255*^9, 3.866301208705173*^9}, {
   3.866302091405136*^9, 3.866302093072084*^9}, {3.8663022330606956`*^9, 
   3.8663022743807373`*^9}, {3.866303190918262*^9, 3.8663031961042967`*^9}, {
   3.8663508996403513`*^9, 3.866350903983953*^9}, {3.8663558607588453`*^9, 
   3.866355860917651*^9}, {3.86637013313169*^9, 3.866370138430928*^9}, {
   3.866370237003203*^9, 3.866370239455555*^9}, {3.8663703291644793`*^9, 
   3.866370333111907*^9}, {3.866370363265703*^9, 3.866370363711856*^9}, {
   3.8663720431119947`*^9, 3.866372048852154*^9}, {3.866372163198892*^9, 
   3.8663721862104397`*^9}, 3.8663723957836103`*^9, {3.866372460806899*^9, 
   3.866372466981298*^9}, {3.8663728465397882`*^9, 3.866372846690668*^9}, {
   3.866439863015705*^9, 3.866439889076521*^9}, {3.866444399919945*^9, 
   3.866444403398275*^9}, 3.866445596437694*^9, 3.866445994629862*^9, {
   3.866446077093233*^9, 3.8664460772227592`*^9}, {3.866514058957122*^9, 
   3.866514061965129*^9}, {3.866514093672724*^9, 3.8665140946276417`*^9}, 
   3.866514530731886*^9, {3.866514784096607*^9, 3.866514784235477*^9}, {
   3.8665148543229303`*^9, 3.86651485485518*^9}, {3.866517197949828*^9, 
   3.866517203967832*^9}, 3.866517357579501*^9, 3.8665174374755917`*^9, 
   3.8665175119230967`*^9, {3.866517590284361*^9, 3.866517620168564*^9}, 
   3.8665176619240017`*^9, {3.8665179325026484`*^9, 3.8665179399815683`*^9}, {
   3.866518111910069*^9, 3.866518112233807*^9}, {3.866518521945266*^9, 
   3.866518522115803*^9}, {3.866518571201038*^9, 3.866518588328702*^9}, {
   3.866518646862028*^9, 3.866518650143523*^9}, 3.866518704027602*^9, {
   3.866519202548511*^9, 3.8665192068871107`*^9}, {3.866552934111923*^9, 
   3.866552991359269*^9}, {3.866553502473754*^9, 3.8665535030716467`*^9}, {
   3.866554417382031*^9, 3.866554420050095*^9}, {3.866554652086327*^9, 
   3.8665546522545357`*^9}, 3.866604776742971*^9, {3.86680027773044*^9, 
   3.866800278113852*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"5ce8ebfa-b558-499e-a012-4d55894a0d04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedSoftNet", "=", 
  RowBox[{"NetExtract", "[", 
   RowBox[{"trainedNet", ",", "\"\<NeuralLogicNet\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866262883598037*^9, 3.866262913813736*^9}, {
  3.866800388275832*^9, 3.866800388780817*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"b170e72e-0c32-4303-b9fb-00b577c2bacc"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 25\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "OR" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{200, 25}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {200, 25}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {200, 25}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftOR[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT], 
                    "Weights" -> NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Max" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {200}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Max", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Max", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{200}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {200}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {200}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {200}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "OR", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OR", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "OR" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{8, 200}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {8, 200}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {8, 200}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8, 200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftOR[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Max" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8, 200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Max", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Max", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {8}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "OR", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OR", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "3" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{2, 4}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`AtomT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 25\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 200\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ReshapeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.866604444065995*^9, 3.866604825257682*^9, 3.866604891009988*^9, 
   3.866604946387684*^9, 3.8666050262184153`*^9, 3.8666050785043297`*^9, 
   3.866605125883642*^9, 3.866605305208755*^9, 3.8666053506104107`*^9, 
   3.866605402815572*^9, 3.8666139117587347`*^9, 3.866613968840701*^9, 
   3.866625704725067*^9, 3.866625739869501*^9, 3.866625776351536*^9, 
   3.866625908542205*^9, 3.866625954933941*^9, 3.866626069327134*^9, 
   3.866626118723287*^9, 3.866634633753524*^9, 3.8666348346758213`*^9, 
   3.866634880920323*^9, 3.866635024288516*^9, {3.866800377101527*^9, 
   3.8668003895056067`*^9}, 3.866802672634994*^9, 3.866862759681157*^9, 
   3.866863134091525*^9, 3.866863952315647*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"4d96fb96-eb80-4aff-b66f-79202bf33db2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.866800415776203*^9, 
  3.86680041674398*^9}},ExpressionUUID->"b675450a-34c8-422e-899e-\
e8ac46fc9f8e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"resultsObject", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"softPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainedSoftNet", "[", 
         RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardenedPredictionTargetPairs", "=", 
   RowBox[{"Harden", "[", "softPredictionTargetPairs", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"RandomSample", "[", 
       RowBox[{"hardenedPredictionTargetPairs", ",", "5"}], "]"}], ",", "1"}],
      "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"True", "->", 
     RowBox[{"Style", "[", 
      RowBox[{"True", ",", "Red"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.861598551906061*^9, 3.8615985567851887`*^9}, {
   3.863178625879333*^9, 3.8631786268708572`*^9}, {3.863240306853362*^9, 
   3.863240307588504*^9}, {3.8647943299915457`*^9, 3.864794330447215*^9}, {
   3.864794373237455*^9, 3.864794410229562*^9}, {3.864825813950893*^9, 
   3.8648258236291018`*^9}, {3.86505446234156*^9, 3.865054476285439*^9}, {
   3.86505502598845*^9, 3.865055037244231*^9}, {3.8650600546900873`*^9, 
   3.8650600574960833`*^9}, {3.865421281430146*^9, 3.865421283958905*^9}, {
   3.866604469348693*^9, 3.866604469491571*^9}, {3.866604715196765*^9, 
   3.8666047309003077`*^9}, {3.8668003939552097`*^9, 3.86680039453754*^9}, {
   3.866863741581986*^9, 3.866863750762281*^9}, 
   3.866865427474077*^9},ExpressionUUID->"17d6edff-ccbc-4c33-ae6f-\
0bcb97945f31"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.2491976184807718`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.866604740014987*^9, 3.866604827512426*^9, 3.866604892766753*^9, 
   3.866604948159389*^9, 3.866605027608502*^9, 3.8666050797060127`*^9, 
   3.8666051270238*^9, 3.866605306478503*^9, 3.866605351838655*^9, 
   3.866605404161014*^9, 3.866613913674348*^9, 3.8666139705107*^9, 
   3.8666257065730343`*^9, 3.86662574134376*^9, 3.8666257777013702`*^9, 
   3.866625909825324*^9, 3.866625956361196*^9, 3.866626070645979*^9, 
   3.866626120217812*^9, {3.866634635480035*^9, 3.8666346577282267`*^9}, 
   3.866634835967009*^9, 3.8666348822118883`*^9, 3.866635025677926*^9, 
   3.866800397397952*^9, 3.866802676908917*^9, 3.866862761074505*^9, 
   3.866863136267887*^9, 3.866863751771923*^9, 3.866863953699317*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"3751cfcd-1ca2-4f1b-a4fb-fa5dad3cc187"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"False", 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], "False"},
       {"False", "False", "False", 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         StyleBox["True",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontColor->RGBColor[1, 0, 0]]},
        {"False"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"False", 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], "False"},
       {
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], "False", 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"False"},
        {
         StyleBox["True",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontColor->RGBColor[1, 0, 0]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"False", 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], "False"},
       {
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], "False", "False", 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"False"},
        {
         StyleBox["True",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontColor->RGBColor[1, 0, 0]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"False", 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], "False"},
       {"False", "False", "False", 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"False"},
        {
         StyleBox["True",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontColor->RGBColor[1, 0, 0]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"False", "False", 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], "False"},
       {"False", 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]], "False", 
        StyleBox["True",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontColor->RGBColor[1, 0, 0]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"False"},
        {
         StyleBox["True",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontColor->RGBColor[1, 0, 0]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.866604740014987*^9, 3.866604827512426*^9, 3.866604892766753*^9, 
   3.866604948159389*^9, 3.866605027608502*^9, 3.8666050797060127`*^9, 
   3.8666051270238*^9, 3.866605306478503*^9, 3.866605351838655*^9, 
   3.866605404161014*^9, 3.866613913674348*^9, 3.8666139705107*^9, 
   3.8666257065730343`*^9, 3.86662574134376*^9, 3.8666257777013702`*^9, 
   3.866625909825324*^9, 3.866625956361196*^9, 3.866626070645979*^9, 
   3.866626120217812*^9, {3.866634635480035*^9, 3.8666346577282267`*^9}, 
   3.866634835967009*^9, 3.8666348822118883`*^9, 3.866635025677926*^9, 
   3.866800397397952*^9, 3.866802676908917*^9, 3.866862761074505*^9, 
   3.866863136267887*^9, 3.866863751771923*^9, 3.8668639563359747`*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"98684732-b261-4849-9bd8-8ad25f1a72b6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 49.75%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "586"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "565"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "440"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "409"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866604740014987*^9, 3.866604827512426*^9, 3.866604892766753*^9, 
   3.866604948159389*^9, 3.866605027608502*^9, 3.8666050797060127`*^9, 
   3.8666051270238*^9, 3.866605306478503*^9, 3.866605351838655*^9, 
   3.866605404161014*^9, 3.866613913674348*^9, 3.8666139705107*^9, 
   3.8666257065730343`*^9, 3.86662574134376*^9, 3.8666257777013702`*^9, 
   3.866625909825324*^9, 3.866625956361196*^9, 3.866626070645979*^9, 
   3.866626120217812*^9, {3.866634635480035*^9, 3.8666346577282267`*^9}, 
   3.866634835967009*^9, 3.8666348822118883`*^9, 3.866635025677926*^9, 
   3.866800397397952*^9, 3.866802676908917*^9, 3.866862761074505*^9, 
   3.866863136267887*^9, 3.866863751771923*^9, 3.86686395636874*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"085c8029-e98b-4c10-979d-0ee169ebb378"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.866800415776203*^9, 
  3.8668004242321167`*^9}},ExpressionUUID->"fe3385d8-1e0f-4395-9df9-\
244ad13d435b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedSoftNet"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hnf", "[", 
         RowBox[{"Harden", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.86680194442417*^9, 3.866801959585536*^9}, 
   3.8668020564125566`*^9, 3.8668021880135727`*^9, 3.86680224094079*^9, {
   3.866862414056994*^9, 3.866862435758893*^9}, 3.8668631732132587`*^9, 
   3.866863454099498*^9, {3.866863887767027*^9, 3.866863891596203*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"c923db83-6a37-4dff-b538-3d1c876e6342"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 49.75%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "586"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "565"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "440"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "409"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.866863904017839*^9, 3.866863961760541*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"697f6924-11d3-4e19-b54e-3e74a67ae593"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpaceSaving", "[", "trainedSoftNet", "]"}]], "Input",
 CellChangeTimes->{{3.8668642342489862`*^9, 3.8668642483212557`*^9}, {
  3.866864301980486*^9, 3.866864302505608*^9}, {3.866864406655108*^9, 
  3.86686453684363*^9}, {3.866864775311109*^9, 3.866864778850369*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"0d96031a-fb3e-4195-9bbc-f328b3fc8e6f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Soft net size = 27.232 kilobytes\"\>"},
    {"\<\"Hard net size = 0.851 kilobytes\"\>"},
    {"\<\"Saving factor = 32.\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866864249947411*^9, 3.8668643028534403`*^9, 3.866864414235868*^9, 
   3.866864445660204*^9, {3.866864494244638*^9, 3.866864537301672*^9}, 
   3.866864595971245*^9, 3.866864779447701*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"08f6e673-c99f-4bc0-bef2-a2fa3c674403"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Learn MNIST", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.865071137544158*^9, 
  3.865071139735918*^9}},ExpressionUUID->"ab35440a-cabc-4736-a5ac-\
e07454ebd2a0"],

Cell[CellGroupData[{

Cell["Generate training data", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 
  3.864793759486944*^9}},ExpressionUUID->"7a765571-11e0-47e7-bd2b-\
e5df28d2018f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ConvertBinaryStringToList", "[", "s_String", "]"}], ":=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"\"\<{\>\"", "<>", 
    RowBox[{"StringInsert", "[", 
     RowBox[{"s", ",", "\"\<,\>\"", ",", 
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"StringLength", "[", "s", "]"}], "]"}], ",", "1"}], "]"}]}], 
     "]"}], "<>", "\"\<}\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConvertBinaryStringToImageData", "[", 
   RowBox[{"s_String", ",", 
    RowBox[{"{", 
     RowBox[{"width_", ",", "height_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{
    RowBox[{"ConvertBinaryStringToList", "[", "s", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"width", ",", "height"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MNISTExample", "[", "example_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Soften", "/@", 
     RowBox[{"ConvertBinaryStringToList", "[", 
      RowBox[{"First", "[", "example", "]"}], "]"}]}], ")"}], "->", 
   RowBox[{"Last", "[", "example", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MNISTImageExample", "[", 
   RowBox[{"example_", ",", "w_", ",", "h_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{"ConvertBinaryStringToImageData", "[", 
      RowBox[{
       RowBox[{"First", "[", "example", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"w", ",", "h"}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}], "->", 
   RowBox[{"Last", "[", "example", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TargetClass", "[", 
   RowBox[{"class_", ",", "numClasses_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "==", 
       RowBox[{
        RowBox[{"ToExpression", "[", "class", "]"}], "+", "1"}]}], ",", "1", 
      ",", "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "numClasses"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.777544428958893*^9, 3.777544449223729*^9}, {
  3.785053289286406*^9, 3.7850533015825367`*^9}, {3.865071356234124*^9, 
  3.865071368364665*^9}, {3.865072537508193*^9, 3.865072583145698*^9}, {
  3.8650727653223124`*^9, 3.865072769389474*^9}, {3.865072855048724*^9, 
  3.865072873389448*^9}, {3.865074216205205*^9, 3.865074217943268*^9}, {
  3.8650742607422447`*^9, 3.865074263919525*^9}, {3.865074303282633*^9, 
  3.865074304334848*^9}, {3.8655763816838627`*^9, 3.86557638296766*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"32fda3b9-b853-499b-9d93-f6cc5b2d03d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"first2Digits", "=", "12665"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"first4Digits", "=", "24754"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"StringSplit", "/@", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NotebookDirectory", "[", "]"}], ",", 
            "\"\<data/mnist_data.csv\>\""}], "}"}], "]"}], "]"}], ",", 
        "first4Digits"}], "]"}]}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numClasses", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Last", "/@", "data"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "#", "]"}], "->", 
       RowBox[{"TargetClass", "[", 
        RowBox[{
         RowBox[{"Last", "[", "#", "]"}], ",", "numClasses"}], "]"}]}], "&"}],
      ",", "data"}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7775425649316273`*^9, 3.7775427188349257`*^9}, 
   3.777542765885343*^9, {3.777542891883361*^9, 3.777542895266905*^9}, {
   3.777548901853368*^9, 3.777548904429871*^9}, 3.777948863055695*^9, {
   3.785053289286778*^9, 3.785053301583352*^9}, {3.8004618114961*^9, 
   3.8004618132862787`*^9}, {3.865071380522399*^9, 3.865071389330105*^9}, {
   3.865071506398736*^9, 3.86507150965482*^9}, {3.865072153294796*^9, 
   3.865072153439651*^9}, {3.8650725203995028`*^9, 3.8650725250999613`*^9}, {
   3.865072598133906*^9, 3.8650726430451927`*^9}, {3.8650730651631327`*^9, 
   3.865073065309772*^9}, {3.8650737788630743`*^9, 3.8650737799185247`*^9}, {
   3.8650741657549047`*^9, 3.865074192750668*^9}, {3.865084557601783*^9, 
   3.865084557727841*^9}, {3.865096614528236*^9, 3.865096614722213*^9}, {
   3.865096960213298*^9, 3.865096961035049*^9}, {3.8654249749431143`*^9, 
   3.865424975283492*^9}, {3.865425652554762*^9, 3.865425654875148*^9}, {
   3.8655942181851254`*^9, 3.865594218683255*^9}, {3.865603687795599*^9, 
   3.8656036911095867`*^9}, {3.865654143595076*^9, 3.865654143741383*^9}, {
   3.8656591261724367`*^9, 3.865659126260923*^9}, {3.86586673745885*^9, 
   3.865866737630937*^9}, {3.865868704726523*^9, 3.865868705092907*^9}, {
   3.865935589729813*^9, 3.8659355902888536`*^9}, {3.8659425359146223`*^9, 
   3.865942536047833*^9}, {3.8660004673198977`*^9, 3.866000467920465*^9}, {
   3.866008550651922*^9, 3.866008550802231*^9}, {3.8662143357376127`*^9, 
   3.8662143358729973`*^9}, {3.866214933669497*^9, 3.866214933766831*^9}, {
   3.866550101779276*^9, 3.866550102242258*^9}, {3.8665523509986134`*^9, 
   3.866552351965906*^9}, {3.866552870119151*^9, 3.866552872331809*^9}, {
   3.866553040839672*^9, 3.8665530794623127`*^9}, {3.866553478936655*^9, 
   3.866553479983959*^9}, {3.8665536320416937`*^9, 3.866553632487995*^9}, {
   3.8666350940570993`*^9, 3.866635094215591*^9}, {3.866635327817191*^9, 
   3.8666353279906816`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"e694fd5c-31a2-4c80-9a3a-3cbb8af0f0d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MNISTImageExample", "[", 
    RowBox[{"#", ",", "8", ",", "8"}], "]"}], "&"}], "/@", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"data", ",", "8"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.777543319132126*^9, 3.7775433399263563`*^9}, {
  3.777543441494869*^9, 3.7775434634803457`*^9}, {3.777543498428781*^9, 
  3.777543511470965*^9}, {3.777543585019107*^9, 3.7775436179526777`*^9}, {
  3.77754392590884*^9, 3.777543943146496*^9}, {3.777544227856449*^9, 
  3.777544239080214*^9}, {3.777544492370078*^9, 3.777544497694388*^9}, {
  3.7775489467068253`*^9, 3.777548973388241*^9}, {3.777948786010269*^9, 
  3.777948796326861*^9}, {3.785053289286827*^9, 3.78505330158349*^9}, {
  3.865071727267377*^9, 3.865071727490307*^9}, {3.865072163300022*^9, 
  3.865072163779492*^9}, {3.8650737878134604`*^9, 3.865073795253149*^9}, {
  3.865424992846648*^9, 3.865424993398445*^9}, {3.8654256604637814`*^9, 
  3.865425660711246*^9}, {3.866552364829324*^9, 3.8665523991802883`*^9}, {
  3.866553053990242*^9, 3.866553085837536*^9}, {3.866553486542989*^9, 
  3.866553487982315*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ec0b1266-533d-40d4-a949-ccce78250c06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 0., 
        1., 1., 1., 1.}, {1., 1., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 0., 1., 1., 0., 1., 1.}, {1., 0., 1., 1., 
        1., 1., 1., 1.}, {1., 0., 1., 1., 1., 1., 0., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 0., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 1., 1., 1., 0., 0., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 0., 0., 0., 0., 1., 1.}, {1., 1., 0., 0., 
        1., 1., 1., 1.}, {1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 0., 0., 1., 0., 1., 1.}, {1., 1., 0., 1., 
        1., 0., 1., 1.}, {1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 0., 1., 1.}, {1., 1., 1., 0., 1., 0., 1., 1.}, {1., 1., 0., 1., 
        1., 1., 0., 1.}, {1., 0., 1., 1., 1., 1., 0., 1.}, {1., 0., 1., 1., 
        0., 0., 1., 1.}, {1., 1., 0., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 0., 0., 0., 0., 1., 1.}, {1., 1., 0., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 1., 1., 1., 0., 1.}, {1., 1., 0., 1., 
        1., 0., 1., 1.}, {1., 1., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 0., 1., 1.}, {1., 1., 1., 1., 1., 1., 0., 1.}, {1., 1., 1., 0., 
        1., 0., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        0., 1., 1., 1.}, {1., 0., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["Real32",{{1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 1., 0., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}, {1., 1., 1., 0., 1., 1., 1., 1.}, {1., 1., 1., 0., 
        1., 1., 1., 1.}, {1., 1., 1., 1., 1., 1., 1., 1.}, {1., 1., 1., 1., 
        1., 1., 1., 1.}}], {{0, 8.}, {8., 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real32", ColorSpace -> Automatic, Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Tiny,
     ImageSizeRaw->{8., 8.},
     PlotRange->{{0, 8.}, {0, 8.}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}]}], "}"}]], "Output",\

 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.865071516233152*^9, 3.865071727764624*^9, {3.865072157992421*^9, 
   3.865072164263248*^9}, 3.8650726482204933`*^9, {3.8650728081429157`*^9, 
   3.865072815412401*^9}, {3.8650728584132767`*^9, 3.8650728763860283`*^9}, 
   3.865073067508193*^9, {3.865073789904008*^9, 3.865073795522964*^9}, {
   3.865074175245178*^9, 3.8650742213114853`*^9}, 3.8650742663256474`*^9, 
   3.8650743064252872`*^9, 3.865075757486204*^9, 3.865080599940412*^9, 
   3.865083621171164*^9, {3.865084563801412*^9, 3.865084592428769*^9}, 
   3.8650856590126333`*^9, 3.8650875182866573`*^9, 3.865091000291559*^9, 
   3.865093056070513*^9, 3.865094694162876*^9, 3.865096615969627*^9, 
   3.86509696259997*^9, 3.865139954249607*^9, 3.865141786671627*^9, 
   3.8651521367013702`*^9, 3.865423552909775*^9, {3.865424979404682*^9, 
   3.8654249938473787`*^9}, {3.865425656479721*^9, 3.8654256609377003`*^9}, 
   3.8654809208707523`*^9, 3.865482033395006*^9, 3.8655011685646477`*^9, {
   3.865576369155878*^9, 3.8655763849362507`*^9}, 3.8655934591865187`*^9, 
   3.865594225086277*^9, 3.865603693195478*^9, 3.865654145596838*^9, 
   3.8656591284289303`*^9, 3.865663486762136*^9, {3.865675843854004*^9, 
   3.8656758480254383`*^9}, 3.865680692292922*^9, 3.865785373725032*^9, 
   3.865838237420817*^9, 3.8658644284650097`*^9, 3.865866739205634*^9, 
   3.865868706936183*^9, 3.86593559197605*^9, 3.8659425376483192`*^9, 
   3.866000471570891*^9, 3.8660023671723824`*^9, 3.866008552558271*^9, 
   3.866083736145451*^9, 3.866209093677637*^9, 3.866209596724132*^9, 
   3.866214336990232*^9, 3.866214934859021*^9, 3.866257446329878*^9, 
   3.866258666676694*^9, 3.866285701938628*^9, 3.866300727645417*^9, 
   3.866350581558517*^9, 3.8663715089115543`*^9, 3.8664377020714197`*^9, 
   3.866512491986065*^9, 3.866527204842803*^9, 3.866550105097583*^9, {
   3.866552357229663*^9, 3.866552399674362*^9}, 3.8665527340777407`*^9, 
   3.866552874933894*^9, {3.866553049548827*^9, 3.866553086238255*^9}, {
   3.8665534827091827`*^9, 3.866553488434558*^9}, 3.866553534951789*^9, 
   3.866553633744459*^9, 3.866600459846939*^9, 3.866602523014666*^9, 
   3.866614026941433*^9, 3.8666262010362787`*^9, 3.866635097265691*^9, 
   3.8666353295523643`*^9, 3.86671287784385*^9, 3.8668648189771833`*^9, 
   3.86686557723407*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"5321b087-23ad-4683-86ee-2531a82865f3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{"MNISTExample", "/@", "data"}], ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.8", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8650715619235697`*^9, 3.865071567650784*^9}, {
  3.8650716393413363`*^9, 3.865071641123829*^9}, {3.865075763152564*^9, 
  3.865075763445953*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"5f23d7f5-27d3-4f48-9a93-1389f19dc351"]
}, Closed]],

Cell[CellGroupData[{

Cell["Standard neural net", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602720354347*^9, 
  3.866602722250537*^9}, {3.866867763326234*^9, 
  3.866867766054191*^9}},ExpressionUUID->"fc68a4bd-9bf9-485f-9eed-\
cf7b8ff25567"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConvertDataToClasses", "[", "data_", "]"}], ":=", 
  RowBox[{"MapAt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "]"}], "]"}], "-", "1"}], "&"}], ",",
     "data", ",", 
    RowBox[{"{", 
     RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8668693365321074`*^9, 3.8668693867886343`*^9}, {
  3.8668694253582287`*^9, 3.8668694957654448`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"afc9d31b-db6d-45ca-8b6b-e25b97a5ac3c"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602724930586*^9, 
  3.866602725762454*^9}},ExpressionUUID->"9502650c-75ff-4479-bca2-\
f7b8b0c4641d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", "numClasses"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NetChain", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
        "300", ",", "LogisticSigmoid", ",", "\[IndentingNewLine]", 
         "classificationLayerSize", ",", "LogisticSigmoid", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<Output\>\"", "->", 
        RowBox[{"NetDecoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Class\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<0\>\"", ",", "\"\<1\>\"", ",", "\"\<2\>\"", ",", 
             "\"\<3\>\""}], "}"}]}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8668677843113413`*^9, 3.866867810879756*^9}, {
  3.866867866054343*^9, 3.866867918755149*^9}, {3.866867993454722*^9, 
  3.86686799965574*^9}, {3.8668681258788567`*^9, 3.86686812619947*^9}, {
  3.8668689240969467`*^9, 3.866868981929222*^9}, {3.866869073179029*^9, 
  3.8668690742445583`*^9}, {3.866869111667173*^9, 3.8668691123403177`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"5fefb9b9-6e54-460e-b544-a43d033404b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866180932479144*^9, 3.866180933335601*^9}, {
  3.866260506971014*^9, 3.8662605102109118`*^9}, {3.866262223194878*^9, 
  3.866262223474766*^9}, {3.8666027494425793`*^9, 
  3.866602750730301*^9}},ExpressionUUID->"d41cd2db-8088-4737-b918-\
a082c6448deb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", 
     RowBox[{"ConvertDataToClasses", "[", "trainData", "]"}], ",", "All", ",",
      "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ConvertDataToClasses", "[", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"testData", ",", 
           RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "2000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866262230733412*^9, 3.866262232700974*^9}, {
   3.866262747191399*^9, 3.866262755095587*^9}, {3.866263687522623*^9, 
   3.866263691522341*^9}, {3.866272907421722*^9, 3.866272908705574*^9}, {
   3.866274679974001*^9, 3.866274683777981*^9}, {3.866275126894273*^9, 
   3.866275130882132*^9}, {3.866275621030303*^9, 3.86627562449095*^9}, {
   3.866275800963348*^9, 3.866275804851942*^9}, {3.866278286918571*^9, 
   3.866278290408846*^9}, {3.866279939718389*^9, 3.8662799438283052`*^9}, {
   3.8662825835076027`*^9, 3.866282587086446*^9}, {3.8662848978232517`*^9, 
   3.8662849013340178`*^9}, {3.866301199025255*^9, 3.866301208705173*^9}, {
   3.866302091405136*^9, 3.866302093072084*^9}, {3.8663022330606956`*^9, 
   3.8663022743807373`*^9}, {3.866303190918262*^9, 3.8663031961042967`*^9}, {
   3.8663508996403513`*^9, 3.866350903983953*^9}, {3.8663558607588453`*^9, 
   3.866355860917651*^9}, {3.86637013313169*^9, 3.866370138430928*^9}, {
   3.866370237003203*^9, 3.866370239455555*^9}, {3.8663703291644793`*^9, 
   3.866370333111907*^9}, {3.866370363265703*^9, 3.866370363711856*^9}, {
   3.8663720431119947`*^9, 3.866372048852154*^9}, {3.866372163198892*^9, 
   3.8663721862104397`*^9}, 3.8663723957836103`*^9, {3.866372460806899*^9, 
   3.866372466981298*^9}, {3.8663728465397882`*^9, 3.866372846690668*^9}, {
   3.866439863015705*^9, 3.866439889076521*^9}, {3.866444399919945*^9, 
   3.866444403398275*^9}, 3.866445596437694*^9, 3.866445994629862*^9, {
   3.866446077093233*^9, 3.8664460772227592`*^9}, {3.866514058957122*^9, 
   3.866514061965129*^9}, {3.866514093672724*^9, 3.8665140946276417`*^9}, 
   3.866514530731886*^9, {3.866514784096607*^9, 3.866514784235477*^9}, {
   3.8665148543229303`*^9, 3.86651485485518*^9}, {3.866517197949828*^9, 
   3.866517203967832*^9}, 3.866517357579501*^9, 3.8665174374755917`*^9, 
   3.8665175119230967`*^9, {3.866517590284361*^9, 3.866517620168564*^9}, 
   3.8665176619240017`*^9, {3.8665179325026484`*^9, 3.8665179399815683`*^9}, {
   3.866518111910069*^9, 3.866518112233807*^9}, {3.866518521945266*^9, 
   3.866518522115803*^9}, {3.866518571201038*^9, 3.866518588328702*^9}, {
   3.866518646862028*^9, 3.866518650143523*^9}, 3.866518704027602*^9, {
   3.866519202548511*^9, 3.8665192068871107`*^9}, {3.866552934111923*^9, 
   3.866552991359269*^9}, {3.866553502473754*^9, 3.8665535030716467`*^9}, {
   3.866554417382031*^9, 3.866554420050095*^9}, {3.866554652086327*^9, 
   3.8665546522545357`*^9}, {3.86686620714637*^9, 3.866866208536282*^9}, {
   3.8668680582887163`*^9, 3.866868068787518*^9}, {3.8668684157382507`*^9, 
   3.8668684211762457`*^9}, {3.8668695026973*^9, 3.866869525750093*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"5e8aefb1-dfc7-4620-8212-9b7f8316e5ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.865509544459216*^9, 3.865509545362651*^9}, {3.8668654702612267`*^9, 
  3.866865471244494*^9}, {3.866868302798292*^9, 
  3.866868303806368*^9}},ExpressionUUID->"7822fb59-1347-4e85-b721-\
29a9f368ef8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{
   RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
   RowBox[{"ConvertDataToClasses", "[", "testData", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866868805817885*^9, 3.866868848976694*^9}, {
  3.866869633679126*^9, 3.8668696380935183`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"e96a481e-3ba1-4201-9c24-39f96d06cf2b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classifier method"], 
                  TextCell["Classifier method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "Net",ExpressionUUID->"54223d68-c904-4432-867b-efe13666b1cc"],
               TextCell["Net"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Number of test examples"], 
                  TextCell["Number of test examples"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "19803"},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Accuracy"], 
                  TextCell["Accuracy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"94.06", "0.17"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   94.0564560925112260747`3., 0.1680205937848181508`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                   "\"Accuracy if predicting the commonest class\"", 
                   LabelStyle -> "TextStyling"], 
                  Annotation[#, "Accuracy if predicting the commonest class", 
                   "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"26.93", "0.32"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   26.9302630914507901139`3., 0.3152350808441993779`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Geometric mean of probabilities"], 
                  TextCell["Geometric mean of probabilities"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.4479898174134299693`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0006489707863904515`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.4466918758406490664`3.",
                   "\", \"", "0.4492877589862108723`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.4466918758406490664`3., 
                  ", ", 0.4492877589862108723`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Mean cross entropy"], 
                  TextCell["Mean cross entropy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.8029847758133388247`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0014486279245307099`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.8000875199642774049`3.",
                   "\", \"", "0.8058820316624002444`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.8000875199642774049`3., 
                  ", ", 0.8058820316624002444`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"2.7`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"171.`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}], "examples per millisecond", 
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              ItemBox[
               GraphicsBox[RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAI69oqxyzu0/ouz56FWA6z+x
18n56ojkP9GYfhidFe0/hbTDqKWw6D9vGqORRjjbP4g1zCRX6Ow/0cDSWKnq
5z8aZnS+ki3YP4pxtXp/Ue4/N5n/SJQ43j88r8NQ+W5lPxSjTa6oie0/LcAi
RmZ86j9qUOQ9zeThPzdOlKdDrO0/QpijDir/6j/+u8Wj7jjjP6783KvR4O0/
afoYpnEY3z9Pl+k+IAtrP5cWu12mPu0/EH1YqvVg6T+n3fyvGQfeP8/ipv2I
gO4/glF8/Uch7j86sJC1Tl/rPwAAAAAAAPA/4XoUrkfh2j8AAAAAAAAAAP4O
lbdr8O0/KP86zLUA7D9yS9/H1NblPzKtwMOGZu0/dsPsk6T36T/6QC6EfYvg
P4EZwGqDw+4/ZA8mMg9W3T/AmNeGk4NfPwbP/RgxXe4/8RIxVLqb7T/Y+Otz
7APqP29gh8JkEu4/rhF8rxWB7D80v/SVviTnPx2STKHyNe4/GpLcT28H7T+G
HohfM4LoP23hx5w=
                 "], {{0, 0}, {4, 4}}, {0, 1}],
                Epilog->{{
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4514", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4514", "\" examples of \"", "0", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9612436115843271`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.9645299145299145`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9628839590443686`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4514, " examples of ", 0, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9612436115843271}], 
                    Row[{"Recall = ", 0.9645299145299145}], 
                    Row[{"FScore = ", 0.9628839590443686}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "1", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.00042589437819420784`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.0003750234389649353`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{2, " examples of ", 1, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.00042589437819420784`}], 
                    Row[{"Row fraction = ", 0.0003750234389649353}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["95", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "95", "\" examples of \"", "2", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.02022998296422487`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.019689119170984457`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{95, " examples of ", 2, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.02022998296422487}], 
                    Row[{"Row fraction = ", 0.019689119170984457`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["85", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "85", "\" examples of \"", "3", "\" misclassified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.018100511073253833`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.017119838872104734`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{85, " examples of ", 3, " misclassified as ", 0}], 
                    Row[{"Column fraction = ", 0.018100511073253833`}], 
                    Row[{"Row fraction = ", 0.017119838872104734`}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["16", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" examples of \"", "0", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.002952574275696623`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.003418803418803419`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " examples of ", 0, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.002952574275696623}], 
                    Row[{"Row fraction = ", 0.003418803418803419}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["5140", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5140", "\" examples of \"", "1", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9485144860675402`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9638102381398838`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9561011904761906`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5140, " examples of ", 1, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9485144860675402}], 
                    Row[{"Recall = ", 0.9638102381398838}], 
                    Row[{"FScore = ", 0.9561011904761906}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["88", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "88", "\" examples of \"", "2", "\" misclassified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.016239158516331426`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.018238341968911918`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{88, " examples of ", 2, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.016239158516331426`}], 
                    Row[{"Row fraction = ", 0.018238341968911918`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["175", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "175", "\" examples of \"", "3", "\" misclassified as \"",
                     "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.03229378114043181`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.035246727089627394`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{175, " examples of ", 3, " misclassified as ", 1}], 
                    Row[{"Column fraction = ", 0.03229378114043181}], 
                    Row[{"Row fraction = ", 0.035246727089627394`}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["83", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "83", "\" examples of \"", "0", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.017092257001647446`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.017735042735042734`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{83, " examples of ", 0, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.017092257001647446`}], 
                    Row[{"Row fraction = ", 0.017735042735042734`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["84", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "84", "\" examples of \"", "1", "\" misclassified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.01729818780889621`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.015750984436527282`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{84, " examples of ", 1, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.01729818780889621}], 
                    Row[{"Row fraction = ", 0.015750984436527282`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4478", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4478", "\" examples of \"", "2", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9221581548599671`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9280829015544041`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9251110422477017`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4478, " examples of ", 2, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9221581548599671}], 
                    Row[{"Recall = ", 0.9280829015544041}], 
                    Row[{"FScore = ", 0.9251110422477017}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["211", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "211", "\" examples of \"", "3", "\" misclassified as \"",
                     "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.04345140032948929`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.042497482376636454`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{211, " examples of ", 3, " misclassified as ", 2}], 
                    Row[{"Column fraction = ", 0.04345140032948929}], 
                    Row[{"Row fraction = ", 0.042497482376636454`}]}], 
                    "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["67", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "67", "\" examples of \"", "0", "\" misclassified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.013865894039735099`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.014316239316239316`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{67, " examples of ", 0, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.013865894039735099`}], 
                    Row[{"Row fraction = ", 0.014316239316239316`}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["107", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "107", "\" examples of \"", "1", "\" misclassified as \"",
                     "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.022144039735099336`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.02006375398462404`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{107, " examples of ", 1, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.022144039735099336`}], 
                    Row[{"Row fraction = ", 0.02006375398462404}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["164", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "164", "\" examples of \"", "2", "\" misclassified as \"",
                     "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.03394039735099338`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.03398963730569948`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{164, " examples of ", 2, " misclassified as ", 3}], 
                    Row[{"Column fraction = ", 0.03394039735099338}], 
                    Row[{"Row fraction = ", 0.03398963730569948}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["4494", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4494", "\" examples of \"", "3", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9300496688741722`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9051359516616314`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9174237011329999`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4494, " examples of ", 3, " correctly classified"}], 
                    
                    Row[{"Precision = ", 0.9300496688741722}], 
                    Row[{"Recall = ", 0.9051359516616314}], 
                    Row[{"FScore = ", 0.9174237011329999}]}], "Tooltip"]& ]}, 
                  
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4680", "\" example\"", "\"s\"", "\" of class \"", "0"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9645299145299145`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4680, " example", "s", " of class ", 0}], 
                    Row[{"Recall = ", 0.9645299145299145}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5333", "\" example\"", "\"s\"", "\" of class \"", "1"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9638102381398838`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5333, " example", "s", " of class ", 1}], 
                    Row[{"Recall = ", 0.9638102381398838}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4825", "\" example\"", "\"s\"", "\" of class \"", "2"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9280829015544041`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4825, " example", "s", " of class ", 2}], 
                    Row[{"Recall = ", 0.9280829015544041}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4965", "\" example\"", "\"s\"", "\" of class \"", "3"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9051359516616314`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4965, " example", "s", " of class ", 3}], 
                    Row[{"Recall = ", 0.9051359516616314}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4696", "\" example\"", "\"s\"", "\" classified as \"", 
                    "0"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9612436115843271`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4696, " example", "s", " classified as ", 0}], 
                    Row[{"Precision = ", 0.9612436115843271}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5419", "\" example\"", "\"s\"", "\" classified as \"", 
                    "1"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9485144860675402`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5419, " example", "s", " classified as ", 1}], 
                    Row[{"Precision = ", 0.9485144860675402}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4856", "\" example\"", "\"s\"", "\" classified as \"", 
                    "2"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9221581548599671`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4856, " example", "s", " classified as ", 2}], 
                    Row[{"Precision = ", 0.9221581548599671}]}], 
                    "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "4832", "\" example\"", "\"s\"", "\" classified as \"", 
                    "3"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9300496688741722`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{4832, " example", "s", " classified as ", 3}], 
                    Row[{"Precision = ", 0.9300496688741722}]}], 
                    "Tooltip"]& ]},
                Frame->True,
                FrameLabel->{
                  FormBox["\"predicted class\"", TraditionalForm], 
                  FormBox["\"actual class\"", TraditionalForm]},
                FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {
                    2.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {
                    1.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {
                    0.5, 
                    FormBox[
                    RotationBox["3", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["4680", TraditionalForm]}, {2.5, 
                    FormBox["5333", TraditionalForm]}, {1.5, 
                    FormBox["4825", TraditionalForm]}, {0.5, 
                    FormBox["4965", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["4696", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["5419", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["4856", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["4832", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["0", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["1", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["2", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["3", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                FrameTicksStyle->13,
                GridLinesStyle->Directive[
                  GrayLevel[0.5, 0.4]],
                ImageSize->212.4,
                
                Method->{
                 "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                  Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                PlotRangePadding->None],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{{3.866868827326494*^9, 3.866868851119316*^9}, {
  3.866869626721004*^9, 3.8668696415126762`*^9}},
 CellLabel->
  "Out[110]=",ExpressionUUID->"7bf57373-2680-4c0e-988d-6afc45cab670"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Normal", "/@", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"NetExtract", "[", 
          RowBox[{
           RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"All", ",", "\"\<Weights\>\""}], "}"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MissingQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], "]"}], 
     "]"}], "*", 
    RowBox[{"32.0", "/", "8000"}]}], ",", "\"\<kilobytes\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8668697251272497`*^9, 3.8668697634961843`*^9}, {
  3.8668698034541607`*^9, 3.866869916422731*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"ab7dbe79-e09e-4650-a090-5ccdb3b423b3"],

Cell[BoxData[
 TemplateBox[{"81.60000000000001`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.866869725693577*^9, 3.866869761437018*^9}, {
   3.866869807796962*^9, 3.866869885511305*^9}, 3.866869917251191*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"8e87a1d1-a94d-4e73-a5cb-aa6077add3b1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hard neural logic", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602720354347*^9, 
  3.866602722250537*^9}},ExpressionUUID->"5330bb32-e656-4b8b-bb36-\
16ab02f0840f"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866260536034795*^9, 3.8662605363067417`*^9}, {3.866602724930586*^9, 
  3.866602725762454*^9}},ExpressionUUID->"9ccf4bd6-05a1-49f1-915f-\
95679eedaa4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"12", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"First", "[", 
            RowBox[{"First", "[", "trainData", "]"}], "]"}], "]"}], ",", 
          "300"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{"300", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralPortLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866512854091155*^9, 3.8665128815568047`*^9}, {
   3.866513103300004*^9, 3.866513116326098*^9}, {3.8665133340990458`*^9, 
   3.8665133419773703`*^9}, {3.86651391128594*^9, 3.866513915466413*^9}, {
   3.866514318655335*^9, 3.866514323501399*^9}, {3.866514602855854*^9, 
   3.866514605749691*^9}, {3.86651468027989*^9, 3.8665147385101433`*^9}, {
   3.8665168378259563`*^9, 3.866516840683816*^9}, {3.866516968713831*^9, 
   3.866516971903157*^9}, {3.8665173610656767`*^9, 3.866517372695388*^9}, 
   3.866517444884035*^9, {3.86651878744969*^9, 3.8665188117507257`*^9}, {
   3.866518954624714*^9, 3.866518969573318*^9}, {3.866520101802957*^9, 
   3.866520108575643*^9}, {3.866520188881999*^9, 3.8665202157280684`*^9}, {
   3.866520364293333*^9, 3.866520392296053*^9}, {3.86652044871375*^9, 
   3.8665204631835423`*^9}, {3.8665219880508347`*^9, 3.866522005928316*^9}, {
   3.8665272161026173`*^9, 3.8665272312695007`*^9}, {3.866527801201952*^9, 
   3.866527883631137*^9}, {3.866528045329198*^9, 3.8665280486071043`*^9}, {
   3.866528154113455*^9, 3.8665281741152687`*^9}, {3.866528447153947*^9, 
   3.866528447260316*^9}, {3.866528670002123*^9, 3.86652867583491*^9}, {
   3.86652876246611*^9, 3.86652876256351*^9}, {3.866528813858374*^9, 
   3.866528848079921*^9}, {3.866530033731058*^9, 3.866530050034823*^9}, {
   3.866532603007605*^9, 3.8665326199562283`*^9}, {3.8665328331522837`*^9, 
   3.866532845529175*^9}, {3.866532894976413*^9, 3.866532895812646*^9}, {
   3.8665329705120907`*^9, 3.866532996865466*^9}, {3.866533798129952*^9, 
   3.866533798585582*^9}, {3.866542948856092*^9, 3.866542956003662*^9}, {
   3.866543312214932*^9, 3.8665433126315613`*^9}, {3.866545711295557*^9, 
   3.866545711720436*^9}, {3.866546071686404*^9, 3.866546081040039*^9}, {
   3.866547900239717*^9, 3.8665479093644657`*^9}, {3.866549693552167*^9, 
   3.866549704088811*^9}, {3.866550126984569*^9, 3.8665501393456163`*^9}, {
   3.866551310563048*^9, 3.866551316716016*^9}, {3.866552552251585*^9, 
   3.866552552469812*^9}, {3.866552612077286*^9, 3.866552621902178*^9}, {
   3.86655297295109*^9, 3.8665530085584908`*^9}, {3.866553815227034*^9, 
   3.866553831744128*^9}, {3.866554274483659*^9, 3.8665542884172983`*^9}, {
   3.866554409228067*^9, 3.866554412577661*^9}, {3.866554466780363*^9, 
   3.866554467185257*^9}, {3.866554546724543*^9, 3.866554547081894*^9}, {
   3.866554637927086*^9, 3.866554643213908*^9}, {3.8665551202789803`*^9, 
   3.866555125450521*^9}, {3.866555219318622*^9, 3.8665552411393957`*^9}, {
   3.866555370545534*^9, 3.866555374243248*^9}, {3.866600476190877*^9, 
   3.866600520811289*^9}, {3.866600851629229*^9, 3.8666008545843487`*^9}, {
   3.866601173213505*^9, 3.866601184697352*^9}, {3.866602823213896*^9, 
   3.866602823651602*^9}, {3.866624063636963*^9, 3.866624070070056*^9}, {
   3.866864848820673*^9, 3.8668649018442097`*^9}, 3.8668649498986273`*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"feba2f53-f4f5-43e6-a86d-fb7cc5e96658"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"12", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"First", "[", 
            RowBox[{"First", "[", "trainData", "]"}], "]"}], "]"}], ",", 
          "300"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"300", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralPortLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866614043740147*^9, 3.866614059419475*^9}, {
   3.866614190829136*^9, 3.8666141968514433`*^9}, {3.866614273950245*^9, 
   3.866614278499329*^9}, {3.866614530778089*^9, 3.866614549428873*^9}, {
   3.866614803501232*^9, 3.866614803899014*^9}, {3.866615155141581*^9, 
   3.8666151742512083`*^9}, {3.866615336990378*^9, 3.8666153564905977`*^9}, {
   3.8666155953979273`*^9, 3.8666156011151123`*^9}, {3.866615669316122*^9, 
   3.866615680124647*^9}, {3.866615967248592*^9, 3.866615999692507*^9}, {
   3.86661706753056*^9, 3.8666171261627617`*^9}, {3.8666205700552588`*^9, 
   3.866620577491592*^9}, 3.86662330258639*^9, {3.8666237456239367`*^9, 
   3.866623752562409*^9}, 3.866623873531086*^9, {3.866623962136072*^9, 
   3.866623962541971*^9}, {3.866623999422729*^9, 3.866624020958702*^9}, 
   3.8666245872835913`*^9, {3.866625081754253*^9, 3.866625088886717*^9}, {
   3.8666253816059103`*^9, 3.866625381671921*^9}, {3.8666256340644712`*^9, 
   3.8666256351363153`*^9}, {3.86662623703862*^9, 3.8666262383268423`*^9}, {
   3.866626438031022*^9, 3.86662645240309*^9}, {3.866626685496241*^9, 
   3.866626685771852*^9}, {3.866864856428698*^9, 3.866864907580008*^9}, 
   3.866864955388526*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"923f7933-891f-49a3-bbf5-d8f8183fe2d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"softNet", "=", 
  RowBox[{"AppendHardClassificationLoss", "[", "net", "]"}]}]], "Input",
 CellChangeTimes->{{3.866020485648757*^9, 3.866020486758964*^9}, {
   3.8660206133758917`*^9, 3.86602061576938*^9}, {3.866021594138579*^9, 
   3.866021622648958*^9}, {3.86602221641733*^9, 3.866022259472351*^9}, {
   3.86602506519114*^9, 3.8660250652828293`*^9}, {3.866027283063545*^9, 
   3.866027305459503*^9}, {3.866027571359556*^9, 3.866027577807056*^9}, {
   3.866028577017147*^9, 3.866028577337102*^9}, {3.866028739939226*^9, 
   3.866028740417481*^9}, {3.866038386270308*^9, 3.866038393509417*^9}, {
   3.866038426793558*^9, 3.866038432549663*^9}, {3.866038541734429*^9, 
   3.866038552581696*^9}, {3.8660399839336977`*^9, 3.8660400476873417`*^9}, {
   3.866040086377454*^9, 3.866040113183221*^9}, {3.8660842202209263`*^9, 
   3.8660842234441147`*^9}, {3.866084729086014*^9, 3.8660847389004602`*^9}, {
   3.866084883181377*^9, 3.866084891034108*^9}, {3.866087944385981*^9, 
   3.866087946377273*^9}, {3.8660898129249763`*^9, 3.866089819116226*^9}, {
   3.8660918927590847`*^9, 3.866091896174137*^9}, {3.866118640249077*^9, 
   3.8661186553525763`*^9}, {3.8661697941751633`*^9, 3.86616982143332*^9}, {
   3.8661700477905827`*^9, 3.866170062053422*^9}, {3.866170430900312*^9, 
   3.866170441150339*^9}, {3.866171085971992*^9, 3.866171092538931*^9}, {
   3.8661713117235622`*^9, 3.866171323794742*^9}, {3.866172075114151*^9, 
   3.866172086385466*^9}, {3.8661726453612757`*^9, 3.8661726565682907`*^9}, {
   3.866172963402001*^9, 3.866172967303824*^9}, {3.866175492855685*^9, 
   3.86617549327916*^9}, {3.8661755786344223`*^9, 3.866175597119087*^9}, {
   3.866176135095639*^9, 3.866176139335493*^9}, {3.866176563216754*^9, 
   3.866176567303925*^9}, {3.866177234452429*^9, 3.866177240033128*^9}, {
   3.866177471626033*^9, 3.866177471849081*^9}, {3.8661781260498943`*^9, 
   3.866178174045168*^9}, {3.866179499382938*^9, 3.866179520538422*^9}, {
   3.866180308892374*^9, 3.866180328231532*^9}, {3.866180620692492*^9, 
   3.866180620811393*^9}, {3.866180727174838*^9, 3.866180728856566*^9}, {
   3.8661809278929253`*^9, 3.866180930764296*^9}, {3.866181239813146*^9, 
   3.866181242692215*^9}, {3.866184773364808*^9, 3.866184773468157*^9}, {
   3.866184929896516*^9, 3.866184931032365*^9}, {3.866185363169696*^9, 
   3.866185363420731*^9}, {3.866185838820908*^9, 3.866185842136413*^9}, {
   3.8661861874248247`*^9, 3.866186188480125*^9}, {3.86618706378515*^9, 
   3.866187066984132*^9}, {3.866209107928833*^9, 3.866209126148491*^9}, {
   3.866209156593391*^9, 3.8662091576123867`*^9}, {3.866209702848567*^9, 
   3.866209710039878*^9}, {3.866209813177039*^9, 3.866209834123746*^9}, {
   3.86621053449234*^9, 3.866210540769287*^9}, {3.866210581043235*^9, 
   3.8662105868693542`*^9}, {3.866210622339385*^9, 3.866210627545692*^9}, {
   3.866210657739574*^9, 3.8662106609137363`*^9}, {3.866210756731784*^9, 
   3.866210768609764*^9}, {3.866211193549685*^9, 3.8662112016988564`*^9}, {
   3.866211352173271*^9, 3.866211355378903*^9}, {3.8662114673335752`*^9, 
   3.866211471635058*^9}, {3.8662116682945633`*^9, 3.86621167888715*^9}, 
   3.8662117763988447`*^9, {3.866211833182128*^9, 3.8662118352832003`*^9}, {
   3.86621193783076*^9, 3.866211943219183*^9}, {3.866214069618958*^9, 
   3.866214085207219*^9}, {3.86621414917101*^9, 3.866214201293022*^9}, {
   3.866214582928615*^9, 3.866214586096209*^9}, {3.8662146462687683`*^9, 
   3.8662146535499763`*^9}, {3.866214940556902*^9, 3.866214945432839*^9}, {
   3.86625367959163*^9, 3.86625368544868*^9}, {3.8662538129344873`*^9, 
   3.866253817785205*^9}, {3.866254549496963*^9, 3.866254555093663*^9}, {
   3.8662546252320347`*^9, 3.866254645248086*^9}, {3.866254759667647*^9, 
   3.8662547607426033`*^9}, {3.866254889744342*^9, 3.8662548909149446`*^9}, {
   3.866254921233653*^9, 3.866254922151456*^9}, {3.866255111823483*^9, 
   3.866255112738577*^9}, 3.8662574558616056`*^9, {3.866257625671372*^9, 
   3.8662576360908813`*^9}, {3.866257668990629*^9, 3.866257673154139*^9}, {
   3.866258160607082*^9, 3.866258163488317*^9}, {3.866258216054822*^9, 
   3.866258216152341*^9}, {3.866258465946023*^9, 3.8662584660890408`*^9}, {
   3.8662587584666643`*^9, 3.866258758714335*^9}, {3.8662591656591253`*^9, 
   3.866259171110828*^9}, {3.8662595439403343`*^9, 3.866259575288472*^9}, {
   3.866260163911601*^9, 3.866260184078418*^9}, {3.86626215222803*^9, 
   3.8662621832516203`*^9}, {3.866263109109415*^9, 3.86626311329671*^9}, {
   3.8662634113702927`*^9, 3.866263445027198*^9}, {3.8662637295611134`*^9, 
   3.8662637341766987`*^9}, {3.8662638454628477`*^9, 3.86626384912811*^9}, {
   3.866264629557499*^9, 3.866264632526574*^9}, {3.866264756302319*^9, 
   3.866264756571878*^9}, {3.86626485570925*^9, 3.8662648604861727`*^9}, {
   3.866264906589533*^9, 3.866264909654014*^9}, {3.8662650173821917`*^9, 
   3.866265024103039*^9}, {3.866267932128647*^9, 3.866267936947571*^9}, {
   3.866272289890004*^9, 3.866272326071719*^9}, 3.866272498086396*^9, {
   3.866272605318948*^9, 3.8662726100556726`*^9}, {3.866272697696899*^9, 
   3.8662727061238422`*^9}, {3.866272804197109*^9, 3.866272807076984*^9}, {
   3.866272890576043*^9, 3.8662729018249826`*^9}, {3.866273061136441*^9, 
   3.866273079881092*^9}, {3.8662739928242073`*^9, 3.866274026656089*^9}, {
   3.866274121640194*^9, 3.86627415310497*^9}, {3.8662742538084593`*^9, 
   3.866274260924819*^9}, {3.86627447707015*^9, 3.866274491178595*^9}, {
   3.866274954835182*^9, 3.866274972215249*^9}, {3.8662751949711027`*^9, 
   3.866275214973873*^9}, {3.866275317133552*^9, 3.866275326157571*^9}, {
   3.866276341927771*^9, 3.866276342361364*^9}, {3.866276444445874*^9, 
   3.866276444758065*^9}, 3.866276574032675*^9, {3.8662774805759163`*^9, 
   3.866277486441833*^9}, {3.866277730486899*^9, 3.866277745606361*^9}, {
   3.866277812901185*^9, 3.8662778241863747`*^9}, {3.866277923447342*^9, 
   3.866277942127078*^9}, {3.866278044847097*^9, 3.866278070211129*^9}, {
   3.866278491367318*^9, 3.866278493966505*^9}, {3.866278580024693*^9, 
   3.8662785830122213`*^9}, {3.866278895153315*^9, 3.866278898232675*^9}, {
   3.866280230366321*^9, 3.86628024016776*^9}, 3.866280351079256*^9, {
   3.866280499461529*^9, 3.8662805080447283`*^9}, {3.866280639515723*^9, 
   3.8662806449211483`*^9}, {3.866280754797947*^9, 3.86628075810079*^9}, {
   3.866280876373425*^9, 3.866280889329287*^9}, 3.866281009490582*^9, {
   3.8662811039106913`*^9, 3.866281107962268*^9}, {3.866281186723476*^9, 
   3.866281191533492*^9}, {3.8662812575988626`*^9, 3.866281268830084*^9}, {
   3.8662813166116953`*^9, 3.866281325765922*^9}, {3.866282044987713*^9, 
   3.866282048676916*^9}, {3.866282148870701*^9, 3.866282152685348*^9}, {
   3.86628313823394*^9, 3.8662831431981792`*^9}, {3.866283203895447*^9, 
   3.8662832148382063`*^9}, {3.8662832951824627`*^9, 
   3.8662833056304398`*^9}, {3.866283478244402*^9, 3.866283487341878*^9}, {
   3.8662841436542883`*^9, 3.86628415025281*^9}, {3.866284940968055*^9, 
   3.866284945101494*^9}, {3.866285029031362*^9, 3.866285034053158*^9}, {
   3.866285238231142*^9, 3.8662852400450497`*^9}, {3.8662854784494677`*^9, 
   3.866285480030343*^9}, {3.8662855684494333`*^9, 3.866285589220209*^9}, {
   3.866285661897065*^9, 3.866285665049341*^9}, {3.866286012525502*^9, 
   3.866286023701212*^9}, {3.866286183975936*^9, 3.866286197019022*^9}, {
   3.866286343624745*^9, 3.8662863761838703`*^9}, {3.86628647476213*^9, 
   3.866286478513227*^9}, {3.866286583730136*^9, 3.866286589629998*^9}, {
   3.8662866316154537`*^9, 3.866286632298744*^9}, {3.866286684611227*^9, 
   3.866286694033737*^9}, {3.866286815683847*^9, 3.866286826001635*^9}, {
   3.8662869515842*^9, 3.866286957090143*^9}, {3.866287432190014*^9, 
   3.866287433732437*^9}, {3.8662875714309177`*^9, 3.866287575508819*^9}, {
   3.866287972431319*^9, 3.866287979390542*^9}, {3.8662881211610413`*^9, 
   3.866288128734665*^9}, {3.866301184432645*^9, 3.866301189032214*^9}, {
   3.866301252666163*^9, 3.866301255952261*^9}, {3.866301376402754*^9, 
   3.866301391652487*^9}, {3.866301466042976*^9, 3.866301469288639*^9}, {
   3.866301630395039*^9, 3.866301653060717*^9}, {3.866301748836125*^9, 
   3.866301755312545*^9}, {3.86630188485115*^9, 3.866301888560711*^9}, {
   3.866302280747377*^9, 3.8663022952887983`*^9}, {3.866302405795878*^9, 
   3.866302419001148*^9}, {3.866302495340143*^9, 3.866302504605687*^9}, {
   3.866350591374894*^9, 3.8663505951022243`*^9}, {3.866351142159863*^9, 
   3.866351179558625*^9}, {3.8663515938249702`*^9, 3.866351597311022*^9}, {
   3.8663516429930353`*^9, 3.866351646919097*^9}, {3.8663540899964314`*^9, 
   3.866354091250739*^9}, 3.866354227060774*^9, {3.866354342347616*^9, 
   3.866354366019519*^9}, {3.866354536533381*^9, 3.866354542835105*^9}, {
   3.866354615988611*^9, 3.866354616498942*^9}, {3.866354747316181*^9, 
   3.866354747986311*^9}, {3.866354820971937*^9, 3.866354830674176*^9}, {
   3.866354985259542*^9, 3.866355003354249*^9}, {3.866355243555305*^9, 
   3.866355280233426*^9}, {3.866355363275181*^9, 3.8663553649290257`*^9}, {
   3.866355508482728*^9, 3.8663555086333237`*^9}, {3.866355904531114*^9, 
   3.8663559105053043`*^9}, {3.866355992402801*^9, 3.866356013229351*^9}, {
   3.866356256538742*^9, 3.866356257041319*^9}, {3.866356472449071*^9, 
   3.866356473280033*^9}, {3.8663565818412313`*^9, 3.866356588441074*^9}, {
   3.866356990748909*^9, 3.866356994266841*^9}, {3.8663571204214773`*^9, 
   3.866357120574224*^9}, {3.8663572027579412`*^9, 3.8663572078996153`*^9}, {
   3.866357620436617*^9, 3.866357634688436*^9}, {3.866357667446629*^9, 
   3.866357681140574*^9}, {3.8663583040873337`*^9, 3.866358308549032*^9}, {
   3.866358702488315*^9, 3.866358710660177*^9}, {3.866358792502235*^9, 
   3.866358792643732*^9}, {3.8663588650968037`*^9, 3.866358870370079*^9}, {
   3.8663590601050797`*^9, 3.866359061311141*^9}, {3.866359100825281*^9, 
   3.8663591032317047`*^9}, {3.866360392667655*^9, 3.866360402393593*^9}, {
   3.866360446451545*^9, 3.866360454122822*^9}, {3.866360518763679*^9, 
   3.866360523813664*^9}, {3.8663605658118258`*^9, 3.866360586933572*^9}, {
   3.866360874844895*^9, 3.866360875286996*^9}, {3.8663609358459*^9, 
   3.866360946523975*^9}, {3.8663629695673723`*^9, 3.8663629719826107`*^9}, {
   3.8663639844553833`*^9, 3.8663639851026163`*^9}, {3.866364664263899*^9, 
   3.866364667805708*^9}, {3.8663647416864157`*^9, 3.866364751498241*^9}, {
   3.8663648173209887`*^9, 3.8663648239090853`*^9}, {3.866364861552744*^9, 
   3.866364866359233*^9}, {3.866364911593669*^9, 3.866364912091476*^9}, {
   3.8663650443606586`*^9, 3.8663650452161922`*^9}, {3.866365512692107*^9, 
   3.866365515810193*^9}, 3.866365740980801*^9, {3.866366124781304*^9, 
   3.866366128103511*^9}, {3.86636615827591*^9, 3.866366161795991*^9}, 
   3.8663675572465467`*^9, {3.8663679823247623`*^9, 3.8663679840072737`*^9}, {
   3.8663685724947968`*^9, 3.866368575523563*^9}, {3.866368617885765*^9, 
   3.866368630439355*^9}, {3.8663688420628223`*^9, 3.866368846739706*^9}, {
   3.866368921365861*^9, 3.866368935403892*^9}, {3.866368992805874*^9, 
   3.8663689939334173`*^9}, {3.8663690430938*^9, 3.8663690474648046`*^9}, {
   3.866369083709838*^9, 3.8663691118719187`*^9}, {3.866369202398569*^9, 
   3.866369214195849*^9}, {3.866369334334588*^9, 3.866369336388123*^9}, {
   3.866369454951181*^9, 3.8663694569323397`*^9}, {3.866369515406219*^9, 
   3.866369518628167*^9}, {3.8663703695855513`*^9, 3.8663703750077*^9}, {
   3.8663705385538683`*^9, 3.866370541048525*^9}, {3.866370586394085*^9, 
   3.866370607876096*^9}, {3.8663707547717*^9, 3.866370757696903*^9}, {
   3.866370926163419*^9, 3.866370929489147*^9}, {3.866371042659484*^9, 
   3.8663710475373373`*^9}, {3.866371595734161*^9, 3.866371595814637*^9}, {
   3.866371630486404*^9, 3.866371630623527*^9}, {3.866371683122916*^9, 
   3.866371701147089*^9}, {3.866371789324903*^9, 3.866371822547234*^9}, {
   3.8663718525974607`*^9, 3.8663718606429367`*^9}, {3.866371974165319*^9, 
   3.866371979075355*^9}, {3.866372122293806*^9, 3.8663721296757917`*^9}, {
   3.866372551518608*^9, 3.866372561132722*^9}, {3.866372627211433*^9, 
   3.866372636080841*^9}, {3.8663728112322397`*^9, 3.866372812994047*^9}, {
   3.866372895895451*^9, 3.866372901477323*^9}, {3.8664377149946833`*^9, 
   3.8664377176580143`*^9}, {3.86643884019552*^9, 3.86643884333634*^9}, {
   3.866438919186672*^9, 3.866438921864346*^9}, {3.8664391767222757`*^9, 
   3.866439182016387*^9}, {3.866439413057221*^9, 3.8664394237656918`*^9}, {
   3.866440165425671*^9, 3.8664401663535337`*^9}, {3.8664414544278717`*^9, 
   3.866441455406114*^9}, {3.8664415241527863`*^9, 3.866441526297073*^9}, {
   3.866441636299324*^9, 3.866441637325185*^9}, {3.8664421743093033`*^9, 
   3.866442174534107*^9}, {3.866444116919817*^9, 3.866444119674713*^9}, {
   3.86644604617083*^9, 3.866446049128669*^9}, {3.866512861360115*^9, 
   3.866512866295472*^9}, {3.866512916479863*^9, 3.866512918447736*^9}, {
   3.866623312753614*^9, 3.866623319710231*^9}, 3.866624582319717*^9, {
   3.8668662017322693`*^9, 3.866866202166645*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"ff705697-08c0-41db-8a85-131ecdba22d6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -15.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-2.0000000267948965`, -0.9999999464102056}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -13.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Probs\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -13.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-3.449999999999999, 
                    9.244239475045655*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-1.450000012057703, \
-0.44999996114739915`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"12\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.0000000267948965`, -0.9999999464102056}, \
{-0.9999999999999997, 2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]12\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]12\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999999999999, 
                    9.244239475045655*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.450000012057703, -0.44999996114739915`}, \
{-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]12\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]12\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999987`, 1.0717958811647137`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2.999999999999999, 
                    8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.0000000267948965`, -0.9999999464102056}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7226666666666666, 0.6733333333333333, 
                    0.8926666666666666]], 
                    EdgeForm[
                    RGBColor[0.584, 0.51, 0.839]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"MS\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "MeanSquaredLossLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["loss", Bold], 
                    Style[
                    MeanSquaredLossLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Mu]\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Probs\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Mean", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Probs", Bold], 
                    HoldForm[
                    AggregationLayer[Mean]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-2.0000000267948965`, \
-0.9999999464102056}, {-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                    0.}, {-1.9999999999999993`, 5.3589794058235685`*^-8}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 21, 8, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {277.9999999999999, 103.00000294743865`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Target\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Target\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Target"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Target\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Target"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "NeuralLogicNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"AND" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{300, 64}]|>,
                     "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{300, 64}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {300, 64}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{300, 
                    64}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {300, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{300, 64},
                     NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{300, 
                    64}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{300, 64}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{300, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Min" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{300, 64},
                     NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {300}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{300}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {300}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {300}|>,
                     "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {300}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "AND", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "AND", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"MAJORITY" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{48, 300}]|>,
                     "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{48, 300}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {48, 300}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{48, 
                    300}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {48, 300}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{48, 300},
                     NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{48, 
                    300}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{48, 300}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{48, 300}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Sort" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Map[Sort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Function", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> Sort, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 48, 
                    "$InputShape" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{48, 300},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{48, 300}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{48, 300},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{48, 
                    300}, NeuralNetworks`RealT]|>|>, 
                    "Medians" -> <|"Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|"Specification" -> 
                    NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 151}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{48, 300},
                     NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{48}, 
                    NeuralNetworks`RealT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {48}|>,
                     "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{48}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{48}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "MAJORITY", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MAJORITY", "Outputs", "Output"]}|>, 
                    "3" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{4, 
                    12}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{48}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 12}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 12}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Probs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 12}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "loss" -> <|
                    "Type" -> "MeanSquaredLoss", "Arrays" -> <||>, 
                    "Parameters" -> <|"$Dimensions" -> {4}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Probs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Probs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Nodes", "Probs"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Nodes", "Probs"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8666245849893*^9, 3.866624595429143*^9}, 
   3.866625091507502*^9, 3.8666254159601927`*^9, 3.866625481848003*^9, 
   3.8666255273543177`*^9, 3.866625602500169*^9, 3.866626239691512*^9, 
   3.8666264542153378`*^9, 3.866628582906064*^9, 3.866635108403325*^9, 
   3.866635387545483*^9, 3.8666354175644283`*^9, 3.866864975798822*^9, 
   3.8668655878491917`*^9, {3.8668662032968407`*^9, 3.8668662234076853`*^9}, 
   3.866866949083905*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"50bfc0f0-ea86-4436-abf0-40475603dcc5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866180932479144*^9, 3.866180933335601*^9}, {
  3.866260506971014*^9, 3.8662605102109118`*^9}, {3.866262223194878*^9, 
  3.866262223474766*^9}, {3.8666027494425793`*^9, 
  3.866602750730301*^9}},ExpressionUUID->"22d0189b-d6a7-44ad-b35a-\
70f7e8d0dd81"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainedNet", ",", "resultsObject"}], "}"}], "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"softNet", ",", "trainData", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TrainedNet\>\"", ",", "\"\<ResultsObject\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"testData", ",", 
          RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "2000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866262230733412*^9, 3.866262232700974*^9}, {
   3.866262747191399*^9, 3.866262755095587*^9}, {3.866263687522623*^9, 
   3.866263691522341*^9}, {3.866272907421722*^9, 3.866272908705574*^9}, {
   3.866274679974001*^9, 3.866274683777981*^9}, {3.866275126894273*^9, 
   3.866275130882132*^9}, {3.866275621030303*^9, 3.86627562449095*^9}, {
   3.866275800963348*^9, 3.866275804851942*^9}, {3.866278286918571*^9, 
   3.866278290408846*^9}, {3.866279939718389*^9, 3.8662799438283052`*^9}, {
   3.8662825835076027`*^9, 3.866282587086446*^9}, {3.8662848978232517`*^9, 
   3.8662849013340178`*^9}, {3.866301199025255*^9, 3.866301208705173*^9}, {
   3.866302091405136*^9, 3.866302093072084*^9}, {3.8663022330606956`*^9, 
   3.8663022743807373`*^9}, {3.866303190918262*^9, 3.8663031961042967`*^9}, {
   3.8663508996403513`*^9, 3.866350903983953*^9}, {3.8663558607588453`*^9, 
   3.866355860917651*^9}, {3.86637013313169*^9, 3.866370138430928*^9}, {
   3.866370237003203*^9, 3.866370239455555*^9}, {3.8663703291644793`*^9, 
   3.866370333111907*^9}, {3.866370363265703*^9, 3.866370363711856*^9}, {
   3.8663720431119947`*^9, 3.866372048852154*^9}, {3.866372163198892*^9, 
   3.8663721862104397`*^9}, 3.8663723957836103`*^9, {3.866372460806899*^9, 
   3.866372466981298*^9}, {3.8663728465397882`*^9, 3.866372846690668*^9}, {
   3.866439863015705*^9, 3.866439889076521*^9}, {3.866444399919945*^9, 
   3.866444403398275*^9}, 3.866445596437694*^9, 3.866445994629862*^9, {
   3.866446077093233*^9, 3.8664460772227592`*^9}, {3.866514058957122*^9, 
   3.866514061965129*^9}, {3.866514093672724*^9, 3.8665140946276417`*^9}, 
   3.866514530731886*^9, {3.866514784096607*^9, 3.866514784235477*^9}, {
   3.8665148543229303`*^9, 3.86651485485518*^9}, {3.866517197949828*^9, 
   3.866517203967832*^9}, 3.866517357579501*^9, 3.8665174374755917`*^9, 
   3.8665175119230967`*^9, {3.866517590284361*^9, 3.866517620168564*^9}, 
   3.8665176619240017`*^9, {3.8665179325026484`*^9, 3.8665179399815683`*^9}, {
   3.866518111910069*^9, 3.866518112233807*^9}, {3.866518521945266*^9, 
   3.866518522115803*^9}, {3.866518571201038*^9, 3.866518588328702*^9}, {
   3.866518646862028*^9, 3.866518650143523*^9}, 3.866518704027602*^9, {
   3.866519202548511*^9, 3.8665192068871107`*^9}, {3.866552934111923*^9, 
   3.866552991359269*^9}, {3.866553502473754*^9, 3.8665535030716467`*^9}, {
   3.866554417382031*^9, 3.866554420050095*^9}, {3.866554652086327*^9, 
   3.8665546522545357`*^9}, {3.86686620714637*^9, 3.866866208536282*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"fbdac8c7-4549-4743-864d-e467d909f319"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedSoftNet", "=", 
  RowBox[{"NetExtract", "[", 
   RowBox[{"trainedNet", ",", "\"\<NeuralLogicNet\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866262883598037*^9, 3.866262913813736*^9}, {
  3.866865528144919*^9, 3.866865528678174*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"c3a89cf2-7844-4806-bca2-4513232e25d6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]12\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "AND" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{300, 64}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{300, 64}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {300, 64}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{300, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {300, 64}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{300, 64}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{300, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Weights" -> NeuralNetworks`TensorT[{300, 64}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{300, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Min" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{300, 64}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {300}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{300}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {300}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {300}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {300}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "AND", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "AND", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "MAJORITY" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{48}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{48, 300}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{48, 300}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {48, 300}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{48, 300}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {48, 300}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{48, 300}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{48, 300}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{48, 300}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{48, 300}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Sort" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Map[Sort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Sort, "Net" -> None|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> 48, "$InputShape" -> 
                    NeuralNetworks`TensorT[{300}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{300}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{48, 300}, NeuralNetworks`RealT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{48, 300}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{48, 300}, NeuralNetworks`RealT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{48, 300}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Medians" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 151}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{48, 300}, NeuralNetworks`RealT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{48}, 
                    NeuralNetworks`RealT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {48}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "MAJORITY", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MAJORITY", "Outputs", "Output"]}|>, 
                    "3" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 12}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 12}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 12}, NeuralNetworks`RealT]|>|>,
                    NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 300\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "1", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 48\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ReshapeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]12\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]12\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8662628854701767`*^9, 3.86626291478244*^9}, 
   3.866263333811677*^9, 3.866263626951891*^9, 3.866275759059902*^9, 
   3.866278860640707*^9, 3.866279610307885*^9, 3.866283089053381*^9, 
   3.8662840988640747`*^9, 3.866301846366849*^9, 3.8663540211677637`*^9, 
   3.8663541757248697`*^9, 3.866354285702705*^9, 3.866354708948234*^9, 
   3.86635480352043*^9, 3.866354946410275*^9, 3.866355129778678*^9, 
   3.866355344404036*^9, 3.8663554109601917`*^9, 3.866355601157222*^9, 
   3.86635584447652*^9, 3.866357046548826*^9, 3.86635827058148*^9, 
   3.8663603567232637`*^9, 3.8663629451402597`*^9, 3.866363945271487*^9, 
   3.866365130852272*^9, 3.866366035676786*^9, 3.866368355050816*^9, 
   3.8663699230437717`*^9, 3.866371572266882*^9, 3.866438770864565*^9, 
   3.86643896077918*^9, 3.8664391415025454`*^9, 3.866439242730338*^9, 
   3.86643934064322*^9, 3.866439448330102*^9, 3.866440229932144*^9, 
   3.8664404742813272`*^9, 3.8664405592015047`*^9, 3.8664414085277576`*^9, 
   3.8664414792281923`*^9, 3.866441619893333*^9, 3.866441689406056*^9, 
   3.8664417857252293`*^9, 3.866441899861754*^9, 3.866442041711031*^9, 
   3.8664421438082438`*^9, 3.86644220577691*^9, 3.866442923332512*^9, 
   3.866443105210555*^9, 3.866443215017268*^9, 3.866443324261043*^9, 
   3.866443392091382*^9, 3.866443463860209*^9, 3.866443916112817*^9, 
   3.866443978954742*^9, 3.8664440999870872`*^9, 3.866444384668812*^9, 
   3.8664455526363*^9, 3.8664459767216597`*^9, 3.8664460963830557`*^9, 
   3.866446198128482*^9, 3.866446371505559*^9, 3.8664466173131857`*^9, 
   3.866446726857621*^9, 3.866446949046866*^9, 3.866447055125682*^9, 
   3.8665132494825897`*^9, 3.866513528458088*^9, 3.866513862467455*^9, 
   3.866514588270062*^9, 3.8665196537633457`*^9, 3.866521033301351*^9, 
   3.866524695734989*^9, 3.8665277373817797`*^9, 3.866528003896955*^9, 
   3.866529999675105*^9, 3.866532541000852*^9, 3.8665328100689297`*^9, 
   3.866542863935906*^9, 3.86654363350113*^9, 3.866545845362557*^9, 
   3.866546635196596*^9, 3.866547880940085*^9, 3.866549439453635*^9, 
   3.8665500175016737`*^9, 3.8665510002342978`*^9, 3.866553594781185*^9, 
   3.8665537613351927`*^9, 3.866554194193324*^9, 3.8665543759376163`*^9, 
   3.8665557900087967`*^9, 3.866600803446225*^9, 3.86660110824417*^9, 
   3.8666014083894787`*^9, 3.8666032722125683`*^9, 3.866603646506237*^9, 
   3.866603924967039*^9, 3.866614149217051*^9, 3.866614517604972*^9, 
   3.8666150772760963`*^9, 3.866615910520022*^9, 3.866617005433221*^9, 
   3.866620518171906*^9, 3.86662136387157*^9, 3.866621931729815*^9, 
   3.86662265578474*^9, 3.866623643819304*^9, 3.866623929846479*^9, 
   3.8666243138661947`*^9, 3.866625027852901*^9, 3.866625329973116*^9, 
   3.8666263955294523`*^9, 3.866626636440639*^9, 3.8666301937443323`*^9, 
   3.866635284071369*^9, 3.8666379464893007`*^9, 3.866865267141653*^9, 
   3.8668659776585407`*^9, 3.8668665360607643`*^9, 3.8668674552454987`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"809a6ee5-357e-43bf-a4db-99f1b41d42dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.865509544459216*^9, 3.865509545362651*^9}, {3.8668654702612267`*^9, 
  3.866865471244494*^9}},ExpressionUUID->"e2a69d6c-fddf-4ce0-9a60-\
6b136e91fb12"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"resultsObject", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"softPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainedSoftNet", "[", 
         RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardenedPredictionTargetPairs", "=", 
   RowBox[{"Harden", "[", "softPredictionTargetPairs", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"RandomSample", "[", 
       RowBox[{"hardenedPredictionTargetPairs", ",", "5"}], "]"}], ",", "1"}],
      "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"True", "->", 
     RowBox[{"Style", "[", 
      RowBox[{"True", ",", "Red"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8632403336213713`*^9, 3.863240377260723*^9}, 
   3.864794328166184*^9, {3.864794407903618*^9, 3.864794436294898*^9}, {
   3.8650544818297043`*^9, 3.865054482561998*^9}, {3.8650591999549913`*^9, 
   3.865059216538383*^9}, {3.865060098170718*^9, 3.865060117548669*^9}, {
   3.865083374025154*^9, 3.865083380805747*^9}, {3.8650835363762093`*^9, 
   3.865083538071233*^9}, {3.865590907688581*^9, 3.865590907991177*^9}, {
   3.865610944975788*^9, 3.865610947181724*^9}, {3.865655407744947*^9, 
   3.865655408023315*^9}, {3.86626050147324*^9, 3.8662605016737347`*^9}, {
   3.86626089567375*^9, 3.86626089681426*^9}, 3.866260938745146*^9, {
   3.866262482360608*^9, 3.866262529517881*^9}, {3.866262922944813*^9, 
   3.866262923422676*^9}, {3.866368441574706*^9, 3.8663684417477407`*^9}, {
   3.8665196844820623`*^9, 3.8665196894081583`*^9}, {3.86651977579454*^9, 
   3.8665198307447023`*^9}, {3.866543759104864*^9, 3.866543761043337*^9}, {
   3.866543933814775*^9, 3.866543946874074*^9}, {3.866544213286334*^9, 
   3.8665442159066887`*^9}, {3.866544345821237*^9, 3.866544359573098*^9}, {
   3.866544406102911*^9, 3.866544410862302*^9}, {3.8665444631671553`*^9, 
   3.866544554177885*^9}, {3.8665453759492197`*^9, 3.866545380545129*^9}, {
   3.866637950431554*^9, 3.866637951085165*^9}, {3.866865285097145*^9, 
   3.866865285469962*^9}, {3.8668653748813343`*^9, 3.8668653802748404`*^9}, {
   3.866865532978038*^9, 3.866865534495945*^9}, {3.866866544565024*^9, 
   3.866866545127615*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"a637f3cb-d7f7-4492-ad2f-108fbd4b3b99"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.06264930821847277`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.866865417404936*^9, 3.8668660200278587`*^9, 
  3.866866552385128*^9, 3.8668674571366463`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"8a777b3a-df85-4176-aad3-8d64e243a663"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 87.0474%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "5187"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "4351"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}], "\[Rule]", "4060"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "3640"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "666"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", "458"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", "305"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", "304"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "214"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", "143"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "1"}], "}"}], "\[Rule]", "128"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "\[Rule]", "108"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", "102"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "99"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", "37"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "1"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.866865417404936*^9, 3.8668660200278587`*^9, 
  3.866866552385128*^9, 3.866867492871069*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"d85624e4-40d6-4eb0-9271-2110abc4afbe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Subsection",
 CellChangeTimes->{{3.8650593677216454`*^9, 3.865059378776081*^9}, {
  3.866602769035088*^9, 3.866602771891135*^9}, {3.866865474676983*^9, 
  3.866865476493029*^9}},ExpressionUUID->"76d42d52-0573-4522-b5b7-\
498e3dde144e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedSoftNet"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hnf", "[", 
         RowBox[{"Harden", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.86680194442417*^9, 3.866801959585536*^9}, 
   3.8668020564125566`*^9, 3.8668021880135727`*^9, 3.86680224094079*^9, {
   3.866862414056994*^9, 3.866862435758893*^9}, 3.8668631732132587`*^9, 
   3.866863454099498*^9, {3.866863887767027*^9, 3.866863891596203*^9}, {
   3.866866085045*^9, 3.866866085408708*^9}, {3.866866613610317*^9, 
   3.8668666139621067`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"4ca549a6-f4a8-48b8-bd04-5ba2c91f7834"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 87.0474%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "5187"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "4351"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}], "\[Rule]", "4060"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", "3640"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "666"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", "458"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "3"}], "}"}], "\[Rule]", "305"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", "304"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", "214"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", "143"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "1"}], "}"}], "\[Rule]", "128"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "2"}], "}"}], "\[Rule]", "108"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", "102"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "99"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", "37"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "1"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.866866039305666*^9, 3.866866854019951*^9, 
  3.866867736201356*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"5af11bb9-3e2e-4f0c-aada-7c6c8cb685c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpaceSaving", "[", "trainedSoftNet", "]"}]], "Input",
 CellChangeTimes->{{3.8668642342489862`*^9, 3.8668642483212557`*^9}, {
  3.866864301980486*^9, 3.866864302505608*^9}, {3.866864406655108*^9, 
  3.86686453684363*^9}, {3.866864775311109*^9, 3.866864778850369*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"d5dbb3ee-e45f-4e95-8066-408558b38cda"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Soft net size = 135.6 kilobytes\"\>"},
    {"\<\"Hard net size = 4.2375 kilobytes\"\>"},
    {"\<\"Saving factor = 32.\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866864249947411*^9, 3.8668643028534403`*^9, 3.866864414235868*^9, 
   3.866864445660204*^9, {3.866864494244638*^9, 3.866864537301672*^9}, 
   3.866864595971245*^9, 3.866864779447701*^9, 3.86686686475023*^9, 
   3.8668677412127867`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"97995fef-d7ec-49dd-82e8-9c24cc476586"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Approximate neural logic", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.865071137544158*^9, 3.865071139735918*^9}, {3.866866918133319*^9, 
  3.8668669229746017`*^9}},ExpressionUUID->"3dfd48ae-245d-41a3-9ee6-\
9f48a3126503"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.8650834741174192`*^9, 
  3.865083514396649*^9}, {3.8662604478184023`*^9, 3.86626045361831*^9}, {
  3.866602632554325*^9, 
  3.8666026346579123`*^9}},ExpressionUUID->"dbaf4b13-bbf1-46b2-a867-\
cbe6ab3057db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"softNet", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NeuralAND", "[", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"First", "[", 
          RowBox[{"First", "[", "trainData", "]"}], "]"}], "]"}], ",", "75"}],
        "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"NeuralNOT", "[", "75", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"NeuralAND", "[", 
       RowBox[{"75", ",", "numClasses"}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866020485648757*^9, 3.866020486758964*^9}, {
   3.8660206133758917`*^9, 3.86602061576938*^9}, {3.866021594138579*^9, 
   3.866021622648958*^9}, {3.86602221641733*^9, 3.866022259472351*^9}, {
   3.86602506519114*^9, 3.8660250652828293`*^9}, {3.866027283063545*^9, 
   3.866027305459503*^9}, {3.866027571359556*^9, 3.866027577807056*^9}, {
   3.866028577017147*^9, 3.866028577337102*^9}, {3.866028739939226*^9, 
   3.866028740417481*^9}, {3.866038386270308*^9, 3.866038393509417*^9}, {
   3.866038426793558*^9, 3.866038432549663*^9}, {3.866038541734429*^9, 
   3.866038552581696*^9}, {3.8660399839336977`*^9, 3.8660400476873417`*^9}, {
   3.866040086377454*^9, 3.866040113183221*^9}, {3.8660842202209263`*^9, 
   3.8660842234441147`*^9}, {3.866084729086014*^9, 3.8660847389004602`*^9}, {
   3.866084883181377*^9, 3.866084891034108*^9}, {3.866087944385981*^9, 
   3.866087946377273*^9}, {3.8660898129249763`*^9, 3.866089819116226*^9}, {
   3.8660918927590847`*^9, 3.866091896174137*^9}, {3.866118640249077*^9, 
   3.8661186553525763`*^9}, {3.8661697941751633`*^9, 3.86616982143332*^9}, {
   3.8661700477905827`*^9, 3.866170062053422*^9}, {3.866170430900312*^9, 
   3.866170441150339*^9}, {3.866171085971992*^9, 3.866171092538931*^9}, {
   3.8661713117235622`*^9, 3.866171323794742*^9}, {3.866172075114151*^9, 
   3.866172086385466*^9}, {3.8661726453612757`*^9, 3.8661726565682907`*^9}, {
   3.866172963402001*^9, 3.866172967303824*^9}, {3.866175492855685*^9, 
   3.86617549327916*^9}, {3.8661755786344223`*^9, 3.866175597119087*^9}, {
   3.866176135095639*^9, 3.866176139335493*^9}, {3.866176563216754*^9, 
   3.866176567303925*^9}, {3.866177234452429*^9, 3.866177240033128*^9}, {
   3.866177471626033*^9, 3.866177471849081*^9}, {3.8661781260498943`*^9, 
   3.866178174045168*^9}, {3.866179499382938*^9, 3.866179520538422*^9}, {
   3.866180308892374*^9, 3.866180328231532*^9}, {3.866180620692492*^9, 
   3.866180620811393*^9}, {3.866180727174838*^9, 3.866180728856566*^9}, {
   3.8661809278929253`*^9, 3.866180930764296*^9}, {3.866181239813146*^9, 
   3.866181242692215*^9}, {3.866184773364808*^9, 3.866184773468157*^9}, {
   3.866184929896516*^9, 3.866184931032365*^9}, {3.866185363169696*^9, 
   3.866185363420731*^9}, {3.866185838820908*^9, 3.866185842136413*^9}, {
   3.8661861874248247`*^9, 3.866186188480125*^9}, {3.86618706378515*^9, 
   3.866187066984132*^9}, {3.866209107928833*^9, 3.866209126148491*^9}, {
   3.866209156593391*^9, 3.8662091576123867`*^9}, {3.866209702848567*^9, 
   3.866209710039878*^9}, {3.866209813177039*^9, 3.866209834123746*^9}, {
   3.86621053449234*^9, 3.866210540769287*^9}, {3.866210581043235*^9, 
   3.8662105868693542`*^9}, {3.866210622339385*^9, 3.866210627545692*^9}, {
   3.866210657739574*^9, 3.8662106609137363`*^9}, {3.866210756731784*^9, 
   3.866210768609764*^9}, {3.866211193549685*^9, 3.8662112016988564`*^9}, {
   3.866211352173271*^9, 3.866211355378903*^9}, {3.8662114673335752`*^9, 
   3.866211471635058*^9}, {3.8662116682945633`*^9, 3.86621167888715*^9}, 
   3.8662117763988447`*^9, {3.866211833182128*^9, 3.8662118352832003`*^9}, {
   3.86621193783076*^9, 3.866211943219183*^9}, {3.866214069618958*^9, 
   3.866214085207219*^9}, {3.86621414917101*^9, 3.866214201293022*^9}, {
   3.866214582928615*^9, 3.866214586096209*^9}, {3.8662146462687683`*^9, 
   3.8662146535499763`*^9}, {3.866214940556902*^9, 3.866214945432839*^9}, {
   3.86625367959163*^9, 3.86625368544868*^9}, {3.8662538129344873`*^9, 
   3.866253817785205*^9}, {3.866254549496963*^9, 3.866254555093663*^9}, {
   3.8662546252320347`*^9, 3.866254645248086*^9}, {3.866254759667647*^9, 
   3.8662547607426033`*^9}, {3.866254889744342*^9, 3.8662548909149446`*^9}, {
   3.866254921233653*^9, 3.866254922151456*^9}, {3.866255111823483*^9, 
   3.866255112738577*^9}, 3.8662574558616056`*^9, {3.866257625671372*^9, 
   3.8662576360908813`*^9}, {3.866257668990629*^9, 3.866257673154139*^9}, {
   3.866258160607082*^9, 3.866258163488317*^9}, {3.866258216054822*^9, 
   3.866258216152341*^9}, {3.866258465946023*^9, 3.8662584660890408`*^9}, {
   3.8662587584666643`*^9, 3.866258758714335*^9}, {3.8662591656591253`*^9, 
   3.866259171110828*^9}, {3.8662595439403343`*^9, 3.866259575288472*^9}, {
   3.866260163911601*^9, 3.866260184078418*^9}, {3.8662605516290283`*^9, 
   3.866260577236061*^9}, {3.8662606098420553`*^9, 3.866260614652358*^9}, {
   3.866300882744391*^9, 3.8663008941270733`*^9}, {3.86630093508057*^9, 
   3.8663009417670527`*^9}, {3.866301043569387*^9, 3.866301050127966*^9}, {
   3.866371515227001*^9, 3.866371521170332*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"282b1129-9bb6-4375-827d-fe1a21de5e52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"softNet", "=", 
   RowBox[{"InitializeNeuralLogicNet", "[", "softNet", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.866209283643862*^9, 3.866209293055928*^9}, {
   3.866210794191074*^9, 3.8662107965361767`*^9}, {3.866211249974576*^9, 
   3.866211280034959*^9}, 3.86625467208576*^9, 3.86625490177337*^9, {
   3.866257939071712*^9, 3.866257940508713*^9}, {3.866257980743169*^9, 
   3.866257982079924*^9}, {3.866258022031268*^9, 3.866258048836591*^9}, {
   3.866258423802837*^9, 3.86625842536515*^9}, {3.866258586682054*^9, 
   3.866258618845252*^9}, 3.866258678879615*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"4dd2a1a1-93c1-4c86-8a53-3799d9a2326a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866180932479144*^9, 3.866180933335601*^9}, {
  3.866260506971014*^9, 3.8662605102109118`*^9}, {3.866602649938393*^9, 
  3.866602651994179*^9}},ExpressionUUID->"79776b36-72e3-45be-ba51-\
f07dffccf849"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainedNet", ",", "resultsObject"}], "}"}], "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"softNet", ",", "trainData", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TrainedNet\>\"", ",", "\"\<ResultsObject\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"testData", ",", 
          RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"LossFunction", "->", 
        RowBox[{"CrossEntropyLossLayer", "[", "\"\<Binary\>\"", "]"}]}], 
       ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", 
      RowBox[{"MeanSquaredLossLayer", "[", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "2000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866300748607238*^9, 3.866300751535038*^9}, {
   3.866300999842635*^9, 3.866301002544681*^9}, {3.866301103249797*^9, 
   3.866301123042173*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"85ad096e-ed5c-44c2-8c3a-979fde4a03c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.865509544459216*^9, 
  3.865509545362651*^9}},ExpressionUUID->"be01f422-1c1f-4ec9-a959-\
bf38e8105582"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resultsObject", "[", "\"\<RoundMeasurements\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.861598551906061*^9, 3.8615985567851887`*^9}, {
  3.863178625879333*^9, 3.8631786268708572`*^9}, {3.863240306853362*^9, 
  3.863240307588504*^9}, {3.8647943299915457`*^9, 3.864794330447215*^9}, {
  3.864794373237455*^9, 3.864794410229562*^9}, {3.864825813950893*^9, 
  3.8648258236291018`*^9}, {3.86505446234156*^9, 3.865054476285439*^9}, {
  3.86505502598845*^9, 3.865055037244231*^9}, {3.8650600546900873`*^9, 
  3.8650600574960833`*^9}, {3.865424330606958*^9, 3.865424333182247*^9}, {
  3.865590864349222*^9, 3.865590866486609*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"1fe03ab7-3007-4e7c-b36b-88dfd49533c2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.08046107638534303`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.861598557141324*^9, 3.86159932496406*^9, 3.861600312823881*^9, 
   3.861601585970324*^9, 3.8616032957846117`*^9, {3.861608298411519*^9, 
   3.8616083183028917`*^9}, 3.8616085550848*^9, 3.861608810672841*^9, 
   3.861609187782413*^9, 3.861609263890033*^9, 3.861609731053445*^9, 
   3.8616099697238693`*^9, 3.861610658991444*^9, 3.861611766631*^9, 
   3.861616124927318*^9, 3.8616192444778347`*^9, 3.861619963378441*^9, 
   3.861620089638427*^9, 3.861620387381283*^9, 3.861622535346579*^9, 
   3.8616277717526608`*^9, 3.861627926557097*^9, 3.861628103911521*^9, 
   3.861628534853827*^9, 3.861628885555339*^9, 3.8616290173633623`*^9, 
   3.861629077343205*^9, 3.861629337131572*^9, 3.8616295320447607`*^9, 
   3.861630777186632*^9, 3.861631836724824*^9, 3.861632278357716*^9, 
   3.8616324340143414`*^9, 3.861632762075611*^9, 3.8616337118826733`*^9, 
   3.8616356725177107`*^9, 3.861635894023178*^9, 3.8616359626206903`*^9, 
   3.861636234152629*^9, 3.8616390467587633`*^9, 3.86163921854004*^9, 
   3.861639277897636*^9, 3.861639791227378*^9, 3.861639992590982*^9, 
   3.861640145823147*^9, 3.861640426707197*^9, 3.861640510279099*^9, 
   3.861640656578981*^9, 3.861676825977009*^9, 3.861679722732286*^9, 
   3.8616896456436462`*^9, 3.8616899540068693`*^9, 3.86169448702297*^9, 
   3.861697070599144*^9, 3.861709301593432*^9, 3.861761971989541*^9, 
   3.861785926291955*^9, 3.863151077609033*^9, 3.8631513568497467`*^9, 
   3.863151398896656*^9, {3.863151467773486*^9, 3.863151492099278*^9}, 
   3.8631517118208027`*^9, 3.863151759467462*^9, 3.86315191478391*^9, 
   3.863156579332025*^9, 3.8631566319872923`*^9, 3.863156726439755*^9, 
   3.863156760983041*^9, 3.863157503104232*^9, 3.86315758919571*^9, 
   3.863157726868866*^9, 3.8631578459034653`*^9, 3.863158024731306*^9, 
   3.863158066216166*^9, 3.863158149578815*^9, 3.8631582880995407`*^9, 
   3.863158383100382*^9, 3.863158562747924*^9, 3.8631624350849257`*^9, 
   3.863162696090391*^9, 3.8631628315798483`*^9, 3.8631631179441347`*^9, 
   3.863163186467744*^9, 3.863163263716269*^9, 3.863163321285037*^9, 
   3.863163433622768*^9, 3.863163575357746*^9, 3.863163656008732*^9, 
   3.863163760169982*^9, 3.863163888235806*^9, 3.863163940717307*^9, 
   3.8631639815485086`*^9, 3.8631640322806664`*^9, 3.8631640779733953`*^9, 
   3.863164153205048*^9, 3.863164248152726*^9, 3.863164376840151*^9, 
   3.863165966925852*^9, 3.863166541634058*^9, 3.8631755217262173`*^9, 
   3.863175567222314*^9, 3.863175803363757*^9, 3.8631759249798527`*^9, 
   3.8631763342580147`*^9, 3.8631763780873013`*^9, 3.863176424817193*^9, 
   3.863176475288206*^9, 3.863176540459158*^9, 3.863176635923481*^9, 
   3.86317668199907*^9, 3.863176784236801*^9, 3.863176890206065*^9, 
   3.863177186951869*^9, 3.863177371425349*^9, 3.863177561813005*^9, 
   3.8631777280287027`*^9, 3.863178465988693*^9, 3.8631786277714043`*^9, 
   3.863179130318796*^9, 3.86317964439256*^9, 3.863179722227026*^9, 
   3.863179895390327*^9, 3.863180417307391*^9, 3.8631891933581057`*^9, 
   3.863195436663931*^9, 3.8632358567559233`*^9, 3.863240307912781*^9, 
   3.863242762083191*^9, 3.863243498020275*^9, 3.8632490984269657`*^9, 
   3.863249153557783*^9, 3.863249800948948*^9, 3.863261113079543*^9, 
   3.863261258571767*^9, 3.863263767952365*^9, 3.863266487752336*^9, 
   3.863268325182302*^9, 3.864794323339487*^9, {3.8647944114753036`*^9, 
   3.864794415160467*^9}, 3.864794798872734*^9, 3.864797237733761*^9, 
   3.864824874279098*^9, 3.864825084390379*^9, 3.8648257903081007`*^9, 
   3.8648258243477163`*^9, 3.864826317452064*^9, 3.864826707415752*^9, 
   3.8648268358911123`*^9, 3.864827667008909*^9, 3.8648277980615273`*^9, 
   3.8648279244198427`*^9, 3.864829394605691*^9, 3.864829843115088*^9, 
   3.864829959358408*^9, 3.864830393511653*^9, 3.864830567569335*^9, 
   3.864830919268218*^9, 3.86483103124896*^9, 3.864872789949876*^9, 
   3.864874331638398*^9, 3.864904587128199*^9, 3.86505496881559*^9, 
   3.865059953128607*^9, 3.8650600598500547`*^9, 3.8650654143932*^9, 
   3.8650656502740097`*^9, 3.865067803178391*^9, 3.865068291966251*^9, 
   3.865069495989231*^9, 3.865070283366563*^9, 3.865083279154043*^9, 
   3.8650839062816553`*^9, 3.865084356636775*^9, 3.865093499302258*^9, 
   3.865097650435338*^9, 3.8651414446602592`*^9, 3.865424333606085*^9, 
   3.865424841445877*^9, 3.865425229735964*^9, 3.865427484983204*^9, 
   3.8655059072779627`*^9, 3.865507093510763*^9, 3.865508240612179*^9, 
   3.865508423230506*^9, 3.865508732322257*^9, 3.865509005381804*^9, 
   3.865509546501918*^9, 3.8655096996579227`*^9, 3.86557721081032*^9, 
   3.8655780390495567`*^9, 3.865590830670417*^9, 3.8655908671336946`*^9, 
   3.865610697897925*^9, 3.865652633905154*^9, 3.865655300641062*^9, 
   3.865788012907119*^9, 3.865788771715988*^9, 3.86583933159483*^9, 
   3.86583978515248*^9, 3.865867641184679*^9, 3.8658685884814367`*^9, 
   3.8658714546625*^9, 3.865911704628196*^9, 3.865947229222362*^9, 
   3.8659961521973543`*^9, 3.866000873158622*^9, 3.8660057911972733`*^9, 
   3.866007274901287*^9, 3.866008420062475*^9, 3.866009699493788*^9, 
   3.866011982651112*^9, 3.866019936674967*^9, 3.866084127515397*^9, 
   3.86608662667826*^9, 3.8660896820607147`*^9, 3.866091248584734*^9, 
   3.866117818933078*^9, 3.86616938042334*^9, 3.866214058580371*^9, 
   3.866214619279559*^9, 3.8662148930932426`*^9, 3.866260227594151*^9, 
   3.86626079823901*^9, 3.866300818687643*^9, 3.866301148219926*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"fb9922be-4d44-44fa-a740-90fd86c255a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"randomTestSample", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"testData", ",", 
     RowBox[{"UpTo", "[", "200", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"softPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainedNet", "[", 
         RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", 
     "randomTestSample"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RandomSample", "[", 
  RowBox[{"softPredictionTargetPairs", ",", "10"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8632403336213713`*^9, 3.863240377260723*^9}, 
   3.864794328166184*^9, {3.864794407903618*^9, 3.864794436294898*^9}, {
   3.8650544818297043`*^9, 3.865054482561998*^9}, {3.8650591999549913`*^9, 
   3.865059216538383*^9}, {3.865060098170718*^9, 3.865060117548669*^9}, {
   3.865083374025154*^9, 3.865083380805747*^9}, {3.8650835363762093`*^9, 
   3.865083538071233*^9}, {3.865590907688581*^9, 3.865590907991177*^9}, {
   3.865610944975788*^9, 3.865610947181724*^9}, {3.865655407744947*^9, 
   3.865655408023315*^9}, {3.86626050147324*^9, 3.8662605016737347`*^9}, {
   3.86626089567375*^9, 3.86626089681426*^9}, 3.866260938745146*^9, {
   3.86626264559334*^9, 3.866262658221209*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"cc7fdd2c-831f-4bbf-9c2a-d697ed7670ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "4.333370270614978`*^-6", ",", "0.08942241966724396`", ",", 
       "0.013936973176896572`", ",", "2.1395244687028026`*^-8"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.4502013325691223`", ",", "0.0009403335279785097`", ",", 
       "0.005835799500346184`", ",", "0.0013396103167906404`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.0038892272859811783`", ",", "0.223232701420784`", ",", 
       "0.01978372037410736`", ",", "0.9444945454597473`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.8551828861236572`", ",", "0.012195744551718235`", ",", 
       "0.005835799500346184`", ",", "0.010951222851872444`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.015116960741579533`", ",", "0.622377872467041`", ",", 
       "1.2192882081762946`*^-7", ",", "0.014329508878290653`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.001976726343855262`", ",", "0.5444900989532471`", ",", 
       "0.013936973176896572`", ",", "0.32814353704452515`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.9999991059303284`", ",", "0.06618120521306992`", ",", 
       "0.058783769607543945`", ",", "0.01963680237531662`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.5465436577796936`", ",", "0.005424152128398418`", ",", 
       "0.040348298847675323`", ",", "0.01734413206577301`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.8466134071350098`", ",", "0.012195744551718235`", ",", 
       "0.01033498253673315`", ",", "0.016395196318626404`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.39558249711990356`", ",", "0.23631271719932556`", ",", 
       "0.03139081969857216`", ",", "0.9062796235084534`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.865083944153455*^9, 3.8650843925870743`*^9, 3.865093531769497*^9, 
   3.865097756341769*^9, 3.865141542376992*^9, 3.865424349715019*^9, 
   3.86542751189223*^9, 3.865505916932631*^9, 3.865508251307014*^9, 
   3.865508433617846*^9, 3.8655090142926064`*^9, 3.865509556017363*^9, 
   3.865509716467205*^9, 3.8655772328758097`*^9, 3.865590884371516*^9, 
   3.8655909461424932`*^9, 3.865610848379921*^9, 3.86561101972335*^9, 
   3.865652662175004*^9, 3.86565533700756*^9, 3.865655432595294*^9, 
   3.865839371310375*^9, 3.865839829589559*^9, 3.865867734412747*^9, 
   3.8658686797777967`*^9, 3.8658715579590683`*^9, 3.8659119433076973`*^9, 
   3.865947389711522*^9, 3.865996464213435*^9, 3.866000902227161*^9, 
   3.866005919373596*^9, 3.866007335306445*^9, 3.866008523003419*^9, 
   3.8660099197969923`*^9, 3.8660122066524353`*^9, 3.866020263301511*^9, 
   3.866084178948759*^9, 3.866086754587434*^9, 3.866089766385713*^9, 
   3.8660915250645237`*^9, 3.866118393832325*^9, 3.8661696699675713`*^9, 
   3.86621463391124*^9, 3.866260254356771*^9, {3.866260882666247*^9, 
   3.8662608976351223`*^9}, 3.866260939218465*^9, 3.866300822457629*^9, 
   3.866301150469366*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"deeafa17-d205-41b4-9334-177d0b32d635"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.865418895304618*^9, 
  3.865418895944718*^9}},ExpressionUUID->"c33fd357-ab86-4dac-a5dc-\
fb8a483872d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"\"\<neural-logic.m\>\"", ",", 
    RowBox[{"Path", "->", 
     RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}], ";"}]], "Input",
 CellLabel->
  "In[128]:=",ExpressionUUID->"de7ef9f2-bf67-4869-9b14-c25b89d18d50"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"4", "*", "numClasses"}]}], "}"}], ",", 
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{"25", ",", "200"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{"200", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralPortLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8667947116642637`*^9, 3.866794715316112*^9}, {
  3.8667949588086853`*^9, 3.866794959416608*^9}, {3.866795189818438*^9, 
  3.8667952011063766`*^9}, {3.866795705094761*^9, 3.866795705894431*^9}, {
  3.866797375454893*^9, 3.866797386332419*^9}, {3.866797634391418*^9, 
  3.86679763514128*^9}, {3.866797938814663*^9, 3.866797939113286*^9}, {
  3.8667980779208403`*^9, 3.866798078974533*^9}, {3.866799028383526*^9, 
  3.8667990291313543`*^9}, {3.866799193521337*^9, 3.866799197836425*^9}, {
  3.866799235679132*^9, 3.866799236631859*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"bc6db55e-26bf-4b50-b858-d1f8d36a7f5d"],

Cell[CellGroupData[{

Cell[BoxData["softNet"], "Input",
 CellChangeTimes->{{3.8667952023497047`*^9, 3.866795203264079*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"6d34ed3b-51bc-44b4-808a-b94741a281be"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "AND" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{200, 25}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {200, 25}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {200, 25}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200, 25}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Min" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200, 25}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {200}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{200}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {200}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {200}|>,
                     "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {200}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "AND", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "AND", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "AND" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{8, 200}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {8, 200}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {8, 200}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8, 200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{200}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 200}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Min" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8, 200}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {8}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "AND", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "AND", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    "3" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{2, 4}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`AtomT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 200\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ReshapeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.866795203496387*^9, 3.8667957075083103`*^9, 3.866796070196561*^9, 
   3.866796149314502*^9, 3.866797349639717*^9, 3.86679738825587*^9, 
   3.866797453805172*^9, {3.8667976184902554`*^9, 3.8667976364228907`*^9}, 
   3.866797942187724*^9, 3.866798080287375*^9, 3.866798996248756*^9, 
   3.86679903156273*^9, 3.866799199257132*^9, 3.866799342881422*^9, 
   3.866799486339251*^9, 3.86679971515758*^9, 3.866799846721796*^9, 
   3.866799991910746*^9, 3.86680005124951*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"59272152-9db5-48d0-be76-82286de44f0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["hardNet"], "Input",
 CellChangeTimes->{{3.8667954863173*^9, 3.866795487992346*^9}, {
  3.866795577314228*^9, 3.866795579392613*^9}, {3.866795625958766*^9, 
  3.866795626456334*^9}, {3.8667957161544943`*^9, 3.866795744408848*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"fe5c636c-8593-4cfc-87d1-773a1f91eaaa"],

Cell[BoxData[
 RowBox[{"HardNAND", "/*", "HardNAND", "/*", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "neurallogic`Private`input$", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"First", "[", "neurallogic`Private`input$", "]"}], ",", "2"}],
        "]"}], ",", 
      RowBox[{"Last", "[", "neurallogic`Private`input$", "]"}]}], "}"}]}], 
   "]"}]}]], "Output",
 CellChangeTimes->{
  3.866797355432693*^9, 3.866797393924616*^9, 3.866797454730968*^9, {
   3.8667976191630917`*^9, 3.866797637142482*^9}, 3.866797943497836*^9, 
   3.86679808099734*^9, 3.8667989971781063`*^9, 3.866799033197626*^9, 
   3.866799200267592*^9, 3.866799343712777*^9, 3.866799487420123*^9, 
   3.866799716447813*^9, 3.866799847651041*^9, 3.8667999920450478`*^9, 
   3.866800051756555*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"83c98a4d-93fd-4565-8476-398e81849e11"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hardNet", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"w1", ",", "w2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"w3", ",", "w4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"w5", ",", "w6"}], "}"}]}], "}"}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{"OP", " ", "weights"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"w7", ",", "w8", ",", "w9"}], "}"}], ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"NOT", " ", "weights"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"w10", ",", "w11", ",", "w12"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"w13", ",", "w14", ",", "w15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"w16", ",", "w17", ",", "w18"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"w19", ",", "w20", ",", "w21"}], "}"}]}], "}"}], ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"OP", " ", "weights"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"w22", ",", "w23", ",", "w24", ",", "w25"}], "}"}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{"NOT", " ", "weights"}], " ", "*)"}], "\[IndentingNewLine]", 
     "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8667951979680862`*^9, 3.866795324891905*^9}, {
   3.8667953823535357`*^9, 3.866795423025941*^9}, {3.866795586619224*^9, 
   3.866795593873831*^9}, {3.866795644274033*^9, 3.866795660794105*^9}, {
   3.86679621223319*^9, 3.86679621477791*^9}, {3.866797464331983*^9, 
   3.866797496618058*^9}, {3.8667976607381783`*^9, 3.866797701337682*^9}, {
   3.866798016341137*^9, 3.866798051721857*^9}, {3.866798084415093*^9, 
   3.866798085298151*^9}, 3.866798119874915*^9, {3.866798716857313*^9, 
   3.866798732656879*^9}, {3.866798769671937*^9, 3.866798779504898*^9}, {
   3.866799038778615*^9, 3.8667990514616737`*^9}, {3.866799119138954*^9, 
   3.866799140441409*^9}, {3.8667992072186537`*^9, 3.8667992097376547`*^9}, {
   3.8667993626999817`*^9, 3.866799387034421*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"169d1825-60ee-4c8f-8445-570d5fccd98f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"w22", "\[Xor]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"w7", "\[Xor]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x1", "||", 
                    RowBox[{"!", "w1"}]}], ")"}], "&&", 
                   RowBox[{"(", 
                    RowBox[{"x2", "||", 
                    RowBox[{"!", "w2"}]}], ")"}]}], ")"}]}], ")"}]}], "||", 
              RowBox[{"!", "w10"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"w8", "\[Xor]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x1", "||", 
                    RowBox[{"!", "w3"}]}], ")"}], "&&", 
                   RowBox[{"(", 
                    RowBox[{"x2", "||", 
                    RowBox[{"!", "w4"}]}], ")"}]}], ")"}]}], ")"}]}], "||", 
              RowBox[{"!", "w11"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"w9", "\[Xor]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x1", "||", 
                    RowBox[{"!", "w5"}]}], ")"}], "&&", 
                   RowBox[{"(", 
                    RowBox[{"x2", "||", 
                    RowBox[{"!", "w6"}]}], ")"}]}], ")"}]}], ")"}]}], "||", 
              RowBox[{"!", "w12"}]}], ")"}]}], ")"}]}], ")"}]}], ",", 
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"w23", "\[Xor]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"w7", "\[Xor]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x1", "||", 
                    RowBox[{"!", "w1"}]}], ")"}], "&&", 
                   RowBox[{"(", 
                    RowBox[{"x2", "||", 
                    RowBox[{"!", "w2"}]}], ")"}]}], ")"}]}], ")"}]}], "||", 
              RowBox[{"!", "w13"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"w8", "\[Xor]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x1", "||", 
                    RowBox[{"!", "w3"}]}], ")"}], "&&", 
                   RowBox[{"(", 
                    RowBox[{"x2", "||", 
                    RowBox[{"!", "w4"}]}], ")"}]}], ")"}]}], ")"}]}], "||", 
              RowBox[{"!", "w14"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"w9", "\[Xor]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x1", "||", 
                    RowBox[{"!", "w5"}]}], ")"}], "&&", 
                   RowBox[{"(", 
                    RowBox[{"x2", "||", 
                    RowBox[{"!", "w6"}]}], ")"}]}], ")"}]}], ")"}]}], "||", 
              RowBox[{"!", "w15"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"w24", "\[Xor]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"w7", "\[Xor]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x1", "||", 
                    RowBox[{"!", "w1"}]}], ")"}], "&&", 
                   RowBox[{"(", 
                    RowBox[{"x2", "||", 
                    RowBox[{"!", "w2"}]}], ")"}]}], ")"}]}], ")"}]}], "||", 
              RowBox[{"!", "w16"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"w8", "\[Xor]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x1", "||", 
                    RowBox[{"!", "w3"}]}], ")"}], "&&", 
                   RowBox[{"(", 
                    RowBox[{"x2", "||", 
                    RowBox[{"!", "w4"}]}], ")"}]}], ")"}]}], ")"}]}], "||", 
              RowBox[{"!", "w17"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"w9", "\[Xor]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x1", "||", 
                    RowBox[{"!", "w5"}]}], ")"}], "&&", 
                   RowBox[{"(", 
                    RowBox[{"x2", "||", 
                    RowBox[{"!", "w6"}]}], ")"}]}], ")"}]}], ")"}]}], "||", 
              RowBox[{"!", "w18"}]}], ")"}]}], ")"}]}], ")"}]}], ",", 
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"w25", "\[Xor]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"w7", "\[Xor]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x1", "||", 
                    RowBox[{"!", "w1"}]}], ")"}], "&&", 
                   RowBox[{"(", 
                    RowBox[{"x2", "||", 
                    RowBox[{"!", "w2"}]}], ")"}]}], ")"}]}], ")"}]}], "||", 
              RowBox[{"!", "w19"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"w8", "\[Xor]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x1", "||", 
                    RowBox[{"!", "w3"}]}], ")"}], "&&", 
                   RowBox[{"(", 
                    RowBox[{"x2", "||", 
                    RowBox[{"!", "w4"}]}], ")"}]}], ")"}]}], ")"}]}], "||", 
              RowBox[{"!", "w20"}]}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{"w9", "\[Xor]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x1", "||", 
                    RowBox[{"!", "w5"}]}], ")"}], "&&", 
                   RowBox[{"(", 
                    RowBox[{"x2", "||", 
                    RowBox[{"!", "w6"}]}], ")"}]}], ")"}]}], ")"}]}], "||", 
              RowBox[{"!", "w21"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.866795207488721*^9, {3.866795424820266*^9, 3.8667954368856173`*^9}, 
   3.866795588957596*^9, {3.866795645955991*^9, 3.8667956530800123`*^9}, {
   3.866796196276815*^9, 3.866796230764674*^9}, 3.866797497237907*^9, {
   3.8667976248771057`*^9, 3.866797671475477*^9}, 3.866797702146467*^9, {
   3.866797952378367*^9, 3.866797958201167*^9}, {3.866798039629072*^9, 
   3.866798056173202*^9}, {3.866798089239655*^9, 3.8667981241712837`*^9}, {
   3.866798733784512*^9, 3.866798741904028*^9}, {3.8667987729103394`*^9, 
   3.866798779868023*^9}, 3.8667989986868753`*^9, 3.866799141457326*^9, 
   3.866799210944017*^9, 3.8667993912682877`*^9, 3.86679949725384*^9, 
   3.8667997191567783`*^9, 3.866799861656756*^9, 3.8667999963556223`*^9, 
   3.8668000547633257`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"c501aada-6d6b-4aea-b904-56ae777e4d46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"SoftNOT", "[", 
      RowBox[{"b", ",", "w"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866777746527264*^9, 3.866777888270104*^9}, {
   3.866779005790751*^9, 3.866779007169655*^9}, 3.866780620812299*^9, {
   3.866780892738059*^9, 3.866780896593383*^9}, {3.8667816600351267`*^9, 
   3.866781660203492*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"6cc1fdce-7f5f-4a7c-926c-c4ca2dd77b5f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`w$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`w$$], 0, 1}}, Typeset`size$$ = {
    360., {113., 116.64199019669311`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`w$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        neurallogic`SoftNOT[$CellContext`b, $CellContext`w$$], \
{$CellContext`b, 0, 1}, PlotRange -> {{0, 1}, {0, 1}}], 
      "Specifications" :> {{$CellContext`w$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{406., {156.6875, 162.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.866780897169709*^9, {3.8667816607625647`*^9, 3.8667816857619267`*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"8449491d-4b7c-4221-ac07-c57c3880e1ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanFunction", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "True"}], "}"}], "->", "True"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], "->", "True"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}], "->", "False"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"False", ",", "False"}], "}"}], "->", "True"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "w"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.86677847628052*^9, 3.866778537308827*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"bf0b3ffe-c458-4ae2-91cd-559a0e4893ed"],

Cell[BoxData[
 RowBox[{"b", "||", 
  RowBox[{"!", "w"}]}]], "Output",
 CellChangeTimes->{{3.866778522405037*^9, 3.866778537707921*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"54098ace-c3ee-4c74-9902-35f4d41fd1bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanFunction", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "True"}], "}"}], "->", "True"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], "->", "False"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}], "->", "False"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"False", ",", "False"}], "}"}], "->", "False"}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"b", ",", "w"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866781192092898*^9, 3.866781200223303*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"aa44aad1-1115-4523-a9ab-ee67832a048c"],

Cell[BoxData[
 RowBox[{"b", "&&", "w"}]], "Output",
 CellChangeTimes->{3.866781201819538*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"20abb2b9-3753-4260-b884-dfc5d8df7750"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"True", ",", "True"}], "}"}], "->", "True"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], "->", "False"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}], "->", "False"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"False", ",", "False"}], "}"}], "->", "True"}]}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{"b", ",", "w"}], "}"}]}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.866781866064002*^9, 3.866781931586396*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"a918ddc8-77be-45c0-9c05-b97b2569d4c0"],

Cell[BoxData[
 RowBox[{"!", 
  RowBox[{"(", 
   RowBox[{"b", "\[Xor]", "w"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8667818831518173`*^9, 3.866781932086219*^9}},
 CellLabel->"Out[93]=",ExpressionUUID->"1e3c2217-2fcc-4be2-b05f-c95a2d0115f9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"HardNeuralAND", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8667789279117737`*^9, 3.866778963469351*^9}, {
   3.86677914392801*^9, 3.866779155269189*^9}, {3.866779196167186*^9, 
   3.8667792242456512`*^9}, {3.86677941242344*^9, 3.866779413698122*^9}, 
   3.866779627535963*^9},
 CellLabel->
  "In[110]:=",ExpressionUUID->"61d9a787-3a0e-4b53-8006-b86de31e2e04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hn", "=", 
  RowBox[{"hardNet", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b1", ",", "b2", ",", "b3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"w1", ",", "w2", ",", "w3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w4", ",", "w5", ",", "w6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w7", ",", "w8", ",", "w9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w10", ",", "w11", ",", "w12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w13", ",", "w14", ",", "w15"}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.866779226336775*^9, 3.866779227173395*^9}, {
  3.866779419615016*^9, 3.866779476389892*^9}, {3.86677965848777*^9, 
  3.866779680398267*^9}, {3.8667806487192574`*^9, 3.866780702206194*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"920ba031-7529-4a91-8b10-318726fa7de3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b1", "||", 
      RowBox[{"!", "w1"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{"b2", "||", 
      RowBox[{"!", "w2"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{"b3", "||", 
      RowBox[{"!", "w3"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b1", "||", 
      RowBox[{"!", "w4"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{"b2", "||", 
      RowBox[{"!", "w5"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{"b3", "||", 
      RowBox[{"!", "w6"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b1", "||", 
      RowBox[{"!", "w7"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{"b2", "||", 
      RowBox[{"!", "w8"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{"b3", "||", 
      RowBox[{"!", "w9"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b1", "||", 
      RowBox[{"!", "w10"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{"b2", "||", 
      RowBox[{"!", "w11"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{"b3", "||", 
      RowBox[{"!", "w12"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b1", "||", 
      RowBox[{"!", "w13"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{"b2", "||", 
      RowBox[{"!", "w14"}]}], ")"}], "&&", 
    RowBox[{"(", 
     RowBox[{"b3", "||", 
      RowBox[{"!", "w15"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.866779227525522*^9, {3.866779417744008*^9, 3.866779420823048*^9}, 
   3.8667794768305397`*^9, 3.866779575731982*^9, 3.866779631282452*^9, 
   3.86677968093151*^9, 3.866779779858849*^9, {3.866780437195409*^9, 
   3.8667804628294563`*^9}, 3.866780518364211*^9, {3.866780627839863*^9, 
   3.866780702741302*^9}},
 CellLabel->"Out[74]=",ExpressionUUID->"191fff66-ad01-46df-9380-5fe20aa72d15"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"HardNeuralOR", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866781435107452*^9, 3.8667814437874327`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"ac635061-b89e-4505-946d-08bb776f6c7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hn", "=", 
  RowBox[{"hardNet", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b1", ",", "b2", ",", "b3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"w1", ",", "w2", ",", "w3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w4", ",", "w5", ",", "w6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w7", ",", "w8", ",", "w9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w10", ",", "w11", ",", "w12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w13", ",", "w14", ",", "w15"}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[85]:=",ExpressionUUID->"a66b973c-7ff1-400a-9eb6-28334625f218"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b1", "&&", "w1"}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{"b2", "&&", "w2"}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{"b3", "&&", "w3"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b1", "&&", "w4"}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{"b2", "&&", "w5"}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{"b3", "&&", "w6"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b1", "&&", "w7"}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{"b2", "&&", "w8"}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{"b3", "&&", "w9"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b1", "&&", "w10"}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{"b2", "&&", "w11"}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{"b3", "&&", "w12"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b1", "&&", "w13"}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{"b2", "&&", "w14"}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{"b3", "&&", "w15"}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.866781466355247*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"a45f8321-3674-47a8-a21e-084f90c619cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"NeuralNOT", "[", "4", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8667841464197063`*^9, 3.866784150155929*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"716eba66-73ac-42f3-b4ac-35d3ca6ee8d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hn", "=", 
  RowBox[{"hardNet", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b1", ",", "b2", ",", "b3", ",", "b4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"w1", ",", "w2", ",", "w3", ",", "w4"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.866784154592804*^9, 3.866784196676599*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"b3c21cc0-39ce-4a84-940b-882f155fe182"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b1", "\[Xor]", "w1"}], ")"}]}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b2", "\[Xor]", "w2"}], ")"}]}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b3", "\[Xor]", "w3"}], ")"}]}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b4", "\[Xor]", "w4"}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.866784155964028*^9, 3.866784197073615*^9}},
 CellLabel->"Out[98]=",ExpressionUUID->"3fdf23ff-ebfe-4408-b5fc-962e2f6fb451"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"HardNeuralMajority", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866784993531631*^9, 3.866784999419849*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"fc5dc23c-36c9-4e72-9a30-664c4802610b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hn", "=", 
  RowBox[{"hardNet", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b1", ",", "b2", ",", "b3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"w1", ",", "w2", ",", "w3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w4", ",", "w5", ",", "w6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w7", ",", "w8", ",", "w9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w10", ",", "w11", ",", "w12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w13", ",", "w14", ",", "w15"}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[101]:=",ExpressionUUID->"91db8c7d-75cb-4413-8571-57e8749a6ecc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Majority", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "\[Xor]", "w1"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "\[Xor]", "w2"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "\[Xor]", "w3"}], ")"}]}]}], "]"}], ",", 
   RowBox[{"Majority", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "\[Xor]", "w4"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "\[Xor]", "w5"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "\[Xor]", "w6"}], ")"}]}]}], "]"}], ",", 
   RowBox[{"Majority", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "\[Xor]", "w7"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "\[Xor]", "w8"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "\[Xor]", "w9"}], ")"}]}]}], "]"}], ",", 
   RowBox[{"Majority", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "\[Xor]", "w10"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "\[Xor]", "w11"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "\[Xor]", "w12"}], ")"}]}]}], "]"}], ",", 
   RowBox[{"Majority", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "\[Xor]", "w13"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "\[Xor]", "w14"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "\[Xor]", "w15"}], ")"}]}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.86678500745982*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"00574200-d292-4a2d-8604-bc5a1fd87957"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"HardNeuralNAND", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866787351058358*^9, 3.866787355238838*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"25ef7f00-67d5-4c0f-bd2e-71df0a086cf3"],

Cell[CellGroupData[{

Cell[BoxData["softNet"], "Input",
 CellChangeTimes->{{3.866788068280615*^9, 3.866788069417795*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"fb22e6a0-65ec-4f72-b0a6-c0b6443db93f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"AND\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"NOT\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -15.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-1.9999999999999993`, 5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"AND\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["AND", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999999999997, 2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NOT\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NOT", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {222.99999999999994`, 48.500002947438674`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.499998526280663`, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "AND" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{4, 2}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{4, 2}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {4, 2}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {4, 2}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>|>, 
                    "Min" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {4}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Min", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Min", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{4}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {4}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {4}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {4}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "AND", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "AND", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "AND"], 
                    NeuralNetworks`NetPath["Nodes", "NOT"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "AND"], 
                    NeuralNetworks`NetPath["Nodes", "NOT"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.86678806971354*^9, 3.866788329195322*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"4adcbb01-9c31-4654-8bba-9f48b84e97dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["hardNet"], "Input",
 CellChangeTimes->{{3.8667880738733788`*^9, 3.86678807480147*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"2da4e397-54e2-4142-9de1-4e0a62486e93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "neurallogic`Private`input", ",", "neurallogic`Private`weights"}], 
      "}"}], ",", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"neurallogic`Private`notWeights", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Not", "/@", "#1"}], "&"}], ")"}], "/@", 
          "neurallogic`Private`weights"}]}], "}"}], ",", 
       RowBox[{"And", "@@@", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"neurallogic`Private`input", "||", "#1"}], "]"}], "&"}], 
          ")"}], "/@", "neurallogic`Private`notWeights"}]}]}], "]"}]}], "]"}],
    ",", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "neurallogic`Private`input", ",", "neurallogic`Private`weights"}], 
      "}"}], ",", 
     RowBox[{"Not", "/@", 
      RowBox[{"Thread", "[", 
       RowBox[{
       "neurallogic`Private`input", "\[Xor]", "neurallogic`Private`weights"}],
        "]"}]}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.866788075098012*^9, 3.866788340923313*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"6484124f-69cc-40f8-a84c-d68f451df861"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"HardNeuralNOR", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866788488145926*^9, 3.866788488271138*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"de9be2d5-5ff9-4670-b4ba-f78e43517118"],

Cell[CellGroupData[{

Cell[BoxData["softNet"], "Input",
 CellChangeTimes->{{3.8667884897909603`*^9, 3.866788490629355*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"c2754fbf-2e81-41cd-82a9-a803f730b448"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"OR\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"NOT\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -15.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-1.9999999999999993`, 5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"OR\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["OR", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999999999997, 2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"NOT\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NOT", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {222.99999999999994`, 48.500002947438674`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.499998526280663`, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "OR" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{4, 2}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{4, 2}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {4, 2}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {4, 2}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftOR[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>|>, 
                    "Max" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {4}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Max", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Max", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "NOT" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{4}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {4}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>, 
                    "WeightsClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {4}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`SoftNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {4}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "WeightsClip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "OR", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NOT", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OR", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NOT", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "OR"], 
                    NeuralNetworks`NetPath["Nodes", "NOT"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "OR"], 
                    NeuralNetworks`NetPath["Nodes", "NOT"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.866788490964355*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"0d41b877-dd56-439f-a2ad-549da701da54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["hardNet"], "Input",
 CellChangeTimes->{{3.8667884955028887`*^9, 3.8667884964095087`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"547083b0-9e5f-49ba-b9d5-295e0c88e65e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "neurallogic`Private`input", ",", "neurallogic`Private`weights"}], 
      "}"}], ",", 
     RowBox[{"Or", "@@@", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"neurallogic`Private`input", "&&", "#1"}], "]"}], "&"}], 
        ")"}], "/@", "neurallogic`Private`weights"}]}]}], "]"}], ",", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "neurallogic`Private`input", ",", "neurallogic`Private`weights"}], 
      "}"}], ",", 
     RowBox[{"Not", "/@", 
      RowBox[{"Thread", "[", 
       RowBox[{
       "neurallogic`Private`input", "\[Xor]", "neurallogic`Private`weights"}],
        "]"}]}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.866788496690689*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"1c7b9d8e-0c3e-4a0e-b9f7-28f0af3ad991"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8667852941680813`*^9, 3.866785301503965*^9}, {
  3.866788260643837*^9, 3.866788262673725*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"610b8754-f10a-478b-b5b3-b2a1449a727e"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.866785302065216*^9, 3.866788263037188*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"a922951c-f416-4d4b-af1a-2b57839d7293"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "h"}], "}"}]}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.866787206165866*^9, 3.8667872345863743`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"dd640250-de7f-4e06-a4e1-4bfcfc268f07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8667872350394163`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"d430acd7-6dff-43af-b0c6-2e5d5670546a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"g", ",", "h"}], "}"}]}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"3", ";;"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.866787246802197*^9, 3.866787251938304*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"43b7a136-9715-4ac3-b4c6-ae4c67d64f81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"g", ",", "h"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8667872554333677`*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"27c28e2e-a9c6-4704-8aed-9e5dac45234d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanTable", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", 
     RowBox[{"Not", "[", 
      RowBox[{"And", "[", 
       RowBox[{"a", ",", "b"}], "]"}], "]"}]}], "}"}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.866711011835292*^9, 3.866711047310322*^9}, {
  3.86671109334785*^9, 3.866711096469138*^9}, {3.8667111365857964`*^9, 
  3.866711137938058*^9}, {3.866711169918885*^9, 3.866711173581789*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"74b6e91b-ac96-4b0b-a82e-daebab03bc91"],

Cell[BoxData[
 TagBox[GridBox[{
    {"True", "True", "False"},
    {"True", "False", "True"},
    {"False", "True", "True"},
    {"False", "False", "True"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.866711020981166*^9, 3.8667110390974607`*^9}, 
   3.8667110967754*^9, 3.866711138275834*^9, 3.86671117417663*^9},
 CellLabel->
  "Out[127]//TableForm=",ExpressionUUID->"9a6fc6e6-b2cd-4bbb-8e08-\
e04b2a663d96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanTable", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", 
     RowBox[{"Nand", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}], "}"}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.8667110234499273`*^9, 3.866711026077366*^9}, {
  3.866711098662643*^9, 3.866711104333147*^9}, {3.8667111766710367`*^9, 
  3.86671118430838*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"f903ccb4-dd41-45a7-a3fa-61ec949a982c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"True", "True", "False"},
    {"True", "False", "True"},
    {"False", "True", "True"},
    {"False", "False", "True"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.866711026399344*^9, 3.866711104714941*^9, {3.866711179745112*^9, 
   3.866711184822343*^9}},
 CellLabel->
  "Out[129]//TableForm=",ExpressionUUID->"888c3dfe-d5e9-435d-a2ab-\
dc166374bf2e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 782.25},
WindowMargins->{{1440, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6b749efe-4de6-4ef5-81a5-e56ac96807ba"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 155, 3, 98, "Title",ExpressionUUID->"e16c6739-4a62-4e56-b75b-c3030d8dbab8"],
Cell[738, 27, 482, 9, 29, "Input",ExpressionUUID->"31a3d5b7-a862-4434-bcdf-74b6c5931123"],
Cell[CellGroupData[{
Cell[1245, 40, 202, 3, 29, "Input",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],
Cell[1450, 45, 15759, 367, 203, "Output",ExpressionUUID->"d06fef63-18b0-49b8-a479-51e8550075da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17246, 417, 207, 4, 69, "Chapter",ExpressionUUID->"c980f6be-656d-464c-97de-7bbd91e03ade"],
Cell[17456, 423, 2717, 72, 217, "Input",ExpressionUUID->"a640c9f1-9738-4c46-b19d-979750434b3f"]
}, Closed]],
Cell[CellGroupData[{
Cell[20210, 500, 156, 3, 58, "Chapter",ExpressionUUID->"e172cf77-104a-417b-9e8b-0895cfdd6efc"],
Cell[CellGroupData[{
Cell[20391, 507, 167, 3, 67, "Section",ExpressionUUID->"f58270f5-8f0f-4a1c-9f4c-0201cecf95d8"],
Cell[CellGroupData[{
Cell[20583, 514, 13558, 298, 162, "Input",ExpressionUUID->"660052dc-0b70-46b2-924e-427e0bd9ad48"],
Cell[34144, 814, 135, 3, 26, "Echo",ExpressionUUID->"a7046d12-e243-4df1-b1cb-5c7235936188"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[34328, 823, 213, 4, 53, "Section",ExpressionUUID->"616a2ddc-1005-46d4-8c14-343a4bd3b6ff"],
Cell[CellGroupData[{
Cell[34566, 831, 254, 4, 54, "Subsection",ExpressionUUID->"efe91894-6841-49a9-ab9d-fd0123575c7c"],
Cell[34823, 837, 331, 8, 29, "Input",ExpressionUUID->"169ec1a0-b1c3-4506-b125-378dd25952df"],
Cell[35157, 847, 4751, 75, 133, "Input",ExpressionUUID->"b30edffc-67af-4934-8f33-faee89f4353a"],
Cell[39911, 924, 1294, 28, 133, "Input",ExpressionUUID->"319732b5-cfeb-47c1-acda-faab4d2e172a"],
Cell[CellGroupData[{
Cell[41230, 956, 13090, 179, 29, "Input",ExpressionUUID->"2799844a-7684-4eb7-88cb-2eb8a3232481"],
Cell[54323, 1137, 132476, 2647, 68, "Output",ExpressionUUID->"07131e53-6bac-4d64-a100-056135bf8855"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[186848, 3790, 302, 5, 54, "Subsection",ExpressionUUID->"ad8f60ad-b03c-4795-b29f-2120bea29aab"],
Cell[187153, 3797, 16359, 235, 133, "Input",ExpressionUUID->"5ce8ebfa-b558-499e-a012-4d55894a0d04"],
Cell[CellGroupData[{
Cell[203537, 4036, 351, 7, 29, "Input",ExpressionUUID->"b170e72e-0c32-4303-b9fb-00b577c2bacc"],
Cell[203891, 4045, 40359, 783, 68, "Output",ExpressionUUID->"4d96fb96-eb80-4aff-b66f-79202bf33db2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244299, 4834, 360, 6, 54, "Subsection",ExpressionUUID->"b675450a-34c8-422e-899e-e8ac46fc9f8e"],
Cell[CellGroupData[{
Cell[244684, 4844, 9906, 235, 119, "Input",ExpressionUUID->"17d6edff-ccbc-4c33-ae6f-0bcb97945f31"],
Cell[254593, 5081, 955, 16, 33, "Output",ExpressionUUID->"3751cfcd-1ca2-4f1b-a4fb-fa5dad3cc187"],
Cell[255551, 5099, 12247, 336, 84, "Output",ExpressionUUID->"98684732-b261-4849-9bd8-8ad25f1a72b6"],
Cell[267801, 5437, 1562, 36, 54, "Output",ExpressionUUID->"085c8029-e98b-4c10-979d-0ee169ebb378"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[269412, 5479, 363, 6, 54, "Subsection",ExpressionUUID->"fe3385d8-1e0f-4395-9df9-244ad13d435b"],
Cell[CellGroupData[{
Cell[269800, 5489, 9023, 216, 78, "Input",ExpressionUUID->"c923db83-6a37-4dff-b538-3d1c876e6342"],
Cell[278826, 5707, 901, 26, 54, "Output",ExpressionUUID->"697f6924-11d3-4e19-b54e-3e74a67ae593"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279764, 5738, 373, 6, 29, "Input",ExpressionUUID->"0d96031a-fb3e-4195-9bbc-f328b3fc8e6f"],
Cell[280140, 5746, 643, 15, 80, "Output",ExpressionUUID->"08f6e673-c99f-4bc0-bef2-a2fa3c674403"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[280856, 5769, 207, 4, 69, "Chapter",ExpressionUUID->"ab35440a-cabc-4736-a5ac-e07454ebd2a0"],
Cell[CellGroupData[{
Cell[281088, 5777, 167, 3, 67, "Section",ExpressionUUID->"7a765571-11e0-47e7-bd2b-e5df28d2018f"],
Cell[281258, 5782, 2637, 64, 113, "Input",ExpressionUUID->"32fda3b9-b853-499b-9d93-f6cc5b2d03d6"],
Cell[CellGroupData[{
Cell[283920, 5850, 3284, 65, 113, "Input",ExpressionUUID->"e694fd5c-31a2-4c80-9a3a-3cbb8af0f0d2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[287207, 5917, 1244, 21, 29, "Input",ExpressionUUID->"ec0b1266-533d-40d4-a949-ccce78250c06",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[288454, 5940, 8850, 190, 244, "Output",ExpressionUUID->"5321b087-23ad-4683-86ee-2531a82865f3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[297319, 6133, 8658, 205, 37, "Input",ExpressionUUID->"5f23d7f5-27d3-4f48-9a93-1389f19dc351"]
}, Closed]],
Cell[CellGroupData[{
Cell[306014, 6343, 459, 7, 53, "Section",ExpressionUUID->"fc68a4bd-9bf9-485f-9eed-cf7b8ff25567"],
Cell[306476, 6352, 626, 17, 29, "Input",ExpressionUUID->"afc9d31b-db6d-45ca-8b6b-e25b97a5ac3c"],
Cell[CellGroupData[{
Cell[307127, 6373, 404, 6, 54, "Subsection",ExpressionUUID->"9502650c-75ff-4479-bca2-f7b8b0c4641d"],
Cell[307534, 6381, 1409, 31, 174, "Input",ExpressionUUID->"5fefb9b9-6e54-460e-b544-a43d033404b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308980, 6417, 450, 7, 54, "Subsection",ExpressionUUID->"d41cd2db-8088-4737-b918-a082c6448deb"],
Cell[309433, 6426, 16343, 232, 113, "Input",ExpressionUUID->"5e8aefb1-dfc7-4620-8212-9b7f8316e5ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325813, 6663, 453, 7, 54, "Subsection",ExpressionUUID->"7822fb59-1347-4e85-b721-29a9f368ef8e"],
Cell[CellGroupData[{
Cell[326291, 6674, 404, 8, 29, "Input",ExpressionUUID->"e96a481e-3ba1-4201-9c24-39f96d06cf2b"],
Cell[326698, 6684, 47470, 1080, 503, "Output",ExpressionUUID->"7bf57373-2680-4c0e-988d-6afc45cab670"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374205, 7769, 850, 23, 29, "Input",ExpressionUUID->"ab7dbe79-e09e-4650-a090-5ccdb3b423b3"],
Cell[375058, 7794, 337, 6, 67, "Output",ExpressionUUID->"8e87a1d1-a94d-4e73-a5cb-aa6077add3b1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[375456, 7807, 408, 6, 67, "Section",ExpressionUUID->"5330bb32-e656-4b8b-bb36-16ab02f0840f"],
Cell[CellGroupData[{
Cell[375889, 7817, 404, 6, 54, "Subsection",ExpressionUUID->"9ccf4bd6-05a1-49f1-915f-95679eedaa4f"],
Cell[376296, 7825, 3935, 64, 133, "Input",ExpressionUUID->"feba2f53-f4f5-43e6-a86d-fb7cc5e96658"],
Cell[380234, 7891, 2261, 42, 133, "Input",ExpressionUUID->"923f7933-891f-49a3-bbf5-d8f8183fe2d7"],
Cell[CellGroupData[{
Cell[382520, 7937, 13111, 178, 29, "Input",ExpressionUUID->"ff705697-08c0-41db-8a85-131ecdba22d6"],
Cell[395634, 8117, 130115, 2605, 68, "Output",ExpressionUUID->"50bfc0f0-ea86-4436-abf0-40475603dcc5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[525798, 10728, 450, 7, 54, "Subsection",ExpressionUUID->"22d0189b-d6a7-44ad-b35a-70f7e8d0dd81"],
Cell[526251, 10737, 16328, 233, 133, "Input",ExpressionUUID->"fbdac8c7-4549-4743-864d-e467d909f319"],
Cell[CellGroupData[{
Cell[542604, 10974, 347, 6, 29, "Input",ExpressionUUID->"c3a89cf2-7844-4806-bca2-4513232e25d6"],
Cell[542954, 10982, 40375, 769, 68, "Output",ExpressionUUID->"809a6ee5-357e-43bf-a4db-99f1b41d42dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[583378, 11757, 409, 6, 54, "Subsection",ExpressionUUID->"e2a69d6c-fddf-4ce0-9a60-6b136e91fb12"],
Cell[CellGroupData[{
Cell[583812, 11767, 10691, 245, 119, "Input",ExpressionUUID->"a637f3cb-d7f7-4492-ad2f-108fbd4b3b99"],
Cell[594506, 12014, 341, 6, 33, "Output",ExpressionUUID->"8a777b3a-df85-4176-aad3-8d64e243a663"],
Cell[594850, 12022, 2208, 62, 79, "Output",ExpressionUUID->"d85624e4-40d6-4eb0-9271-2110abc4afbe"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[597107, 12090, 262, 4, 54, "Subsection",ExpressionUUID->"76d42d52-0573-4522-b5b7-498e3dde144e"],
Cell[CellGroupData[{
Cell[597394, 12098, 9118, 217, 78, "Input",ExpressionUUID->"4ca549a6-f4a8-48b8-bd04-5ba2c91f7834"],
Cell[606515, 12317, 2184, 62, 79, "Output",ExpressionUUID->"5af11bb9-3e2e-4f0c-aada-7c6c8cb685c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[608736, 12384, 369, 5, 29, "Input",ExpressionUUID->"d5dbb3ee-e45f-4e95-8066-408558b38cda"],
Cell[609108, 12391, 688, 15, 80, "Output",ExpressionUUID->"97995fef-d7ec-49dd-82e8-9c24cc476586"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[609869, 12414, 268, 4, 69, "Chapter",ExpressionUUID->"3dfd48ae-245d-41a3-9ee6-9f48a3126503"],
Cell[CellGroupData[{
Cell[610162, 12422, 358, 6, 54, "Subsection",ExpressionUUID->"dbaf4b13-bbf1-46b2-a867-cbe6ab3057db"],
Cell[610523, 12430, 5236, 78, 113, "Input",ExpressionUUID->"282b1129-9bb6-4375-827d-fe1a21de5e52"],
Cell[615762, 12510, 690, 12, 29, "Input",ExpressionUUID->"4dd2a1a1-93c1-4c86-8a53-3799d9a2326a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616489, 12527, 399, 6, 54, "Subsection",ExpressionUUID->"79776b36-72e3-45be-ba51-f07dffccf849"],
Cell[616891, 12535, 14210, 208, 154, "Input",ExpressionUUID->"85ad096e-ed5c-44c2-8c3a-979fde4a03c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[631138, 12748, 352, 6, 54, "Subsection",ExpressionUUID->"be01f422-1c1f-4ec9-a959-bf38e8105582"],
Cell[CellGroupData[{
Cell[631515, 12758, 726, 10, 29, "Input",ExpressionUUID->"1fe03ab7-3007-4e7c-b36b-88dfd49533c2"],
Cell[632244, 12770, 5653, 81, 33, "Output",ExpressionUUID->"fb9922be-4d44-44fa-a740-90fd86c255a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[637934, 12856, 9433, 220, 78, "Input",ExpressionUUID->"cc7fdd2c-831f-4bbf-9c2a-d697ed7670ea"],
Cell[647370, 13078, 4310, 104, 122, "Output",ExpressionUUID->"deeafa17-d205-41b4-9334-177d0b32d635"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[651741, 13189, 201, 4, 58, "Chapter",ExpressionUUID->"c33fd357-ab86-4dac-a5dc-fb8a483872d5"],
Cell[651945, 13195, 273, 7, 29, "Input",ExpressionUUID->"de7ef9f2-bf67-4869-9b14-c25b89d18d50"],
Cell[652221, 13204, 1445, 29, 113, "Input",ExpressionUUID->"bc6db55e-26bf-4b50-b858-d1f8d36a7f5d"],
Cell[CellGroupData[{
Cell[653691, 13237, 180, 2, 29, "Input",ExpressionUUID->"6d34ed3b-51bc-44b4-808a-b94741a281be"],
Cell[653874, 13241, 40013, 776, 65, "Output",ExpressionUUID->"59272152-9db5-48d0-be76-82286de44f0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[693924, 14022, 322, 4, 29, "Input",ExpressionUUID->"fe5c636c-8593-4cfc-87d1-773a1f91eaaa"],
Cell[694249, 14028, 920, 20, 33, "Output",ExpressionUUID->"83c98a4d-93fd-4565-8476-398e81849e11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[695206, 14053, 2384, 50, 205, "Input",ExpressionUUID->"169d1825-60ee-4c8f-8445-570d5fccd98f"],
Cell[697593, 14105, 8093, 211, 96, "Output",ExpressionUUID->"c501aada-6d6b-4aea-b904-56ae777e4d46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[705723, 14321, 866, 22, 29, "Input",ExpressionUUID->"6cc1fdce-7f5f-4a7c-926c-c4ca2dd77b5f"],
Cell[706592, 14345, 1722, 35, 338, "Output",ExpressionUUID->"8449491d-4b7c-4221-ac07-c57c3880e1ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[708351, 14385, 721, 20, 29, "Input",ExpressionUUID->"bf0b3ffe-c458-4ae2-91cd-559a0e4893ed"],
Cell[709075, 14407, 213, 4, 33, "Output",ExpressionUUID->"54098ace-c3ee-4c74-9902-35f4d41fd1bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[709325, 14416, 729, 21, 29, "Input",ExpressionUUID->"aa44aad1-1115-4523-a9ab-ee67832a048c"],
Cell[710057, 14439, 172, 3, 33, "Output",ExpressionUUID->"20abb2b9-3753-4260-b884-dfc5d8df7750"]
}, Open  ]],
Cell[CellGroupData[{
Cell[710266, 14447, 777, 22, 29, "Input",ExpressionUUID->"a918ddc8-77be-45c0-9c05-b97b2569d4c0"],
Cell[711046, 14471, 244, 5, 33, "Output",ExpressionUUID->"1e3c2217-2fcc-4be2-b05f-c95a2d0115f9"]
}, Open  ]],
Cell[711305, 14479, 517, 12, 29, "Input",ExpressionUUID->"61d9a787-3a0e-4b53-8006-b86de31e2e04"],
Cell[CellGroupData[{
Cell[711847, 14495, 893, 22, 29, "Input",ExpressionUUID->"920ba031-7529-4a91-8b10-318726fa7de3"],
Cell[712743, 14519, 1842, 59, 55, "Output",ExpressionUUID->"191fff66-ad01-46df-9380-5fe20aa72d15"]
}, Open  ]],
Cell[714600, 14581, 344, 9, 29, "Input",ExpressionUUID->"ac635061-b89e-4505-946d-08bb776f6c7b"],
Cell[CellGroupData[{
Cell[714969, 14594, 682, 19, 29, "Input",ExpressionUUID->"a66b973c-7ff1-400a-9eb6-28334625f218"],
Cell[715654, 14615, 1220, 39, 55, "Output",ExpressionUUID->"a45f8321-3674-47a8-a21e-084f90c619cc"]
}, Open  ]],
Cell[716889, 14657, 316, 8, 29, "Input",ExpressionUUID->"716eba66-73ac-42f3-b4ac-35d3ca6ee8d9"],
Cell[CellGroupData[{
Cell[717230, 14669, 407, 10, 29, "Input",ExpressionUUID->"b3c21cc0-39ce-4a84-940b-882f155fe182"],
Cell[717640, 14681, 546, 16, 33, "Output",ExpressionUUID->"3fdf23ff-ebfe-4408-b5fc-962e2f6fb451"]
}, Open  ]],
Cell[718201, 14700, 348, 9, 29, "Input",ExpressionUUID->"fc5dc23c-36c9-4e72-9a30-664c4802610b"],
Cell[CellGroupData[{
Cell[718574, 14713, 686, 20, 29, "Input",ExpressionUUID->"91db8c7d-75cb-4413-8571-57e8749a6ecc"],
Cell[719263, 14735, 1833, 60, 55, "Output",ExpressionUUID->"00574200-d292-4a2d-8604-bc5a1fd87957"]
}, Open  ]],
Cell[721111, 14798, 344, 9, 29, "Input",ExpressionUUID->"25ef7f00-67d5-4c0f-bd2e-71df0a086cf3"],
Cell[CellGroupData[{
Cell[721480, 14811, 182, 3, 29, "Input",ExpressionUUID->"fb22e6a0-65ec-4f72-b0a6-c0b6443db93f"],
Cell[721665, 14816, 91664, 1853, 68, "Output",ExpressionUUID->"4adcbb01-9c31-4654-8bba-9f48b84e97dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[813366, 16674, 183, 3, 29, "Input",ExpressionUUID->"2da4e397-54e2-4142-9de1-4e0a62486e93"],
Cell[813552, 16679, 1315, 39, 75, "Output",ExpressionUUID->"6484124f-69cc-40f8-a84c-d68f451df861"]
}, Open  ]],
Cell[814882, 16721, 343, 9, 29, "Input",ExpressionUUID->"de9be2d5-5ff9-4670-b4ba-f78e43517118"],
Cell[CellGroupData[{
Cell[815250, 16734, 184, 3, 29, "Input",ExpressionUUID->"c2754fbf-2e81-41cd-82a9-a803f730b448"],
Cell[815437, 16739, 91613, 1852, 68, "Output",ExpressionUUID->"0d41b877-dd56-439f-a2ad-549da701da54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[907087, 18596, 186, 3, 29, "Input",ExpressionUUID->"547083b0-9e5f-49ba-b9d5-295e0c88e65e"],
Cell[907276, 18601, 960, 29, 55, "Output",ExpressionUUID->"1c7b9d8e-0c3e-4a0e-b9f7-28f0af3ad991"]
}, Open  ]],
Cell[CellGroupData[{
Cell[908273, 18635, 348, 8, 29, "Input",ExpressionUUID->"610b8754-f10a-478b-b5b3-b2a1449a727e"],
Cell[908624, 18645, 175, 3, 33, "Output",ExpressionUUID->"a922951c-f416-4d4b-af1a-2b57839d7293"]
}, Open  ]],
Cell[CellGroupData[{
Cell[908836, 18653, 483, 14, 29, "Input",ExpressionUUID->"dd640250-de7f-4e06-a4e1-4bfcfc268f07"],
Cell[909322, 18669, 318, 9, 33, "Output",ExpressionUUID->"d430acd7-6dff-43af-b0c6-2e5d5670546a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[909677, 18683, 476, 14, 29, "Input",ExpressionUUID->"43b7a136-9715-4ac3-b4c6-ae4c67d64f81"],
Cell[910156, 18699, 224, 6, 33, "Output",ExpressionUUID->"27c28e2e-a9c6-4704-8aed-9e5dac45234d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[910417, 18710, 548, 13, 29, "Input",ExpressionUUID->"74b6e91b-ac96-4b0b-a82e-daebab03bc91"],
Cell[910968, 18725, 757, 21, 96, "Output",ExpressionUUID->"9a6fc6e6-b2cd-4bbb-8e08-e04b2a663d96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[911762, 18751, 470, 12, 29, "Input",ExpressionUUID->"f903ccb4-dd41-45a7-a3fa-61ec949a982c"],
Cell[912235, 18765, 739, 22, 96, "Output",ExpressionUUID->"888c3dfe-d5e9-435d-a2ab-dc166374bf2e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

